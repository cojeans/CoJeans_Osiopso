{"version":3,"file":"order-map.min.js","sources":["../src/OrderMap.ts"],"sourcesContent":["import { IObject } from \"@daybrush/utils\";\n\n/**\n *\n */\nclass OrderMap<T = number | string> {\n    public orderMap: IObject<T[]> = {};\n\n    /**\n     *\n     */\n    constructor(private separator: string) { }\n\n    /**\n     *\n     */\n    public getFullName(names: T[]) {\n        return names.join(this.separator);\n    }\n\n    /**\n     *\n     */\n    public get(names: T[]): T[] | undefined {\n        return this.orderMap[this.getFullName(names)];\n    }\n\n    /**\n     *\n     */\n    public gets(names: T[], isFull = true): T[][] {\n        const fullOrders: T[][] = [];\n        const self = this;\n        function pushOrders(nextNames: T[], stack: T[]) {\n            const orders = self.get(nextNames);\n\n            if (!orders) {\n                return;\n            }\n            orders.forEach(name => {\n                const nextStack = [...stack, name];\n                const nextOrders = pushOrders([...nextNames, name], nextStack);\n\n                if (!nextOrders || !nextOrders.length) {\n                    fullOrders.push([...stack, name]);\n                }\n            });\n            return orders;\n        }\n\n        pushOrders(names, isFull ? names : []);\n\n        return fullOrders;\n    }\n\n    /**\n     *\n     */\n    public set(names: T[], orders: T[]): T[] {\n        names.forEach((name, i) => {\n            this.addName(names.slice(0, i), name);\n        });\n        this.orderMap[this.getFullName(names)] = orders;\n\n        return orders;\n    }\n\n    /**\n     *\n     */\n    public add(names: T[]): T[] {\n        const length = names.length;\n\n        if (!length) {\n            return [];\n        }\n        return this.addName(names.slice(0, -1), names[length - 1]);\n    }\n\n    /**\n     *\n     */\n    public addName(names: T[], name: T): T[] {\n        const orders = this.get(names) || this.set(names, []);\n\n        if (orders.indexOf(name) === -1) {\n            orders.push(name);\n        }\n        return orders;\n    }\n\n    /**\n     *\n     */\n    public findIndex(names: T[], orderName: T): number {\n        const orders = this.orderMap[this.getFullName(names)];\n\n        if (!orders) {\n            return -1;\n        }\n        return orders.indexOf(orderName);\n    }\n\n    /**\n     *\n     */\n    public remove(names: T[]): this {\n        const fullName = this.getFullName(names);\n        const orderMap = this.orderMap;\n\n        for (const name in orderMap) {\n            if (name.indexOf(fullName) === 0) {\n                delete orderMap[name];\n            }\n        }\n        const length = names.length;\n\n        if (length) {\n            const prevNames = names.slice(0, -1);\n            const lastName = names[length - 1];\n\n            this.splice(prevNames, this.findIndex(prevNames, lastName), 1);\n        }\n        return this;\n    }\n\n    /**\n     *\n     */\n    public filter(\n        names: T[],\n        callback: (value: T[], index: number, arr: T[][]) => boolean,\n        isFull = true,\n    ) {\n        const result = this.gets(names, isFull).filter(callback);\n        const map = new OrderMap<T>(this.separator);\n        const stack = isFull ? [] : names;\n\n        result.forEach(nextNames => {\n            map.add([...stack, ...nextNames]);\n        });\n\n        return map;\n    }\n\n    /**\n     *\n     */\n    public splice(names: T[], index: number, deleteCount: number, ...orders: T[]) {\n        const currentOrders = this.get(names) || this.set(names, []);\n\n        currentOrders.splice(index, deleteCount, ...orders);\n\n        return this;\n    }\n\n    /**\n     *\n     */\n    public clear() {\n        this.orderMap = {};\n    }\n\n    /**\n     *\n     */\n    public setObject(obj: IObject<T[]>) {\n        const orderMap = this.orderMap;\n\n        for (const name in obj) {\n            orderMap[name] = obj[name].slice();\n        }\n    }\n    /**\n     *\n     */\n    public getObject(): IObject<T[]> {\n        const nextMap = {};\n\n        const orderMap = this.orderMap;\n        for (const name in orderMap) {\n            nextMap[name] = orderMap[name].slice();\n        }\n        return nextMap;\n    }\n    /**\n     *\n     */\n    public clone() {\n        const map = new OrderMap<T>(this.separator);\n\n        map.setObject(map.orderMap);\n        return map;\n    }\n}\n\nexport default OrderMap;\n"],"names":["separator","names","join","this","orderMap","getFullName","isFull","fullOrders","self","pushOrders","nextNames","stack","orders","get","forEach","name","nextStack","nextOrders","length","push","i","_this","addName","slice","set","indexOf","orderName","fullName","prevNames","lastName","splice","findIndex","callback","result","gets","filter","map","OrderMap","add","index","deleteCount","_i","currentOrders","obj","nextMap","setObject"],"mappings":";;;;;;;;2NAWwBA,kBAAAA,gBALY,0CAUhC,SAAmBC,UACRA,EAAMC,KAAKC,KAAKH,kBAM3B,SAAWC,UACAE,KAAKC,SAASD,KAAKE,YAAYJ,YAM1C,SAAYA,EAAYK,gBAAAA,UACdC,EAAoB,GACpBC,EAAOL,qBACJM,EAAWC,EAAgBC,OAC1BC,EAASJ,EAAKK,IAAIH,MAEnBE,SAGLA,EAAOE,QAAQ,SAAAC,OACLC,EAAgBL,UAAOI,IACvBE,EAAaR,EAAeC,UAAWK,IAAOC,GAE/CC,GAAeA,EAAWC,QAC3BX,EAAWY,KAASR,UAAOI,OAG5BH,EAGXH,CAAWR,EAAOK,EAASL,EAAQ,IAE5BM,SAMX,SAAWN,EAAYW,qBACnBX,EAAMa,QAAQ,SAACC,EAAMK,GACjBC,EAAKC,QAAQrB,EAAMsB,MAAM,EAAGH,GAAIL,UAE/BX,SAASD,KAAKE,YAAYJ,IAAUW,SAQ7C,SAAWX,OACDiB,EAASjB,EAAMiB,cAEhBA,EAGEf,KAAKmB,QAAQrB,EAAMsB,MAAM,GAAI,GAAItB,EAAMiB,EAAS,IAF5C,cAQf,SAAejB,EAAYc,OACjBH,EAAST,KAAKU,IAAIZ,IAAUE,KAAKqB,IAAIvB,EAAO,WAEpB,IAA1BW,EAAOa,QAAQV,IACfH,EAAOO,KAAKJ,GAETH,eAMX,SAAiBX,EAAYyB,OACnBd,EAAST,KAAKC,SAASD,KAAKE,YAAYJ,WAEzCW,EAGEA,EAAOa,QAAQC,IAFV,YAQhB,SAAczB,OACJ0B,EAAWxB,KAAKE,YAAYJ,GAC5BG,EAAWD,KAAKC,aAEjB,IAAMW,KAAQX,EACgB,IAA3BW,EAAKU,QAAQE,WACNvB,EAASW,OAGlBG,EAASjB,EAAMiB,UAEjBA,EAAQ,KACFU,EAAY3B,EAAMsB,MAAM,GAAI,GAC5BM,EAAW5B,EAAMiB,EAAS,QAE3BY,OAAOF,EAAWzB,KAAK4B,UAAUH,EAAWC,GAAW,UAEzD1B,eAMX,SACIF,EACA+B,EACA1B,gBAAAA,UAEM2B,EAAS9B,KAAK+B,KAAKjC,EAAOK,GAAQ6B,OAAOH,GACzCI,EAAM,IAAIC,EAAYlC,KAAKH,WAC3BW,EAAQL,EAAS,GAAKL,SAE5BgC,EAAOnB,QAAQ,SAAAJ,GACX0B,EAAIE,IAAQ3B,SAAUD,MAGnB0B,YAMX,SAAcnC,EAAYsC,EAAeC,oBAAqBC,mBAAAA,IAAA7B,wBACpD8B,EAAgBvC,KAAKU,IAAIZ,IAAUE,KAAKqB,IAAIvB,EAAO,WAEzDyC,EAAcZ,aAAdY,GAAqBH,EAAOC,UAAgB5B,IAErCT,cAMX,gBACSC,SAAW,gBAMpB,SAAiBuC,OACPvC,EAAWD,KAAKC,aAEjB,IAAMW,KAAQ4B,EACfvC,EAASW,GAAQ4B,EAAI5B,GAAMQ,qBAMnC,eACUqB,EAAU,GAEVxC,EAAWD,KAAKC,aACjB,IAAMW,KAAQX,EACfwC,EAAQ7B,GAAQX,EAASW,GAAMQ,eAE5BqB,WAKX,eACUR,EAAM,IAAIC,EAAYlC,KAAKH,kBAEjCoC,EAAIS,UAAUT,EAAIhC,UACXgC"}