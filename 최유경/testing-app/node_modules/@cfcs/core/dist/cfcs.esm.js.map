{"version":3,"file":"cfcs.esm.js","sources":["../src/core/utils.ts","../src/dom/utils.ts","../src/reactive/const.ts","../src/reactive/detectDependencies.ts","../src/reactive/Observer.ts","../src/reactive/ComputedObserver.ts","../src/reactive/decorators/Observe.ts","../src/reactive/decorators/ReactiveSubscribe.ts","../src/reactive/inline.ts","../src/reactive/utils.ts","../src/reactive/adaptReactive.ts","../src/reactive/decorators/Computed.ts"],"sourcesContent":["/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n\nexport function isString(val: any): val is string {\n  return typeof val === \"string\";\n}\n\nexport function isObject(val: any): val is object {\n  return typeof val === \"object\";\n}\n\nexport function isFunction(val: any): val is Function {\n  return typeof val === \"function\";\n}\n","import { isString, Ref } from \"../core\";\n\nexport function findTarget<Target extends Element = Element>(target: string | Target | Ref<Target> | null): Target | null {\n  let el!: Target;\n\n  if (!target) {\n    return null;\n  } if (isString(target)) {\n    el = document.querySelector<Target>(target)!;\n  } else if (target instanceof Element) {\n    el = target;\n  } else if (\"value\" in target || \"current\" in target) {\n    el = target.value! || target.current!;\n  }\n\n  return el;\n}\n\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","export const OBSERVERS_PATH = \"__observers__\";\nexport const REACTIVE_PATH = \"__reactive__\";\nexport const CFCS_DETECTED_DEPENDENCIES_VERSION = 1;\nexport const CFCS_DETECTED_DEPENDENCIES = \"__CFCS_DETECTED_DEPENDENCIES__\";\n","import {\n  CFCS_DETECTED_DEPENDENCIES,\n  CFCS_DETECTED_DEPENDENCIES_VERSION,\n} from \"./const\";\nimport { Observer } from \"./Observer\";\n\nexport interface Detected {\n  host: Observer<any>;\n  observers: Array<Observer<any>>;\n  push(observer: Observer<any>): void;\n}\n\nexport function getDetectedStack(): Array<Detected> {\n  // Version issues do not occur when you access the native object in the global.\n  (Object as any)[CFCS_DETECTED_DEPENDENCIES] = (Object as any)[CFCS_DETECTED_DEPENDENCIES] || {};\n  const versionList = (Object as any)[CFCS_DETECTED_DEPENDENCIES];\n\n  versionList[CFCS_DETECTED_DEPENDENCIES_VERSION] = versionList[CFCS_DETECTED_DEPENDENCIES_VERSION] || [];\n\n  return versionList[CFCS_DETECTED_DEPENDENCIES_VERSION];\n}\n\nexport function getCurrentDetected(): Detected | undefined {\n  const stack = getDetectedStack();\n\n  return stack[stack.length - 1];\n}\n\nexport function detectDependencies(host: Observer<any>) {\n  const stack = getDetectedStack();\n  const observers: Array<Observer> = [];\n  const detected: Detected = {\n    host,\n    observers,\n    push(observer: Observer<any>) {\n      if (host !== observer && observers.indexOf(observer) === -1) {\n        observers.push(observer);\n      }\n    },\n  };\n\n  stack.push(detected);\n  return detected;\n}\n\nexport function endDetectDependencies() {\n  const stack = getDetectedStack();\n\n  return stack.pop();\n}\n","import Component from \"@egjs/component\";\nimport { getCurrentDetected } from \"./detectDependencies\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value, prevValue: Value) => void;\n}\n\n/**\n * @memberof Reactive\n */\nexport class Observer<Value = any> {\n  protected _current: Value;\n  protected _emitter = new Component<EmitterEvents<Value>>();\n\n  /**\n   *\n   */\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  public get current() {\n    const currentDetected = getCurrentDetected();\n\n    currentDetected?.push(this);\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    this._setCurrent(value);\n  }\n  public subscribe(callback: (value: Value, prevValue: Value) => void) {\n    this.current;\n    this._emitter.on(\"update\", callback);\n    return this;\n  }\n  public unsubscribe(callback?: (value: Value, prevValue: Value) => void) {\n    this._emitter.off(\"update\", callback);\n    return this;\n  }\n  protected _setCurrent(value: Value) {\n    const prevValue = this._current;\n    const isUpdate = value !== prevValue;\n\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value, prevValue);\n    }\n  }\n  public toString() {\n    return `${this.current}`;\n  }\n  public valueOf() {\n    return this.current;\n  }\n}\n","import { detectDependencies, endDetectDependencies } from \"./detectDependencies\";\nimport { Observer } from \"./Observer\";\n\n/**\n * @memberof Reactive\n * @extends Reactive.Observer\n */\nexport class ComputedObserver<T> extends Observer<T> {\n  private _registered: Array<Observer<any>> = [];\n  /**\n   * Creates a new computed observer from the values of other observers.\n   * It is read-only and if you change the value of the observer used inside the callback, its value will be automatically updated.\n   * @param _computedCallback A function for observers to be computed.\n   */\n  constructor(private _computedCallback: () => T) {\n    super();\n\n    this._current = this.current;\n  }\n\n  get current() {\n    detectDependencies(this);\n    const value = this._computedCallback();\n    const results = endDetectDependencies()!;\n\n    this._registered.forEach(observer => {\n      observer.unsubscribe(this._onCheckUpdate);\n    });\n    results.observers.forEach(observer => {\n      observer.subscribe(this._onCheckUpdate);\n    });\n    this._registered = results.observers;\n\n    return value;\n  }\n\n  private _onCheckUpdate = () => {\n    this._setCurrent(this.current);\n  }\n}\n","import { getObserver } from \"../utils\";\n\n\nfunction injectObserve(prototype: any, memberName: string, publicName = memberName) {\n  const nextAttributes: PropertyDescriptor = {\n    configurable: true,\n    get: function () {\n      return getObserver(this, publicName).current;\n    },\n    set: function (value: any) {\n      getObserver(this, publicName, value).current = value;\n    },\n  };\n  Object.defineProperty(prototype, memberName, nextAttributes);\n  if (publicName !== memberName) {\n    Object.defineProperty(prototype, publicName, {\n      configurable: true,\n      get: function () {\n        return getObserver(this, publicName).current;\n      },\n    });\n  }\n}\nexport function Observe(protoype: any, memberName: string): void;\nexport function Observe(name?: string): (protoype: any, memberName: string) => void;\nexport function Observe(...args: any[]) {\n  if (args.length > 1) {\n    return injectObserve(args[0], args[1]);\n  }\n\n  return (prototype: any, memberName: string) => injectObserve(prototype, memberName, args[0]);\n}\n\n\nexport function Reactive(protoype: any, memberName: string): void;\nexport function Reactive(name?: string): (protoype: any, memberName: string) => void;\nexport function Reactive(...args: any[]) {\n  return Observe(...args);\n}\n\n","import { keys } from \"../../core\";\nimport { getObserver, getObservers } from \"../utils\";\n\nexport function injectReactiveSubscribe(object: Record<string, any>,) {\n  object[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n    this[name];\n    getObserver(this, name).subscribe(callback);\n  };\n  object[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n    if (!name) {\n      keys(getObservers(this)).forEach((observerName) => {\n        this.unsubscribe(observerName);\n      });\n      return;\n    }\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\n\nexport function ReactiveSubscribe(Constructor: any) {\n  const prototype = Constructor.prototype;\n\n  injectReactiveSubscribe(prototype);\n}\n\n/**\n * @typedef\n */\nexport interface ReactiveSubscribe<State extends Record<string, any>> {\n  /**\n   * When the value of the property changes, the callback function is called.\n   */\n  subscribe<Name extends keyof State = keyof State>(\n    name: Name, callback: (value: State[Name]) => void): void;\n  /**\n   * Unregister the callback function corresponding to the property.\n   */\n  unsubscribe<Name extends keyof State = keyof State>(\n    name?: Name, callback?: (value: State[Name]) => void): void;\n}\n","import { ComputedObserver } from \"./ComputedObserver\";\nimport { Observer } from \"./Observer\";\nimport { ExtractNever, isFunction, keys } from \"../core\";\nimport { Observe } from \"./decorators/Observe\";\nimport { injectReactiveSubscribe, ReactiveSubscribe } from \"./decorators/ReactiveSubscribe\";\nimport { defineObservers, isObserver, setObserver } from \"./utils\";\n\n\ntype ConvertValue<Object extends Record<string, any>> = {\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : Object[Key];\n}\n\ntype PickObverser<Object extends Record<string, any>> = ExtractNever<{\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : never;\n}>;\n\nexport type ReactiveObject<Object extends Record<string, any>>\n  = ConvertValue<Object> & ReactiveSubscribe<PickObverser<Object>>;\n\nexport function reactive<Object extends Record<string, any>>(\n  setup: Readonly<Object> | (() => Readonly<Object>),\n  all?: boolean,\n): ReactiveObject<Object> {\n  const result = isFunction(setup) ? setup() : setup;\n  const reactiveObject: Record<string, any> = {};\n\n  defineObservers(reactiveObject);\n  keys(result).forEach((name: any) => {\n    const value = result[name];\n\n    if (isObserver(value)) {\n      setObserver(reactiveObject, name, value);\n    } else if (!all) {\n      reactiveObject[name] = value;\n      return;\n    } else {\n      setObserver(reactiveObject, name, observe(value));\n    }\n    Observe(name)(reactiveObject, name);\n  });\n\n  injectReactiveSubscribe(reactiveObject);\n  return reactiveObject as ReactiveObject<Object>;\n}\n\nexport function computed<Type>(computedCallback: () => Type) {\n    return new ComputedObserver(computedCallback);\n}\n\nexport function observe<Type>(defaultValue?: Type): Observer<Type> {\n    return new Observer<Type>(defaultValue);\n}\n","import { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { ReactiveMethods } from \"./types\";\nimport { isObject, Ref } from \"../core\";\nimport { observe } from \"./inline\";\n\n\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods?: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  if (!methods) {\n    return obj;\n  }\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n\nexport function defineObservers(instance: any) {\n  const observers: Record<string, Observer<any>> = {};\n\n  Object.defineProperty(instance, OBSERVERS_PATH, {\n    get() {\n      return observers;\n    },\n  });\n\n  return observers;\n}\n\nexport function getObservers(instance: any): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    defineObservers(instance);\n  }\n  return instance[OBSERVERS_PATH];\n}\n\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n  return observers[name];\n}\n\nexport function setObserver(instance: any, name: string, observer: Observer<any>) {\n  const observers = getObservers(instance);\n\n  observers[name] = observer;\n}\n\nexport function isObserver(val: any): val is Observer {\n  return val && isObject(val) && (\"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val);\n}\n\n","import { keys } from \"../core\";\nimport { Ref } from \"../core/types\";\nimport { ReactiveAdapter } from \"./ReactiveAdapter\";\nimport { ReactiveSubscribe } from \"./decorators/ReactiveSubscribe\";\nimport { ReactiveEventCallback } from \"./types\";\nimport { getObservers, withReactiveMethods } from \"./utils\";\n\nexport function adaptReactive<\n  Instance extends ReactiveSubscribe<Record<string, any>>,\n  State extends Record<string, any> = {},\n  Methods extends keyof Partial<Instance> = any,\n  Data = any,\n  Events extends Record<string, any> = {},\n  >(adapter: ReactiveAdapter<Instance, State, Methods, Data, Events>) {\n\n  function data(): Data {\n    return adapter.data?.() ?? {} as Data;\n  }\n\n  const instanceRef: Ref<Instance> = { current: adapter.created?.(data()) || null };\n  let firstState: State | null = null;\n\n  return {\n    state(): State {\n      const inst = instanceRef.current;\n\n      if (firstState) {\n        return firstState;\n      }\n      if (adapter.state) {\n        firstState = adapter.state;\n      } else if (inst) {\n        const observers = getObservers(inst);\n\n        firstState = keys(observers).reduce((prev, cur) => {\n          prev[cur] = observers[cur].current;\n          return prev;\n        }, {} as any);\n      }\n      return firstState || {} as State;\n    },\n    instance() {\n      return instanceRef.current;\n    },\n    mounted(): void {\n      instanceRef.current = adapter.mounted?.(data(), instanceRef.current) || instanceRef.current;\n    },\n    init(): void {\n      adapter.init?.(instanceRef.current!, data());\n    },\n    destroy(): void {\n      adapter.destroy?.(instanceRef.current!, data());\n    },\n    methods() {\n      return withReactiveMethods<any, any, any>(instanceRef, adapter.methods);\n    },\n    on(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      adapter.on?.(instanceRef.current!, eventName as never, listener);\n    },\n    off(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      adapter.off?.(instanceRef.current!, eventName as never, listener);\n    },\n  };\n}\n","import { computed } from \"../inline\";\nimport { getObserver, getObservers } from \"../utils\";\n\n\nexport function Computed(prototype: any, memberName: string, attributes: PropertyDescriptor): PropertyDescriptor {\n    const get = attributes.get!;\n    function getComputed() {\n        const observers = getObservers(this);\n\n        if (!(memberName in observers)) {\n            observers[memberName] = computed(get.bind(this));\n        }\n        return getObserver(this, memberName).current;\n    }\n    const nextAttributes: PropertyDescriptor = {\n        configurable: true,\n        get: getComputed,\n    }\n\n    Object.defineProperty(prototype, memberName, nextAttributes);\n\n    return nextAttributes;\n}\n"],"names":["keys","obj","Object","camelize","str","replace","all","letter","toUpperCase","isString","val","isObject","isFunction","findTarget","target","el","document","querySelector","Element","value","current","withClassMethods","methods","prototype","memberName","forEach","name","args","_i","arguments","length","result","_a","apply","OBSERVERS_PATH","CFCS_DETECTED_DEPENDENCIES_VERSION","CFCS_DETECTED_DEPENDENCIES","getDetectedStack","versionList","getCurrentDetected","stack","detectDependencies","host","observers","detected","push","observer","indexOf","endDetectDependencies","pop","Observer","_emitter","Component","_current","defineProperty","get","currentDetected","set","_setCurrent","subscribe","callback","on","unsubscribe","off","prevValue","isUpdate","trigger","toString","concat","valueOf","ComputedObserver","_super","__extends","_computedCallback","_this","_registered","_onCheckUpdate","results","injectObserve","publicName","nextAttributes","configurable","getObserver","Observe","Reactive","injectReactiveSubscribe","object","getObservers","observerName","ReactiveSubscribe","Constructor","reactive","setup","reactiveObject","defineObservers","isObserver","setObserver","observe","computed","computedCallback","defaultValue","withReactiveMethods","ref","instance","adaptReactive","adapter","data","_b","call","instanceRef","created","firstState","state","inst","observers_1","reduce","prev","cur","mounted","init","destroy","eventName","listener","Computed","attributes","getComputed","bind"],"mappings":"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"}