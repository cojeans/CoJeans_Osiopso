import { Frame } from "scenejs";
import { OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart, OnScaleStart, OnScale, OnRotate, OnRotateStart, OnDragGroupStart, OnDragGroup, OnResizeGroupStart, OnResizeGroup, OnScaleGroupStart, OnScaleGroup, OnRotateGroupStart, OnRotateGroup, OnWarp, OnWarpStart, OnClip, OnDragOriginStart, OnDragOrigin, OnRound, OnBeforeRenderStart, OnBeforeRenderGroupStart } from "react-moveable/declaration/types";
import { MoveableHelperOptions } from "./types";
export default class MoveableHelper {
    static create(options: Partial<MoveableHelperOptions>): MoveableHelper;
    options: Partial<MoveableHelperOptions>;
    constructor(options?: Partial<MoveableHelperOptions>);
    map: Map<HTMLElement | SVGElement, Frame>;
    render(target: HTMLElement | SVGElement, frame?: Frame): void;
    clear(): void;
    getTargets(): IterableIterator<HTMLElement | SVGElement>;
    getFrames(): IterableIterator<Frame>;
    getFrame(el: HTMLElement | SVGElement): Frame;
    setFrame(el: HTMLElement | SVGElement, frame: Frame): Map<HTMLElement | SVGElement, Frame>;
    removeFrame(el: HTMLElement | SVGElement): void;
    createFrame(el: HTMLElement | SVGElement, properites?: {}): Frame;
    setElements(selector: {
        [key: number]: HTMLElement | SVGElement;
        length: number;
    } | string): void;
    onBeforeRenderStart: (e: OnBeforeRenderStart) => void;
    onBeforeRenderGroupStart: (e: OnBeforeRenderGroupStart) => void;
    onDragStart: (e: OnDragStart) => boolean;
    onDrag: (e: OnDrag) => void;
    onDragGroupStart: (e: OnDragGroupStart) => void;
    onDragGroup: (e: OnDragGroup) => void;
    onResizeStart: (e: OnResizeStart) => void;
    onResize: (e: OnResize) => void;
    onResizeGroupStart: (e: OnResizeGroupStart) => void;
    onResizeGroup: (e: OnResizeGroup) => void;
    onScaleStart: (e: OnScaleStart) => boolean;
    onScale: (e: OnScale) => void;
    onScaleGroupStart: (e: OnScaleGroupStart) => void;
    onScaleGroup: (e: OnScaleGroup) => void;
    onRotateStart: (e: OnRotateStart) => boolean;
    onRotate: (e: OnRotate) => void;
    onRotateGroupStart: (e: OnRotateGroupStart) => void;
    onRotateGroup: (e: OnRotateGroup) => void;
    onClip: (e: OnClip) => void;
    onDragOriginStart: (e: OnDragOriginStart) => void;
    onDragOrigin: (e: OnDragOrigin) => void;
    onRound: (e: OnRound) => void;
    onWarpStart: (e: OnWarpStart) => boolean;
    onWarp: (e: OnWarp) => void;
    onRender: (e: OnRender) => void;
    private testFrame;
    private testDrag;
    private testResize;
    private testScale;
    private testRotate;
    private testRender;
    private setTranasform;
}
