{"version":3,"file":"moveable-helper.esm.js","sources":["../src/utils.ts","../src/MoveableHelper.ts"],"sourcesContent":["import { Frame } from \"scenejs\";\n\nexport function getOrderIndex(frame: Frame, functionName: string) {\n    const orders = frame.getOrders([\"transform\"]) || [];\n    return orders.indexOf(functionName);\n}\n","import { Frame } from \"scenejs\";\nimport {\n    OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart,\n    OnScaleStart, OnScale, OnRotate, OnRotateStart,\n    OnDragGroupStart, OnDragGroup, OnResizeGroupStart,\n    OnResizeGroup, OnScaleGroupStart, OnScaleGroup,\n    OnRotateGroupStart, OnRotateGroup, OnWarp, OnWarpStart,\n    OnClip, OnDragOriginStart, OnDragOrigin, OnRound, OnBeforeRenderStart,\n    OnTransformStartEvent, OnBeforeRenderGroupStart\n} from \"react-moveable/declaration/types\";\nimport { MoveableHelperOptions } from \"./types\";\nimport { isString } from \"@daybrush/utils\";\nimport { getOrderIndex } from \"./utils\";\n\n\nexport default class MoveableHelper {\n    public static create(options: Partial<MoveableHelperOptions> ) {\n        return new MoveableHelper(options);\n    }\n    public options: Partial<MoveableHelperOptions>;\n    constructor(options: Partial<MoveableHelperOptions> = {}) {\n        this.options = {\n            useBeforeRender: false,\n            useRender: false,\n            createAuto: true,\n            ...options,\n        };\n    }\n    public map = new Map<HTMLElement | SVGElement, Frame>();\n    public render(target: HTMLElement | SVGElement, frame: Frame = this.getFrame(target)) {\n        target.style.cssText += frame.toCSS();\n        if (\"ownerSVGElement\" in target && target.tagName.toLowerCase() !== \"svg\") {\n            const names = frame.getOrders([\"transform\"]);\n            target.setAttribute(\"transform\", names.map(name => {\n                const value = frame.get(\"transform\", name);\n\n                return `${name}(${value.split(\",\").map(v => parseFloat(v)).join(\", \")})`;\n            }).join(\" \"));\n        }\n    }\n    public clear() {\n        this.map.clear();\n    }\n    public getTargets() {\n        return this.map.keys();\n    }\n    public getFrames() {\n        return this.map.values();\n    }\n    public getFrame(el: HTMLElement | SVGElement) {\n        return this.map.get(el);\n    }\n    public setFrame(el: HTMLElement | SVGElement, frame: Frame) {\n        return this.map.set(el, frame);\n    }\n    public removeFrame(el: HTMLElement | SVGElement) {\n        this.map.delete(el);\n    }\n\n    public createFrame(el: HTMLElement | SVGElement, properites = {}) {\n        const frame = new Frame({\n            transform: {\n                translate: \"0px, 0px\",\n                rotate: \"0deg\",\n                scale: \"1, 1\",\n            },\n        })\n\n        frame.set(properites);\n\n        this.map.set(el, frame);\n        return frame;\n    }\n    public setElements(selector: { [key: number]: HTMLElement | SVGElement, length: number } | string) {\n        const elements = isString(selector) ? document.querySelectorAll<HTMLElement | SVGElement>(selector) : selector;\n        const length = elements.length;\n        const map = this.map;\n\n        for (let i = 0; i < length; ++i) {\n            const el = elements[i];\n            if (map.has(el)) {\n                continue;\n            }\n            this.createFrame(el);\n        }\n    }\n    public onBeforeRenderStart = (e: OnBeforeRenderStart) => {\n        const frame = this.testFrame(e);\n\n        e.setTransform(frame.toCSSObject().transform || \"\");\n    }\n    public onBeforeRenderGroupStart = (e: OnBeforeRenderGroupStart) => {\n        e.events.forEach(ev => {\n            this.onBeforeRenderStart(ev);\n        });\n    }\n    public onDragStart = (e: OnDragStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        this.setTranasform(e, frame, \"translate\");\n    }\n    public onDrag = (e: OnDrag) => {\n        this.testDrag(e);\n        this.testRender(e.target);\n    }\n    public onDragGroupStart = (e: OnDragGroupStart) => {\n        e.events.forEach(ev => {\n            this.onDragStart(ev);\n        });\n    }\n    public onDragGroup = (e: OnDragGroup) => {\n        e.events.forEach(ev => {\n            this.onDrag(ev);\n        });\n    }\n    public onResizeStart = (e: OnResizeStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n        e.setOrigin([\"%\", \"%\"]);\n    }\n    public onResize = (e: OnResize) => {\n        this.testResize(e);\n        this.testRender(e.target);\n    }\n    public onResizeGroupStart = (e: OnResizeGroupStart) => {\n        e.events.forEach(ev => {\n            this.onResizeStart(ev);\n        });\n    }\n    public onResizeGroup = (e: OnResizeGroup) => {\n        e.events.forEach(ev => {\n            this.onResize(ev);\n        });\n    }\n    public onScaleStart = (e: OnScaleStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n\n        this.setTranasform(e, frame, \"scale\");\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onScale = (e: OnScale) => {\n        this.testScale(e);\n        this.testRender(e.target);\n    }\n    public onScaleGroupStart = (e: OnScaleGroupStart) => {\n        e.events.forEach(ev => {\n            this.onScaleStart(ev);\n        });\n    }\n    public onScaleGroup = (e: OnScaleGroup) => {\n        e.events.forEach(ev => {\n            this.onScale(ev);\n        });\n    }\n    public onRotateStart = (e: OnRotateStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n\n        this.setTranasform(e, frame, \"rotate\");\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onRotate = (e: OnRotate) => {\n        this.testRotate(e);\n        this.testRender(e.target);\n    }\n    public onRotateGroupStart = (e: OnRotateGroupStart) => {\n        e.events.forEach(ev => {\n            this.onRotateStart(ev);\n        });\n    }\n    public onRotateGroup = (e: OnRotateGroup) => {\n        e.events.forEach(ev => {\n            this.onRotate(ev);\n        });\n    }\n    public onClip = (e: OnClip) => {\n        const frame = this.testFrame(e);\n        if (e.clipType === \"rect\") {\n            frame.set(\"clip\", e.clipStyle);\n        } else {\n            frame.set(\"clip-path\", e.clipStyle);\n        }\n        this.testRender(e.target);\n    }\n    public onDragOriginStart = (e: OnDragOriginStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onDragOrigin = (e: OnDragOrigin) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform-origin\", e.transformOrigin);\n        this.testDrag(e.drag);\n        this.testRender(e.target);\n    }\n    public onRound = (e: OnRound) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"border-radius\", e.borderRadius);\n        this.testRender(e.target);\n    }\n    public onWarpStart = (e: OnWarpStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        this.setTranasform(e, frame, \"matrix3d\");\n    }\n    public onWarp = (e: OnWarp) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform\", \"matrix3d\", e.matrix.join(\", \"));\n        this.testRender(e.target);\n    }\n    public onRender = (e: OnRender) => {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        if (!target || !frame) {\n            return;\n        }\n        this.render(target, frame);\n    }\n    private testFrame(e: any) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n\n        if (frame) {\n            return frame;\n        }\n        if (!this.options.createAuto) {\n            if (e.stop) {\n                e.stop();\n                return;\n            }\n        }\n        return this.createFrame(target);\n    }\n    private testDrag(e: OnDrag) {\n        const target = e.target;\n        const translate = e.translate;\n\n        const frame = this.getFrame(target);\n        const tx = `${translate[0]}px`;\n        const ty = `${translate[1]}px`;\n\n        if (frame.has(\"transform\", \"translate\")) {\n            frame.set(\"transform\", \"translate\", `${tx},${ty}`);\n        } else {\n            frame.set(\"transform\", \"translateX\", tx);\n            frame.set(\"transform\", \"translateY\", ty);\n        }\n    }\n    private testResize(e: OnResize) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        frame.set(\"width\", `${e.width}px`);\n        frame.set(\"height\", `${e.height}px`);\n\n        this.testDrag(e.drag);\n    }\n    private testScale(e: OnScale) {\n        const frame = this.testFrame(e);\n        const scale = e.scale;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"scale\", `${scale[0]},${scale[1]}`);\n    }\n    private testRotate(e: OnRotate) {\n        const frame = this.testFrame(e);\n        const rotate = e.rotate;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"rotate\", `${rotate}deg`);\n    }\n    private testRender(target, frame = this.getFrame(target)) {\n        if (!this.options.useRender) {\n            this.render(target, frame);\n        }\n    }\n    private setTranasform(e: OnTransformStartEvent, frame: Frame, functionName: string) {\n        const orderIndex = getOrderIndex(frame, functionName);\n        if (this.options.useBeforeRender) {\n            e.setTransformIndex(orderIndex);\n        } else {\n            e.setTransform(frame.toCSSObject().transform || [], orderIndex);\n        }\n    }\n}\n"],"names":["getOrderIndex","frame","functionName","orders","getOrders","indexOf","options","Map","e","_this","testFrame","setTransform","toCSSObject","transform","events","forEach","ev","onBeforeRenderStart","setTranasform","testDrag","testRender","target","onDragStart","onDrag","dragStart","setOrigin","testResize","onResizeStart","onResize","testScale","onScaleStart","onScale","testRotate","onRotateStart","onRotate","clipType","set","clipStyle","transformOrigin","drag","borderRadius","matrix","join","getFrame","render","useBeforeRender","useRender","createAuto","MoveableHelper","style","cssText","toCSS","tagName","toLowerCase","names","setAttribute","map","name","value","get","split","v","parseFloat","clear","keys","values","el","delete","properites","Frame","translate","rotate","scale","selector","elements","isString","document","querySelectorAll","length","i","has","createFrame","stop","tx","ty","width","height","orderIndex","setTransformIndex"],"mappings":"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"}