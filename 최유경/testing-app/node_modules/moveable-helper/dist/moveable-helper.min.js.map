{"version":3,"file":"moveable-helper.min.js","sources":["../src/MoveableHelper.ts","../src/utils.ts"],"sourcesContent":["import { Frame } from \"scenejs\";\nimport {\n    OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart,\n    OnScaleStart, OnScale, OnRotate, OnRotateStart,\n    OnDragGroupStart, OnDragGroup, OnResizeGroupStart,\n    OnResizeGroup, OnScaleGroupStart, OnScaleGroup,\n    OnRotateGroupStart, OnRotateGroup, OnWarp, OnWarpStart,\n    OnClip, OnDragOriginStart, OnDragOrigin, OnRound, OnBeforeRenderStart,\n    OnTransformStartEvent, OnBeforeRenderGroupStart\n} from \"react-moveable/declaration/types\";\nimport { MoveableHelperOptions } from \"./types\";\nimport { isString } from \"@daybrush/utils\";\nimport { getOrderIndex } from \"./utils\";\n\n\nexport default class MoveableHelper {\n    public static create(options: Partial<MoveableHelperOptions> ) {\n        return new MoveableHelper(options);\n    }\n    public options: Partial<MoveableHelperOptions>;\n    constructor(options: Partial<MoveableHelperOptions> = {}) {\n        this.options = {\n            useBeforeRender: false,\n            useRender: false,\n            createAuto: true,\n            ...options,\n        };\n    }\n    public map = new Map<HTMLElement | SVGElement, Frame>();\n    public render(target: HTMLElement | SVGElement, frame: Frame = this.getFrame(target)) {\n        target.style.cssText += frame.toCSS();\n        if (\"ownerSVGElement\" in target && target.tagName.toLowerCase() !== \"svg\") {\n            const names = frame.getOrders([\"transform\"]);\n            target.setAttribute(\"transform\", names.map(name => {\n                const value = frame.get(\"transform\", name);\n\n                return `${name}(${value.split(\",\").map(v => parseFloat(v)).join(\", \")})`;\n            }).join(\" \"));\n        }\n    }\n    public clear() {\n        this.map.clear();\n    }\n    public getTargets() {\n        return this.map.keys();\n    }\n    public getFrames() {\n        return this.map.values();\n    }\n    public getFrame(el: HTMLElement | SVGElement) {\n        return this.map.get(el);\n    }\n    public setFrame(el: HTMLElement | SVGElement, frame: Frame) {\n        return this.map.set(el, frame);\n    }\n    public removeFrame(el: HTMLElement | SVGElement) {\n        this.map.delete(el);\n    }\n\n    public createFrame(el: HTMLElement | SVGElement, properites = {}) {\n        const frame = new Frame({\n            transform: {\n                translate: \"0px, 0px\",\n                rotate: \"0deg\",\n                scale: \"1, 1\",\n            },\n        })\n\n        frame.set(properites);\n\n        this.map.set(el, frame);\n        return frame;\n    }\n    public setElements(selector: { [key: number]: HTMLElement | SVGElement, length: number } | string) {\n        const elements = isString(selector) ? document.querySelectorAll<HTMLElement | SVGElement>(selector) : selector;\n        const length = elements.length;\n        const map = this.map;\n\n        for (let i = 0; i < length; ++i) {\n            const el = elements[i];\n            if (map.has(el)) {\n                continue;\n            }\n            this.createFrame(el);\n        }\n    }\n    public onBeforeRenderStart = (e: OnBeforeRenderStart) => {\n        const frame = this.testFrame(e);\n\n        e.setTransform(frame.toCSSObject().transform || \"\");\n    }\n    public onBeforeRenderGroupStart = (e: OnBeforeRenderGroupStart) => {\n        e.events.forEach(ev => {\n            this.onBeforeRenderStart(ev);\n        });\n    }\n    public onDragStart = (e: OnDragStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        this.setTranasform(e, frame, \"translate\");\n    }\n    public onDrag = (e: OnDrag) => {\n        this.testDrag(e);\n        this.testRender(e.target);\n    }\n    public onDragGroupStart = (e: OnDragGroupStart) => {\n        e.events.forEach(ev => {\n            this.onDragStart(ev);\n        });\n    }\n    public onDragGroup = (e: OnDragGroup) => {\n        e.events.forEach(ev => {\n            this.onDrag(ev);\n        });\n    }\n    public onResizeStart = (e: OnResizeStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n        e.setOrigin([\"%\", \"%\"]);\n    }\n    public onResize = (e: OnResize) => {\n        this.testResize(e);\n        this.testRender(e.target);\n    }\n    public onResizeGroupStart = (e: OnResizeGroupStart) => {\n        e.events.forEach(ev => {\n            this.onResizeStart(ev);\n        });\n    }\n    public onResizeGroup = (e: OnResizeGroup) => {\n        e.events.forEach(ev => {\n            this.onResize(ev);\n        });\n    }\n    public onScaleStart = (e: OnScaleStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n\n        this.setTranasform(e, frame, \"scale\");\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onScale = (e: OnScale) => {\n        this.testScale(e);\n        this.testRender(e.target);\n    }\n    public onScaleGroupStart = (e: OnScaleGroupStart) => {\n        e.events.forEach(ev => {\n            this.onScaleStart(ev);\n        });\n    }\n    public onScaleGroup = (e: OnScaleGroup) => {\n        e.events.forEach(ev => {\n            this.onScale(ev);\n        });\n    }\n    public onRotateStart = (e: OnRotateStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n\n        this.setTranasform(e, frame, \"rotate\");\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onRotate = (e: OnRotate) => {\n        this.testRotate(e);\n        this.testRender(e.target);\n    }\n    public onRotateGroupStart = (e: OnRotateGroupStart) => {\n        e.events.forEach(ev => {\n            this.onRotateStart(ev);\n        });\n    }\n    public onRotateGroup = (e: OnRotateGroup) => {\n        e.events.forEach(ev => {\n            this.onRotate(ev);\n        });\n    }\n    public onClip = (e: OnClip) => {\n        const frame = this.testFrame(e);\n        if (e.clipType === \"rect\") {\n            frame.set(\"clip\", e.clipStyle);\n        } else {\n            frame.set(\"clip-path\", e.clipStyle);\n        }\n        this.testRender(e.target);\n    }\n    public onDragOriginStart = (e: OnDragOriginStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onDragOrigin = (e: OnDragOrigin) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform-origin\", e.transformOrigin);\n        this.testDrag(e.drag);\n        this.testRender(e.target);\n    }\n    public onRound = (e: OnRound) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"border-radius\", e.borderRadius);\n        this.testRender(e.target);\n    }\n    public onWarpStart = (e: OnWarpStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        this.setTranasform(e, frame, \"matrix3d\");\n    }\n    public onWarp = (e: OnWarp) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform\", \"matrix3d\", e.matrix.join(\", \"));\n        this.testRender(e.target);\n    }\n    public onRender = (e: OnRender) => {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        if (!target || !frame) {\n            return;\n        }\n        this.render(target, frame);\n    }\n    private testFrame(e: any) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n\n        if (frame) {\n            return frame;\n        }\n        if (!this.options.createAuto) {\n            if (e.stop) {\n                e.stop();\n                return;\n            }\n        }\n        return this.createFrame(target);\n    }\n    private testDrag(e: OnDrag) {\n        const target = e.target;\n        const translate = e.translate;\n\n        const frame = this.getFrame(target);\n        const tx = `${translate[0]}px`;\n        const ty = `${translate[1]}px`;\n\n        if (frame.has(\"transform\", \"translate\")) {\n            frame.set(\"transform\", \"translate\", `${tx},${ty}`);\n        } else {\n            frame.set(\"transform\", \"translateX\", tx);\n            frame.set(\"transform\", \"translateY\", ty);\n        }\n    }\n    private testResize(e: OnResize) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        frame.set(\"width\", `${e.width}px`);\n        frame.set(\"height\", `${e.height}px`);\n\n        this.testDrag(e.drag);\n    }\n    private testScale(e: OnScale) {\n        const frame = this.testFrame(e);\n        const scale = e.scale;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"scale\", `${scale[0]},${scale[1]}`);\n    }\n    private testRotate(e: OnRotate) {\n        const frame = this.testFrame(e);\n        const rotate = e.rotate;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"rotate\", `${rotate}deg`);\n    }\n    private testRender(target, frame = this.getFrame(target)) {\n        if (!this.options.useRender) {\n            this.render(target, frame);\n        }\n    }\n    private setTranasform(e: OnTransformStartEvent, frame: Frame, functionName: string) {\n        const orderIndex = getOrderIndex(frame, functionName);\n        if (this.options.useBeforeRender) {\n            e.setTransformIndex(orderIndex);\n        } else {\n            e.setTransform(frame.toCSSObject().transform || [], orderIndex);\n        }\n    }\n}\n","import { Frame } from \"scenejs\";\n\nexport function getOrderIndex(frame: Frame, functionName: string) {\n    const orders = frame.getOrders([\"transform\"]) || [];\n    return orders.indexOf(functionName);\n}\n"],"names":["options","Map","e","frame","_this","testFrame","setTransform","toCSSObject","transform","events","forEach","ev","onBeforeRenderStart","setTranasform","testDrag","testRender","target","onDragStart","onDrag","dragStart","setOrigin","testResize","onResizeStart","onResize","testScale","onScaleStart","onScale","testRotate","onRotateStart","onRotate","clipType","set","clipStyle","transformOrigin","drag","borderRadius","matrix","join","getFrame","render","useBeforeRender","useRender","createAuto","MoveableHelper","names","this","style","cssText","toCSS","tagName","toLowerCase","getOrders","setAttribute","map","name","get","split","v","parseFloat","clear","keys","values","el","delete","properites","Frame","translate","rotate","scale","selector","elements","document","querySelectorAll","length","i","has","createFrame","stop","tx","ty","width","height","functionName","orderIndex","indexOf","setTransformIndex"],"mappings":"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"}