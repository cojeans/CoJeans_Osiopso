import { ReactiveObject, ReactiveAdapter } from "@cfcs/core";
import Scene from "../Scene";
import { SceneOptions, SceneEvents } from "../types";
import { AnimatorReactiveState, ReactiveMethods } from "./reactive";
export declare const SCENE_METHODS: string[];
/**
 * @typedef
 * @memberof Reactive
 */
export interface SceneReactiveOptions {
    options?: Partial<SceneOptions>;
    [key: string | number]: any;
}
/**
 * @typedef
 * @memberof Reactive
 */
export declare type SceneReactiveProps = SceneReactiveOptions | Scene | (() => SceneReactiveOptions | Scene);
/**
 * @typedef
 * @memberof Reactive
 */
export interface SceneReactiveData {
    props: SceneReactiveProps;
    options?: Partial<SceneOptions>;
}
export declare type SceneReactiveMethods = ReactiveMethods<Scene>;
export declare type SceneReactiveInstance = ReactiveObject<AnimatorReactiveState> & SceneReactiveMethods & {
    getInstance(): Scene;
};
export declare const SCENE_REACTIVE: ReactiveAdapter<SceneReactiveInstance, AnimatorReactiveState, keyof SceneReactiveMethods, SceneReactiveData, SceneEvents>;
