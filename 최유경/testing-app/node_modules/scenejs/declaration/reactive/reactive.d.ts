import { ExtractNever } from "@cfcs/core";
import { AnimatorState } from "../types";
export declare function getMethodNames(classConstructor: new (...args: any[]) => any): string[];
export declare const ANIMATOR_METHODS: string[];
export declare type ReactiveMethods<Instance> = ExtractNever<{
    [key in (keyof Instance) & string]: Instance[key] extends (...args: any) => any ? Instance[key] : never;
}>;
/**
 * @typedef
 * @memberof Reactive
 */
export interface AnimatorReactiveState extends AnimatorState {
    /**
     * Total time the animation played
     */
    totalDuration: number;
}
