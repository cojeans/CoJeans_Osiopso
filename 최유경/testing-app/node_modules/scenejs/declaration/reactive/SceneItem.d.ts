import { ReactiveAdapter, ReactiveObject } from "@cfcs/core";
import Scene from "../Scene";
import SceneItem from "../SceneItem";
import { SceneItemEvents, SceneItemOptions } from "../types";
import { AnimatorReactiveState, ReactiveMethods } from "./reactive";
export declare const SCENE_ITEM_METHODS: string[];
/**
 * @typedef
 * @memberof Reactive
 */
export interface SceneItemReactiveOptions {
    options?: Partial<SceneItemOptions>;
    [key: string | number]: any;
}
/**
 * @typedef
 * @memberof Reactive
 */
export declare type SceneItemReactiveProps = SceneItemReactiveOptions | SceneItem | (() => SceneItemReactiveOptions | SceneItem);
/**
 * @typedef
 * @memberof Reactive
 */
export interface SceneItemReactiveData {
    props: SceneItemReactiveProps;
    options?: Partial<SceneItemOptions>;
}
export declare type SceneItemReactiveMethods = ReactiveMethods<Scene>;
export declare type SceneItemReactiveInstance = ReactiveObject<AnimatorReactiveState> & SceneItemReactiveMethods & {
    getInstance(): SceneItem;
};
export declare const SCENE_ITEM_REACTIVE: ReactiveAdapter<SceneItemReactiveInstance, AnimatorReactiveState, keyof SceneItemReactiveMethods, SceneItemReactiveData, SceneItemEvents>;
