import PropertyObject from "./PropertyObject";
import Scene from "./Scene";
import SceneItem from "./SceneItem";
import { IObject } from "@daybrush/utils";
import { EasingType, EasingFunction, NameType, SelectorAllType, AnimateElement } from "./types";
import Animator from "./Animator";
import Frame from "./Frame";
export declare function setAlias(name: string, alias: string[]): void;
export declare function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean): void;
export declare function getType(value: any): "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array" | "property" | "value";
export declare function isPureObject(obj: any): obj is object;
export declare function getNames(names: IObject<any>, stack: string[]): string[][];
export declare function updateFrame(names: IObject<any>, properties: IObject<any>): IObject<any>;
export declare function toFixed(num: number): number;
export declare function getValueByNames(names: Array<string | number>, properties: IObject<any>, length?: number): IObject<any>;
export declare function isInProperties(roles: IObject<any>, args: NameType[], isLast?: boolean): boolean;
/**
 * @memberof Scene
 * @param - Property names
 * @param - Whether the property is the last property that cannot be an object (non-partitionable)
 */
export declare function isRole(args: NameType[], isLast?: boolean): boolean;
export declare function isFixed(args: NameType[]): boolean;
export interface IterationInterface {
    currentTime: number;
    iterationCount: number;
    elapsedTime: number;
}
export declare function setPlayCSS(item: Animator, isActivate: boolean): void;
export declare function isPausedCSS(item: Scene | SceneItem): boolean;
export declare function isEndedCSS(item: Scene | SceneItem): boolean;
export declare function makeId(selector?: boolean): string;
export declare function getRealId(item: Scene | SceneItem): string | number;
export declare function toId(text: number | string): string;
export declare function playCSS(item: Scene | SceneItem, isExportCSS?: boolean, playClassName?: string, properties?: object): void;
export declare function addAnimationEvent(item: Animator, el: Element): void;
export declare function getEasing(curveArray: string | number[] | EasingFunction): EasingType;
export declare function isPropertyObject(value: any): value is PropertyObject;
export declare function isScene(value: any): value is Scene;
export declare function isSceneItem(value: any): value is SceneItem;
export declare function isFrame(value: any): value is Frame;
export declare function isAnimator(value: any): value is Animator;
export declare function flatSceneObject(obj: IObject<any>, seperator: string): Record<string, Frame>;
export declare function selectorAll(callback: (index: number, element: AnimateElement) => any, defaultCount?: number): SelectorAllType;
export declare function rgbaToHexa(rgba: string): string;
export declare function rgbaToHexWithOpacity(rgba: string): {
    hex: string;
    opacity: number;
};
