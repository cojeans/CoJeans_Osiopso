{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\S08P12C106\\\\\\uCD5C\\uC720\\uACBD\\\\testing-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport html2canvas from 'html2canvas';\nimport Cropper from 'react-cropper';\nimport CanvasDraw from \"react-canvas-draw\";\nimport TreeShakingApp from './routes/DDtest/drag-drop-test.component';\nimport SignInForm from \"./routes/sign-in/sign-in-form.component\";\nimport SignUpForm from \"./routes/sign-up/sign-up-form.component\";\n\n// import Example from \"./components/example/example.component\";\nimport 'cropperjs/dist/cropper.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\",\n    textAlign: \"center\"\n  },\n  imgBox: {\n    maxWidth: \"80%\",\n    maxHeight: \"80%\",\n    margin: \"10px\"\n  },\n  img: {\n    height: \"inherit\",\n    maxWidth: \"inherit\"\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nfunction App() {\n  _s();\n  const classes = useStyles();\n  let localstream;\n  useEffect(() => {\n    let vid = document.getElementById(\"vid\");\n    if (navigator.mediaDevices.getUserMedia !== null) {\n      var options = {\n        video: true\n        // audio: true\n      };\n\n      navigator.mediaDevices.getUserMedia(options, function (stream) {\n        vid.srcObject = stream;\n        localstream = stream;\n        vid.play();\n        console.log(stream, \"streaming\");\n      }, function (e) {\n        console.log(\"background error : \" + e.name);\n      });\n    }\n  });\n  const capOff = () => {\n    var _document, _localstream, _localstream$getTrack;\n    let vid = (_document = document) === null || _document === void 0 ? void 0 : _document.getElementById(\"vid\");\n    if (vid) {\n      vid.pause();\n      vid.src = \"\";\n    }\n    (_localstream = localstream) === null || _localstream === void 0 ? void 0 : (_localstream$getTrack = _localstream.getTracks()) === null || _localstream$getTrack === void 0 ? void 0 : _localstream$getTrack.forEach(x => x.stop());\n    console.log(\"all capture devices off\");\n  };\n  const camON = () => {\n    let vid = document.getElementById(\"vid\");\n    if (navigator.mediaDevices.getUserMedia !== null) {\n      var options = {\n        video: true\n        // audio: true\n      };\n\n      navigator.getUserMedia(options, function (stream) {\n        vid.srcObject = stream;\n        localstream = stream;\n        vid.play();\n        console.log(stream, \"streaming\");\n      }, function (e) {\n        console.log(\"background error : \" + e.name);\n      });\n    }\n  };\n  const cropperRef = useRef(null);\n  // 유저가 첨부한 이미지\n  const [inputImage, setInputImage] = useState('null');\n  // 유저가 선택한 영역만큼 크롭된 이미지\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [drawWidth, setDrawWidth] = useState(400);\n  const [drawHeight, setDrawHeight] = useState(400);\n  const onCapture = () => {\n    console.log('onCapture');\n    html2canvas(document.getElementById('vid')).then(canvas => {\n      document.body.appendChild(canvas); // 화면에 띄우기\n      // onSaveAs(canvas.toDataURL('image/png'), 'image-download/png')\n      setInputImage(canvas.toDataURL('image/png'));\n    });\n  };\n\n  // 캡쳐이미지 리사이즈\n  const onCrop = () => {\n    const imageElement = cropperRef === null || cropperRef === void 0 ? void 0 : cropperRef.current;\n    const cropper = imageElement === null || imageElement === void 0 ? void 0 : imageElement.cropper;\n    setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n  };\n\n  // 캡쳐 이미지 로컬 저장 함수 \n  const onSaveAs = (uri, filename) => {\n    console.log('onSave');\n    let link = document.createElement('a');\n    document.body.appendChild(link);\n    link.href = uri;\n    link.download = filename;\n    link.click();\n    document.body.removeChild(link);\n  };\n  const canvasRef = useRef(null);\n  // 캡쳐이미지가 리사이즈 될때 실행\n  useEffect(() => {\n    if (croppedImage) {\n      console.log(croppedImage);\n      // onSaveAs(croppedImage, 'image-download/png')\n      // const ctx = canvasRef.current.getContext(\"2d\")\n      // ctx.clearRect(0, 0, 500, 500)\n\n      const image = new Image();\n      image.src = croppedImage;\n      console.log(image.width);\n      setDrawWidth(image.width);\n      setDrawHeight(image.Heigth);\n\n      // image.onload = function() {\n      //   ctx.drawImage(image, 0, 0);\n      // };\n    }\n  }, [croppedImage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dd\",\n        element: /*#__PURE__*/_jsxDEV(TreeShakingApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        element: /*#__PURE__*/_jsxDEV(SignInForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        element: /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"vid\",\n          height: \"500\",\n          width: \"500\",\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: capOff,\n          children: \"Tu`rn Capture Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: camON,\n          children: \"Turn Capture ON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCapture,\n          children: \"\\uC0AC\\uC9C4\\uCC0D\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cropper, {\n      src: inputImage,\n      crop: onCrop,\n      ref: cropperRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: croppedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CanvasDraw, {\n      imgSrc: croppedImage,\n      brushColor: 'black',\n      hideGridX: true,\n      hideGridY: true,\n      hideInterface: true,\n      ref: canvasRef,\n      canvasWidth: drawWidth,\n      canvasHeight: drawHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        canvasRef.current.undo();\n      },\n      children: \"UNDO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        canvasRef.current.clear();\n      },\n      children: \"CLEAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gLWcJDupGK1vunfkQ12/Wo1GyXM=\", false, function () {\n  return [useStyles];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Routes","Route","Grid","makeStyles","html2canvas","Cropper","CanvasDraw","TreeShakingApp","SignInForm","SignUpForm","useStyles","theme","root","height","textAlign","imgBox","maxWidth","maxHeight","margin","img","input","display","App","classes","localstream","vid","document","getElementById","navigator","mediaDevices","getUserMedia","options","video","stream","srcObject","play","console","log","e","name","capOff","pause","src","getTracks","forEach","x","stop","camON","cropperRef","inputImage","setInputImage","croppedImage","setCroppedImage","drawWidth","setDrawWidth","drawHeight","setDrawHeight","onCapture","then","canvas","body","appendChild","toDataURL","onCrop","imageElement","current","cropper","getCroppedCanvas","onSaveAs","uri","filename","link","createElement","href","download","click","removeChild","canvasRef","image","Image","width","Heigth","undo","clear"],"sources":["C:/Users/SSAFY/Desktop/S08P12C106/최유경/testing-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef} from \"react\";\r\nimport {Routes, Route} from 'react-router-dom'\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport html2canvas from 'html2canvas'\r\nimport Cropper from 'react-cropper';\r\nimport CanvasDraw from \"react-canvas-draw\";\r\n\r\nimport TreeShakingApp from './routes/DDtest/drag-drop-test.component'\r\nimport SignInForm from \"./routes/sign-in/sign-in-form.component\";\r\nimport SignUpForm from \"./routes/sign-up/sign-up-form.component\";\r\n\r\n// import Example from \"./components/example/example.component\";\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    textAlign: \"center\"\r\n  },\r\n  imgBox: {\r\n    maxWidth: \"80%\",\r\n    maxHeight: \"80%\",\r\n    margin: \"10px\"\r\n  },\r\n  img: {\r\n    height: \"inherit\",\r\n    maxWidth: \"inherit\"\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  let localstream;\r\n\r\n  useEffect(() => {\r\n    let vid = document.getElementById(\"vid\");\r\n    if (navigator.mediaDevices.getUserMedia !== null) {\r\n      var options = {\r\n        video: true,\r\n        // audio: true\r\n      };\r\n      navigator.mediaDevices.getUserMedia(\r\n        options,\r\n        function (stream) {\r\n          vid.srcObject = stream; \r\n          localstream = stream;\r\n          vid.play();\r\n          console.log(stream, \"streaming\");\r\n        },\r\n        function (e) {\r\n          console.log(\"background error : \" + e.name);\r\n        }\r\n      );\r\n    }\r\n  });\r\n\r\n  const capOff = () => {\r\n    let vid = document?.getElementById(\"vid\");\r\n    if (vid) {\r\n      vid.pause();\r\n      vid.src = \"\";\r\n    }\r\n    localstream?.getTracks()?.forEach((x) => x.stop());\r\n    console.log(\"all capture devices off\");\r\n  };\r\n\r\n  const camON = () => {\r\n    let vid = document.getElementById(\"vid\");\r\n    if (navigator.mediaDevices.getUserMedia !== null) {\r\n      var options = {\r\n        video: true,\r\n        // audio: true\r\n      };\r\n      navigator.getUserMedia(\r\n        options,\r\n        function (stream) {\r\n          vid.srcObject = stream;\r\n          localstream = stream;\r\n          vid.play();\r\n          console.log(stream, \"streaming\");\r\n        },\r\n        function (e) {\r\n          console.log(\"background error : \" + e.name);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const cropperRef = useRef(null);\r\n  // 유저가 첨부한 이미지\r\n  const [inputImage, setInputImage] = useState('null');\r\n  // 유저가 선택한 영역만큼 크롭된 이미지\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n\r\n  const [drawWidth, setDrawWidth] = useState(400)\r\n  const [drawHeight, setDrawHeight] = useState(400)\r\n\r\n\r\n  const onCapture = () =>{\r\n    console.log('onCapture')\r\n    html2canvas(document.getElementById('vid'))\r\n      .then(canvas=>{\r\n      document.body.appendChild(canvas) // 화면에 띄우기\r\n      // onSaveAs(canvas.toDataURL('image/png'), 'image-download/png')\r\n      setInputImage(canvas.toDataURL('image/png'))\r\n    })\r\n  }\r\n\r\n  // 캡쳐이미지 리사이즈\r\n  const onCrop = () => {\r\n    const imageElement = cropperRef?.current;\r\n    const cropper = imageElement?.cropper;\r\n    setCroppedImage(cropper.getCroppedCanvas().toDataURL());\r\n  };\r\n\r\n  // 캡쳐 이미지 로컬 저장 함수 \r\n  const onSaveAs = (uri, filename)=> {  \r\n    console.log('onSave')\r\n    let link = document.createElement('a')\r\n    document.body.appendChild(link)\r\n    link.href = uri\r\n    link.download = filename\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n  \r\n  const canvasRef = useRef(null)\r\n  // 캡쳐이미지가 리사이즈 될때 실행\r\n  useEffect(()=>{ \r\n    if (croppedImage){\r\n      console.log(croppedImage)\r\n      // onSaveAs(croppedImage, 'image-download/png')\r\n      // const ctx = canvasRef.current.getContext(\"2d\")\r\n      // ctx.clearRect(0, 0, 500, 500)\r\n\r\n      const image = new Image();\r\n      image.src = croppedImage\r\n      console.log(image.width)\r\n\r\n      setDrawWidth(image.width)\r\n      setDrawHeight(image.Heigth)\r\n\r\n      // image.onload = function() {\r\n      //   ctx.drawImage(image, 0, 0);\r\n      // };\r\n    }\r\n  }, [croppedImage])\r\n\r\n\r\n  return (\r\n  \r\n    <div className={classes.root}>\r\n      <Routes>\r\n        <Route path='/dd' element={<TreeShakingApp/>} />\r\n        <Route path='/sign-in' element={<SignInForm/>} />\r\n        <Route path='/sign-up' element={<SignUpForm/>} />\r\n      </Routes>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <video id=\"vid\" height=\"500\" width=\"500\" autoPlay></video>\r\n          <br />\r\n          <button onClick={capOff}>Tu`rn Capture Off</button>\r\n          <button onClick={camON}>Turn Capture ON</button>\r\n          <button onClick={onCapture}>사진찍기</button>\r\n        </Grid>\r\n      </Grid>\r\n          <Cropper src={inputImage} crop={onCrop} ref={cropperRef} />\r\n          <img src={croppedImage} />\r\n          {/* <canvas\r\n          ref={canvasRef}\r\n          width={500}\r\n          hegith={500}\r\n          /> */}\r\n          {/* <button onClick={}>지우기</button> */}\r\n      {/* <OnHtmlToPng/> */}\r\n      <CanvasDraw  \r\n        imgSrc={croppedImage}\r\n        brushColor={'black'}\r\n        hideGridX={true}\r\n        hideGridY={true}\r\n        hideInterface={true}\r\n        ref={canvasRef}\r\n        canvasWidth={drawWidth}\r\n        canvasHeight={drawHeight}\r\n      />\r\n\r\n    <button\r\n        onClick={() => {\r\n          canvasRef.current.undo();\r\n        }}\r\n      >\r\n        UNDO\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          canvasRef.current.clear();\r\n        }}\r\n      >\r\n        CLEAR\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}