{"ast":null,"code":"/*!\n * Cropper.js v1.5.13\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2022-11-20T05:30:46.114Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n})(this, function () {\n  'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper';\n\n  // Actions\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw';\n\n  // Classes\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\n\n  // Data keys\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\");\n\n  // Drag modes\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none';\n\n  // Events\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom';\n\n  // Mime types\n  var MIME_TYPE_JPEG = 'image/jpeg';\n\n  // RegExps\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i;\n\n  // Misc\n  // Inspired by the default width and height of a canvas element.\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        toArray(data).forEach(function (value, key) {\n          callback.call(data, value, key, data);\n        });\n      } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n      style[property] = value;\n    });\n  }\n\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n    var className = element.className.trim();\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    }\n\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n  var onceSupported = function () {\n    var supported = false;\n    if (IS_BROWSER) {\n      var once = false;\n      var listener = function listener() {};\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n    return supported;\n  }();\n\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n      element.removeEventListener(event, handler, options);\n    });\n  }\n\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          listener.apply(element, args);\n        };\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n      element.addEventListener(event, _handler, options);\n    });\n  }\n\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n  function dispatchEvent(element, type, data) {\n    var event;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n    return element.dispatchEvent(event);\n  }\n\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n    var values = [];\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    }\n\n    // Rotate should come first before scale to match orientation transform\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n        startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref4) {\n    var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n    // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n\n    // Chunk Typed Array for better performance (#435)\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n        imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n            width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n            height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n            degree: imageData.rotate || 0\n          }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true);\n\n      // Initialize auto crop area\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n      // The width/height of auto crop area must large than \"minWidth/Height\"\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\n\n        // The min/maxCropBoxWidth/Height must be less than container's width/height\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        }\n\n        // The minWidth/Height must be less than maxWidth/Height\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n        crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n      if (!preview) {\n        return;\n      }\n      var previews = preview;\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img');\n\n        // Save the original size for recover\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n        img.src = url;\n        img.alt = alt;\n\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n        height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n      var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\n\n      // Resize when width changed or height changed\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n        this.render();\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n      if (this.disabled) {\n        return;\n      }\n      event.preventDefault();\n\n      // Limit wheel speed to prevent zoom too fast (#21)\n      if (this.wheeling) {\n        return;\n      }\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n        button = event.button;\n      if (this.disabled\n\n      // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && (\n      // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0\n\n      // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n      var options = this.options,\n        pointers = this.pointers;\n      var action;\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      // This line is required for preventing page zooming in iOS browsers\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n      if (this.disabled || !action) {\n        return;\n      }\n      var pointers = this.pointers;\n      event.preventDefault();\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n      var action = this.action,\n        pointers = this.pointers;\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n      if (!action) {\n        return;\n      }\n      event.preventDefault();\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset;\n\n      // Locking aspect ratio in \"free mode\" by holding shift key\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n            break;\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n            break;\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n            break;\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n            break;\n        }\n      };\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n\n        // Resize crop box\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_EAST);\n          width += range.x;\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_SOUTH);\n          height += range.y;\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n\n        // Move canvas\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n\n        // Zoom canvas\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n\n        // Create crop box\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n          if (range.y < 0) {\n            top -= height;\n          }\n\n          // Show the crop box if is hidden\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n          break;\n      }\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      }\n\n      // Override\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true);\n\n        // Render canvas after crop box rendered\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n      return this;\n    },\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n      element[NAMESPACE] = undefined;\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n      this.uncreate();\n      return this;\n    },\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          };\n\n          // Zoom from the triggering point of the event\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n      return this;\n    },\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n      return data;\n    },\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n      var cropBoxData = {};\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n        var ratio = imageData.width / imageData.naturalWidth;\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n        this.setCropBoxData(cropBoxData);\n      }\n      return this;\n    },\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n      return data;\n    },\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n      return data || {};\n    },\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n        this.renderCropBox();\n      }\n      return this;\n    },\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n      // Returns the source canvas if it is not cropped.\n      if (!this.cropped) {\n        return source;\n      }\n      var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n      var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: options.width || (ratio !== 1 ? source.width : initialWidth),\n          height: options.height || (ratio !== 1 ? source.height : initialHeight)\n        }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n      var sourceWidth = source.width;\n      var sourceHeight = source.height;\n\n      // Source canvas parameters\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight;\n\n      // Destination canvas parameters\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n      var params = [srcX, srcY, srcWidth, srcHeight];\n\n      // Avoid \"IndexSizeError\"\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      }\n\n      // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n        if (this.ready) {\n          this.initCropBox();\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n      return this;\n    },\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n      return this;\n    }\n  };\n  var AnotherCropper = WINDOW.Cropper;\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, Cropper);\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n        if (element[NAMESPACE]) {\n          return;\n        }\n        element[NAMESPACE] = this;\n        if (tagName === 'img') {\n          this.isImg = true;\n\n          // e.g.: \"img/picture.jpg\"\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url;\n\n          // Stop when it's a blank image\n          if (!url) {\n            return;\n          }\n\n          // e.g.: \"https://example.com/img/picture.jpg\"\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n        if (!url) {\n          return;\n        }\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n          options = this.options;\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        }\n\n        // Only IE10+ supports Typed Arrays\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        }\n\n        // Detect the mime type of the image directly if it is a Data URL\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n          return;\n        }\n\n        // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr;\n\n        // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        };\n\n        // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        // The third parameter is required for avoiding side-effect (#682)\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n          imageData = this.imageData;\n\n        // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n          var _parseOrientation = parseOrientation(orientation);\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n          url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          }\n\n          // Bust cache when there is not a \"crossOrigin\" property (#519)\n          crossOriginUrl = addTimestamp(url);\n        }\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n          _this2.build();\n        };\n\n        // Most modern browsers (excepts iOS WebKit)\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n        sizingImage.src = image.src;\n\n        // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n        var element = this.element,\n          options = this.options,\n          image = this.image;\n\n        // Create cropper elements\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image);\n\n        // Hide the original image\n        addClass(element, CLASS_HIDDEN);\n\n        // Inserts the cropper after to the current image\n        container.insertBefore(cropper, element.nextSibling);\n\n        // Show the hidden image\n        removeClass(image, CLASS_HIDE);\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n        if (options.autoCrop) {\n          this.crop();\n        }\n        this.setData(options.data);\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        var parentNode = this.cropper.parentNode;\n        if (parentNode) {\n          parentNode.removeChild(this.cropper);\n        }\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n    return Cropper;\n  }();\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n  return Cropper;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Cropper","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","value","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","maxRatio","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","tagName","Error","reloading","sizing","init","toDataURL","clone","read","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","noConflict","setDefaults"],"sources":["C:/Users/SSAFY/Desktop/S08P12C106/최유경/testing-app/node_modules/cropperjs/dist/cropper.js"],"sourcesContent":["/*!\n * Cropper.js v1.5.13\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2022-11-20T05:30:46.114Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper';\n\n  // Actions\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw';\n\n  // Classes\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\n\n  // Data keys\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\");\n\n  // Drag modes\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none';\n\n  // Events\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom';\n\n  // Mime types\n  var MIME_TYPE_JPEG = 'image/jpeg';\n\n  // RegExps\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i;\n\n  // Misc\n  // Inspired by the default width and height of a canvas element.\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        toArray(data).forEach(function (value, key) {\n          callback.call(data, value, key, data);\n        });\n      } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n      style[property] = value;\n    });\n  }\n\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n    var className = element.className.trim();\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    }\n\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n  var onceSupported = function () {\n    var supported = false;\n    if (IS_BROWSER) {\n      var once = false;\n      var listener = function listener() {};\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n    return supported;\n  }();\n\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n      element.removeEventListener(event, handler, options);\n    });\n  }\n\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          listener.apply(element, args);\n        };\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n      element.addEventListener(event, _handler, options);\n    });\n  }\n\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n  function dispatchEvent(element, type, data) {\n    var event;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n    return element.dispatchEvent(event);\n  }\n\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n    var values = [];\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    }\n\n    // Rotate should come first before scale to match orientation transform\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n        startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref4) {\n    var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n    // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n\n    // Chunk Typed Array for better performance (#435)\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n        imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n            width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n            height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n            degree: imageData.rotate || 0\n          }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true);\n\n      // Initialize auto crop area\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n      // The width/height of auto crop area must large than \"minWidth/Height\"\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\n\n        // The min/maxCropBoxWidth/Height must be less than container's width/height\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        }\n\n        // The minWidth/Height must be less than maxWidth/Height\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n        crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n      if (!preview) {\n        return;\n      }\n      var previews = preview;\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img');\n\n        // Save the original size for recover\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n        img.src = url;\n        img.alt = alt;\n\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n        height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n      var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\n\n      // Resize when width changed or height changed\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n        this.render();\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n      if (this.disabled) {\n        return;\n      }\n      event.preventDefault();\n\n      // Limit wheel speed to prevent zoom too fast (#21)\n      if (this.wheeling) {\n        return;\n      }\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n        button = event.button;\n      if (this.disabled\n\n      // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && (\n      // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0\n\n      // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n      var options = this.options,\n        pointers = this.pointers;\n      var action;\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      // This line is required for preventing page zooming in iOS browsers\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n      if (this.disabled || !action) {\n        return;\n      }\n      var pointers = this.pointers;\n      event.preventDefault();\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n      var action = this.action,\n        pointers = this.pointers;\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n      if (!action) {\n        return;\n      }\n      event.preventDefault();\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset;\n\n      // Locking aspect ratio in \"free mode\" by holding shift key\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n            break;\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n            break;\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n            break;\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n            break;\n        }\n      };\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n\n        // Resize crop box\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_EAST);\n          width += range.x;\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_SOUTH);\n          height += range.y;\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n\n        // Move canvas\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n\n        // Zoom canvas\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n\n        // Create crop box\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n          if (range.y < 0) {\n            top -= height;\n          }\n\n          // Show the crop box if is hidden\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n          break;\n      }\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      }\n\n      // Override\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true);\n\n        // Render canvas after crop box rendered\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n      return this;\n    },\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n      element[NAMESPACE] = undefined;\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n      this.uncreate();\n      return this;\n    },\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          };\n\n          // Zoom from the triggering point of the event\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n      return this;\n    },\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n      return data;\n    },\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n      var cropBoxData = {};\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n        var ratio = imageData.width / imageData.naturalWidth;\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n        this.setCropBoxData(cropBoxData);\n      }\n      return this;\n    },\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n      return data;\n    },\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n      return data || {};\n    },\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n        this.renderCropBox();\n      }\n      return this;\n    },\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n      // Returns the source canvas if it is not cropped.\n      if (!this.cropped) {\n        return source;\n      }\n      var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n      var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: options.width || (ratio !== 1 ? source.width : initialWidth),\n          height: options.height || (ratio !== 1 ? source.height : initialHeight)\n        }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n      var sourceWidth = source.width;\n      var sourceHeight = source.height;\n\n      // Source canvas parameters\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight;\n\n      // Destination canvas parameters\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n      var params = [srcX, srcY, srcWidth, srcHeight];\n\n      // Avoid \"IndexSizeError\"\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      }\n\n      // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n        if (this.ready) {\n          this.initCropBox();\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n      return this;\n    },\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, Cropper);\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n        if (element[NAMESPACE]) {\n          return;\n        }\n        element[NAMESPACE] = this;\n        if (tagName === 'img') {\n          this.isImg = true;\n\n          // e.g.: \"img/picture.jpg\"\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url;\n\n          // Stop when it's a blank image\n          if (!url) {\n            return;\n          }\n\n          // e.g.: \"https://example.com/img/picture.jpg\"\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n        if (!url) {\n          return;\n        }\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n          options = this.options;\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        }\n\n        // Only IE10+ supports Typed Arrays\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        }\n\n        // Detect the mime type of the image directly if it is a Data URL\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n          return;\n        }\n\n        // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr;\n\n        // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        };\n\n        // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        // The third parameter is required for avoiding side-effect (#682)\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n          imageData = this.imageData;\n\n        // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n          var _parseOrientation = parseOrientation(orientation);\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n          url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          }\n\n          // Bust cache when there is not a \"crossOrigin\" property (#519)\n          crossOriginUrl = addTimestamp(url);\n        }\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n          _this2.build();\n        };\n\n        // Most modern browsers (excepts iOS WebKit)\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n        sizingImage.src = image.src;\n\n        // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n        var element = this.element,\n          options = this.options,\n          image = this.image;\n\n        // Create cropper elements\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image);\n\n        // Hide the original image\n        addClass(element, CLASS_HIDDEN);\n\n        // Inserts the cropper after to the current image\n        container.insertBefore(cropper, element.nextSibling);\n\n        // Show the hidden image\n        removeClass(image, CLASS_HIDE);\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n        if (options.autoCrop) {\n          this.crop();\n        }\n        this.setData(options.data);\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        var parentNode = this.cropper.parentNode;\n        if (parentNode) {\n          parentNode.removeChild(this.cropper);\n        }\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n    return Cropper;\n  }();\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}