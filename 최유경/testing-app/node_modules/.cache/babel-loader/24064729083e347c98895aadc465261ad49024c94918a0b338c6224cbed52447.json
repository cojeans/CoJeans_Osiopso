{"ast":null,"code":"/*\nCopyright (c) 2019 Daybrush\nname: react-moveable\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/moveable/blob/master/packages/react-moveable\nversion: 0.45.1\n*/\nimport getAgent from '@egjs/agent';\nimport { prefixNames, ref, refs, prefixCSS, withMethods } from 'framework-utils';\nimport { isArray, splitSpace, dot, findIndex, find, splitUnit, getKeys, decamelize, getShapeDirection, getRad, isObject, hasClass, isUndefined, isString, isFunction, convertUnitSize, between, throttle, TINY_NUM as TINY_NUM$1, average, getDist as getDist$1, throttleArray, calculateBoundSize, isNumber, addClass, requestAnimationFrame, removeClass, splitBracket, splitComma, cancelAnimationFrame } from '@daybrush/utils';\nimport { minus, calculate, plus, convertPositionMatrix, multiply, invert, fromTranslation, convertDimension, createScaleMatrix, multiplies, createOriginMatrix, convertMatrixtoCSS, rotate, createRotateMatrix, getOrigin, ignoreDimension, createIdentityMatrix, createWarpMatrix, convertCSStoMatrix } from '@scena/matrix';\nimport { parse, parseMat, toMat, calculateMatrixDist } from 'css-to-mat';\nimport ChildrenDiffer, { diff } from '@egjs/children-differ';\nimport { getMinMaxs, fitPoints, getOverlapSize, getAreaSize, isInside, getIntersectionPointsByConstants } from 'overlap-area';\nimport DragScroll from '@scena/dragscroll';\nimport * as React from 'react';\nimport { createElement } from 'react';\nimport Gesto from 'gesto';\nimport styled from 'react-css-styled';\nimport EventEmitter from '@scena/event-emitter';\nimport { diff as diff$1 } from '@egjs/list-differ';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction makeAble(name, able) {\n  var _a;\n  return __assign({\n    events: {},\n    props: (_a = {}, _a[name] = Boolean, _a),\n    name: name\n  }, able);\n}\nfunction getSVGCursor(scale, degree) {\n  return \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(32 * scale, \"px\\\" height=\\\"\").concat(32 * scale, \"px\\\" viewBox=\\\"0 0 32 32\\\" ><path d=\\\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"1.2\\\" fill=\\\"black\\\" stroke=\\\"white\\\" style=\\\"transform:rotate(\").concat(degree, \"deg);transform-origin: 16px 16px\\\"></path></svg>\");\n}\nfunction getCursorCSS(degree) {\n  var x1 = getSVGCursor(1, degree); // const x2 = getSVGCursor(2, degree);\n\n  var degree45 = Math.round(degree / 45) * 45 % 180;\n  var defaultCursor = \"ns-resize\";\n  if (degree45 === 135) {\n    defaultCursor = \"nwse-resize\";\n  } else if (degree45 === 45) {\n    defaultCursor = \"nesw-resize\";\n  } else if (degree45 === 90) {\n    defaultCursor = \"ew-resize\";\n  } // tslint:disable-next-line: max-line-length\n\n  return \"cursor:\".concat(defaultCursor, \";cursor: url('\").concat(x1, \"') 16 16, \").concat(defaultCursor, \";\");\n}\nvar agent = getAgent();\nvar IS_WEBKIT = agent.browser.webkit;\nvar IS_WEBKIT605 = IS_WEBKIT && function () {\n  var navi = typeof window === \"undefined\" ? {\n    userAgent: \"\"\n  } : window.navigator;\n  var res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n  return res ? parseFloat(res[1]) < 605 : false;\n}();\nvar IS_FIREFOX = agent.browser.name === \"firefox\";\nvar IS_SAFARI_ABOVE15 = parseInt(agent.browser.webkitVersion, 10) >= 612 || parseInt(agent.browser.version, 10) >= 15;\nvar PREFIX = \"moveable-\";\nvar MOVEABLE_CSS = \"\\n{\\n\\tposition: absolute;\\n\\twidth: 1px;\\n\\theight: 1px;\\n\\tleft: 0;\\n\\ttop: 0;\\n    z-index: 3000;\\n    --moveable-color: #4af;\\n    --zoom: 1;\\n    --zoompx: 1px;\\n    will-change: transform;\\n    outline: 1px solid transparent;\\n}\\n.control-box {\\n    z-index: 0;\\n}\\n.line, .control {\\n    position: absolute;\\n\\tleft: 0;\\n    top: 0;\\n    will-change: transform;\\n}\\n.control {\\n\\twidth: 14px;\\n\\theight: 14px;\\n\\tborder-radius: 50%;\\n\\tborder: 2px solid #fff;\\n\\tbox-sizing: border-box;\\n    background: #4af;\\n    background: var(--moveable-color);\\n\\tmargin-top: -7px;\\n    margin-left: -7px;\\n    border: 2px solid #fff;\\n    z-index: 10;\\n}\\n.padding {\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    width: 100px;\\n    height: 100px;\\n    transform-origin: 0 0;\\n}\\n.line {\\n\\twidth: 1px;\\n    height: 1px;\\n    background: #4af;\\n    background: var(--moveable-color);\\n\\ttransform-origin: 0px 50%;\\n}\\n.line.edge {\\n    z-index: 1;\\n    background: transparent;\\n}\\n.line.dashed {\\n    box-sizing: border-box;\\n    background: transparent;\\n}\\n.line.dashed.horizontal {\\n    border-top: 1px dashed #4af;\\n    border-top-color: #4af;\\n    border-top-color: var(--moveable-color);\\n}\\n.line.dashed.vertical {\\n    border-left: 1px dashed #4af;\\n    border-left-color: #4af;\\n    border-left-color: var(--moveable-color);\\n}\\n.line.vertical {\\n    transform: translateX(-50%);\\n}\\n.line.horizontal {\\n    transform: translateY(-50%);\\n}\\n.line.vertical.bold {\\n    width: 2px;\\n}\\n.line.horizontal.bold {\\n    height: 2px;\\n}\\n\\n.control.origin {\\n\\tborder-color: #f55;\\n\\tbackground: #fff;\\n\\twidth: 12px;\\n\\theight: 12px;\\n\\tmargin-top: -6px;\\n    margin-left: -6px;\\n\\tpointer-events: none;\\n}\\n\".concat([0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(function (degree) {\n  return \"\\n.direction[data-rotation=\\\"\".concat(degree, \"\\\"], :global .view-control-rotation\").concat(degree, \" {\\n\\t\").concat(getCursorCSS(degree), \"\\n}\\n\");\n}).join(\"\\n\"), \"\\n.group {\\n    z-index: -1;\\n}\\n.area {\\n    position: absolute;\\n}\\n.area-pieces {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    display: none;\\n}\\n.area.avoid, .area.pass {\\n    pointer-events: none;\\n}\\n.area.avoid+.area-pieces {\\n    display: block;\\n}\\n.area-piece {\\n    position: absolute;\\n}\\n\\n\").concat(IS_WEBKIT605 ? \":global svg *:before {\\n\\tcontent:\\\"\\\";\\n\\ttransform-origin: inherit;\\n}\" : \"\", \"\\n\");\nvar NEARBY_POS = [[0, 1, 2], [1, 0, 3], [2, 0, 3], [3, 1, 2]];\nvar FLOAT_POINT_NUM = 0.0001;\nvar TINY_NUM = 0.0000001;\nvar MIN_SCALE = 0.000000001;\nvar MAX_NUM = Math.pow(10, 10);\nvar MIN_NUM = -MAX_NUM;\nvar DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nvar DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\nvar DIRECTION_REGION_TO_DIRECTION = {\n  n: [0, -1],\n  e: [1, 0],\n  s: [0, 1],\n  w: [-1, 0],\n  nw: [-1, -1],\n  ne: [1, -1],\n  sw: [-1, 1],\n  se: [1, 1]\n};\nvar DIRECTION_INDEXES = {\n  n: [0, 1],\n  e: [1, 3],\n  s: [3, 2],\n  w: [2, 0],\n  nw: [0],\n  ne: [1],\n  sw: [2],\n  se: [3]\n};\nvar DIRECTION_ROTATIONS = {\n  n: 0,\n  s: 180,\n  w: 270,\n  e: 90,\n  nw: 315,\n  ne: 45,\n  sw: 225,\n  se: 135\n};\nvar MOVEABLE_METHODS = [\"isMoveableElement\", \"updateRect\", \"updateTarget\", \"destroy\", \"dragStart\", \"isInside\", \"hitTest\", \"setState\", \"getRect\", \"request\", \"isDragging\", \"getManager\", \"forceUpdate\", \"waitToChangeTarget\", \"updateSelectors\", \"getTargets\", \"stopDrag\"];\nfunction setCustomDrag(e, state, delta, isPinch, isConvert, ableName) {\n  var _a, _b;\n  if (ableName === void 0) {\n    ableName = \"draggable\";\n  }\n  var result = (_b = (_a = state.gestos[ableName]) === null || _a === void 0 ? void 0 : _a.move(delta, e.inputEvent)) !== null && _b !== void 0 ? _b : {};\n  var datas = result.originalDatas || result.datas;\n  var ableDatas = datas[ableName] || (datas[ableName] = {});\n  return __assign(__assign({}, isConvert ? convertDragDist(state, result) : result), {\n    isPinch: !!isPinch,\n    parentEvent: true,\n    datas: ableDatas,\n    originalDatas: e.originalDatas\n  });\n}\nvar CustomGesto = /*#__PURE__*/\nfunction () {\n  function CustomGesto(ableName) {\n    var _a;\n    if (ableName === void 0) {\n      ableName = \"draggable\";\n    }\n    this.ableName = ableName;\n    this.prevX = 0;\n    this.prevY = 0;\n    this.startX = 0;\n    this.startY = 0;\n    this.isDrag = false;\n    this.isFlag = false;\n    this.datas = {\n      draggable: {}\n    };\n    this.datas = (_a = {}, _a[ableName] = {}, _a);\n  }\n  var __proto = CustomGesto.prototype;\n  __proto.dragStart = function (client, e) {\n    this.isDrag = false;\n    this.isFlag = false;\n    var originalDatas = e.originalDatas;\n    this.datas = originalDatas;\n    if (!originalDatas[this.ableName]) {\n      originalDatas[this.ableName] = {};\n    }\n    return __assign(__assign({}, this.move(client, e.inputEvent)), {\n      type: \"dragstart\"\n    });\n  };\n  __proto.drag = function (client, inputEvent) {\n    return this.move([client[0] - this.prevX, client[1] - this.prevY], inputEvent);\n  };\n  __proto.move = function (delta, inputEvent) {\n    var clientX;\n    var clientY;\n    var isFirstDrag = false;\n    if (!this.isFlag) {\n      this.prevX = delta[0];\n      this.prevY = delta[1];\n      this.startX = delta[0];\n      this.startY = delta[1];\n      clientX = delta[0];\n      clientY = delta[1];\n      this.isFlag = true;\n    } else {\n      var isPrevDrag = this.isDrag;\n      clientX = this.prevX + delta[0];\n      clientY = this.prevY + delta[1];\n      if (delta[0] || delta[1]) {\n        this.isDrag = true;\n      }\n      if (!isPrevDrag && this.isDrag) {\n        isFirstDrag = true;\n      }\n    }\n    this.prevX = clientX;\n    this.prevY = clientY;\n    return {\n      type: \"drag\",\n      clientX: clientX,\n      clientY: clientY,\n      inputEvent: inputEvent,\n      isFirstDrag: isFirstDrag,\n      isDrag: this.isDrag,\n      distX: clientX - this.startX,\n      distY: clientY - this.startY,\n      deltaX: delta[0],\n      deltaY: delta[1],\n      datas: this.datas[this.ableName],\n      originalDatas: this.datas,\n      parentEvent: true,\n      parentGesto: this\n    };\n  };\n  return CustomGesto;\n}();\nfunction calculatePointerDist(moveable, e) {\n  var clientX = e.clientX,\n    clientY = e.clientY,\n    datas = e.datas;\n  var _a = moveable.state,\n    moveableClientRect = _a.moveableClientRect,\n    rootMatrix = _a.rootMatrix,\n    is3d = _a.is3d,\n    pos1 = _a.pos1;\n  var left = moveableClientRect.left,\n    top = moveableClientRect.top;\n  var n = is3d ? 4 : 3;\n  var _b = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1),\n    posX = _b[0],\n    posY = _b[1];\n  var _c = getDragDist({\n      datas: datas,\n      distX: posX,\n      distY: posY\n    }),\n    distX = _c[0],\n    distY = _c[1];\n  return [distX, distY];\n}\nfunction setDragStart(moveable, _a) {\n  var datas = _a.datas;\n  var _b = moveable.state,\n    allMatrix = _b.allMatrix,\n    beforeMatrix = _b.beforeMatrix,\n    is3d = _b.is3d,\n    left = _b.left,\n    top = _b.top,\n    origin = _b.origin,\n    offsetMatrix = _b.offsetMatrix,\n    targetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin;\n  var n = is3d ? 4 : 3;\n  datas.is3d = is3d;\n  datas.matrix = allMatrix;\n  datas.targetMatrix = targetMatrix;\n  datas.beforeMatrix = beforeMatrix;\n  datas.offsetMatrix = offsetMatrix;\n  datas.transformOrigin = transformOrigin;\n  datas.inverseMatrix = invert(allMatrix, n);\n  datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n  datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n  datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n  datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nfunction getTransformDirection(e) {\n  return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nfunction resolveTransformEvent(event, functionName) {\n  var datas = event.datas,\n    originalDatas = event.originalDatas.beforeRenderable;\n  var index = datas.transformIndex;\n  var nextTransforms = originalDatas.nextTransforms;\n  var length = nextTransforms.length;\n  var nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n  var nextIndex = 0;\n  if (index === -1) {\n    // translate => rotate => scale\n    if (functionName === \"translate\") {\n      nextIndex = 0;\n    } else if (functionName === \"rotate\") {\n      nextIndex = findIndex(nextTransforms, function (text) {\n        return text.match(/scale\\(/g);\n      });\n    }\n    if (nextIndex === -1) {\n      nextIndex = nextTransforms.length;\n    }\n    datas.transformIndex = nextIndex;\n  } else if (find(nextTransformAppendedIndexes, function (info) {\n    return info.index === index && info.functionName === functionName;\n  })) {\n    nextIndex = index;\n  } else {\n    nextIndex = index + nextTransformAppendedIndexes.filter(function (info) {\n      return info.index < index;\n    }).length;\n  }\n  var result = convertTransformInfo(nextTransforms, nextIndex);\n  var targetFunction = result.targetFunction;\n  var matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n  datas.beforeFunctionTexts = result.beforeFunctionTexts;\n  datas.afterFunctionTexts = result.afterFunctionTexts;\n  datas.beforeTransform = result.beforeFunctionMatrix;\n  datas.beforeTransform2 = result.beforeFunctionMatrix2;\n  datas.targetTansform = result.targetFunctionMatrix;\n  datas.afterTransform = result.afterFunctionMatrix;\n  datas.afterTransform2 = result.afterFunctionMatrix2;\n  datas.targetAllTransform = result.allFunctionMatrix;\n  if (targetFunction.functionName === matFunctionName) {\n    datas.afterFunctionTexts.splice(0, 1);\n    datas.isAppendTransform = false;\n  } else if (length > nextIndex) {\n    datas.isAppendTransform = true;\n    originalDatas.nextTransformAppendedIndexes = __spreadArray(__spreadArray([], nextTransformAppendedIndexes, true), [{\n      functionName: functionName,\n      index: nextIndex,\n      isAppend: true\n    }], false);\n  }\n}\nfunction convertTransformFormat(datas, value, dist) {\n  return \"\".concat(datas.beforeFunctionTexts.join(\" \"), \" \").concat(datas.isAppendTransform ? dist : value, \" \").concat(datas.afterFunctionTexts.join(\" \"));\n}\nfunction getTransformDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var _b = getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }),\n    bx = _b[0],\n    by = _b[1]; // B * [tx, ty] * A = [bx, by] * targetMatrix;\n  // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n  var res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n  return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nfunction getTransfromMatrix(datas, targetMatrix, isAfter) {\n  var beforeTransform = datas.beforeTransform,\n    afterTransform = datas.afterTransform,\n    beforeTransform2 = datas.beforeTransform2,\n    afterTransform2 = datas.afterTransform2,\n    targetAllTransform = datas.targetAllTransform; // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n  // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n  // nextTargetMatrix = (targetMatrix * targetAllTransform)\n\n  var nextTargetMatrix = isAfter ? multiply(targetAllTransform, targetMatrix, 4) : multiply(targetMatrix, targetAllTransform, 4); // res1 = B-1 * nextTargetMatrix\n\n  var res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4); // res3 = res2 * A-1\n\n  var afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n  return afterTargetMatrix;\n}\nfunction getBeforeDragDist(_a) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY; // TT = BT\n\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3; // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n  // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n\n  return minus(calculate(inverseBeforeMatrix, plus(absoluteOrigin, [distX, distY]), n), startDragBeforeDist);\n}\nfunction getDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var inverseBeforeMatrix = datas.inverseBeforeMatrix,\n    inverseMatrix = datas.inverseMatrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? inverseBeforeMatrix : inverseMatrix, plus(absoluteOrigin, [distX, distY]), n), isBefore ? startDragBeforeDist : startDragDist);\n}\nfunction getInverseDragDist(_a, isBefore) {\n  var datas = _a.datas,\n    distX = _a.distX,\n    distY = _a.distY;\n  var beforeMatrix = datas.beforeMatrix,\n    matrix = datas.matrix,\n    is3d = datas.is3d,\n    startDragBeforeDist = datas.startDragBeforeDist,\n    startDragDist = datas.startDragDist,\n    absoluteOrigin = datas.absoluteOrigin;\n  var n = is3d ? 4 : 3;\n  return minus(calculate(isBefore ? beforeMatrix : matrix, plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]), n), absoluteOrigin);\n}\nfunction calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin) {\n  if (prevWidth === void 0) {\n    prevWidth = width;\n  }\n  if (prevHeight === void 0) {\n    prevHeight = height;\n  }\n  if (prevOrigin === void 0) {\n    prevOrigin = [0, 0];\n  }\n  if (!transformOrigin) {\n    return prevOrigin;\n  }\n  return transformOrigin.map(function (pos, i) {\n    var _a = splitUnit(pos),\n      value = _a.value,\n      unit = _a.unit;\n    var prevSize = i ? prevHeight : prevWidth;\n    var size = i ? height : width;\n    if (pos === \"%\" || isNaN(value)) {\n      // no value but %\n      var measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n      return size * measureRatio;\n    } else if (unit !== \"%\") {\n      return value;\n    }\n    return size * value / 100;\n  });\n}\nfunction getPosIndexesByDirection(direction) {\n  var indexes = [];\n  if (direction[1] >= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(3);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(2);\n    }\n  }\n  if (direction[1] <= 0) {\n    if (direction[0] >= 0) {\n      indexes.push(1);\n    }\n    if (direction[0] <= 0) {\n      indexes.push(0);\n    }\n  }\n  return indexes;\n}\nfunction getPosesByDirection(poses, direction) {\n  /*\n  [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n  [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n  [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n  */\n  return getPosIndexesByDirection(direction).map(function (index) {\n    return poses[index];\n  });\n}\nfunction getPosByDirection(poses, direction) {\n  var xRatio = (direction[0] + 1) / 2;\n  var yRatio = (direction[1] + 1) / 2;\n  var top = [dot(poses[0][0], poses[1][0], xRatio, 1 - xRatio), dot(poses[0][1], poses[1][1], xRatio, 1 - xRatio)];\n  var bottom = [dot(poses[2][0], poses[3][0], xRatio, 1 - xRatio), dot(poses[2][1], poses[3][1], xRatio, 1 - xRatio)];\n  return [dot(top[0], bottom[0], yRatio, 1 - yRatio), dot(top[1], bottom[1], yRatio, 1 - yRatio)];\n}\nfunction getDist(startPos, matrix, width, height, n, fixedDirection) {\n  var poses = calculatePoses(matrix, width, height, n);\n  var fixedPos = getPosByDirection(poses, fixedDirection);\n  var distX = startPos[0] - fixedPos[0];\n  var distY = startPos[1] - fixedPos[1];\n  return [distX, distY];\n}\nfunction getNextMatrix(offsetMatrix, targetMatrix, origin, n) {\n  return multiply(offsetMatrix, getAbsoluteMatrix(targetMatrix, n, origin), n);\n}\nfunction getNextTransformMatrix(state, datas, transform) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d;\n  var beforeTransform = datas.beforeTransform,\n    afterTransform = datas.afterTransform;\n  var n = is3d ? 4 : 3;\n  var targetTransform = parseMat([transform]);\n  return getNextMatrix(offsetMatrix, convertDimension(multiply(multiply(beforeTransform, targetTransform, 4), afterTransform, 4), 4, n), transformOrigin, n);\n}\nfunction scaleMatrix(state, scale) {\n  var transformOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d,\n    targetMatrix = state.targetMatrix;\n  var n = is3d ? 4 : 3;\n  return getNextMatrix(offsetMatrix, multiply(targetMatrix, createScaleMatrix(scale, n), n), transformOrigin, n);\n}\nfunction fillTransformStartEvent(e) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  return {\n    setTransform: function (transform, index) {\n      if (index === void 0) {\n        index = -1;\n      }\n      originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      setTransformIndex(e, index);\n    },\n    setTransformIndex: function (index) {\n      setTransformIndex(e, index);\n    }\n  };\n}\nfunction setDefaultTransformIndex(e, property) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  var startTransforms = originalDatas.startTransforms;\n  setTransformIndex(e, findIndex(startTransforms, function (func) {\n    return func.indexOf(\"\".concat(property, \"(\")) === 0;\n  }));\n}\nfunction setTransformIndex(e, index) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  var datas = e.datas;\n  datas.transformIndex = index;\n  if (index === -1) {\n    return;\n  }\n  var transform = originalDatas.startTransforms[index];\n  if (!transform) {\n    return;\n  }\n  var info = parse([transform]);\n  datas.startValue = info[0].functionValue;\n}\nfunction fillOriginalTransform(e, transform) {\n  var originalDatas = getBeforeRenderableDatas(e);\n  originalDatas.nextTransforms = splitSpace(transform); // originalDatas.nextTargetMatrix = parseMat(transform);\n}\n\nfunction getBeforeRenderableDatas(e) {\n  return e.originalDatas.beforeRenderable;\n}\nfunction getNextTransforms(e) {\n  var originalDatas = e.originalDatas.beforeRenderable;\n  return originalDatas.nextTransforms;\n}\nfunction getNextTransformText(e) {\n  return getNextTransforms(e).join(\" \");\n}\nfunction getNextStyle(e) {\n  return getBeforeRenderableDatas(e).nextStyle;\n}\nfunction fillTransformEvent(moveable, nextTransform, delta, isPinch, e) {\n  fillOriginalTransform(e, nextTransform);\n  var drag = Draggable.drag(moveable, setCustomDrag(e, moveable.state, delta, isPinch, false));\n  var afterTransform = drag ? drag.transform : nextTransform;\n  return __assign(__assign({\n    transform: nextTransform,\n    drag: drag\n  }, fillCSSObject({\n    transform: afterTransform\n  }, e)), {\n    afterTransform: afterTransform\n  });\n}\nfunction getTranslateDist(moveable, transform, fixedDirection, fixedPosition, datas) {\n  var state = moveable.state;\n  var left = state.left,\n    top = state.top;\n  var groupable = moveable.props.groupable;\n  var nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n  var dist = minus(fixedPosition, nextFixedPosition);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getScaleDist(moveable, scaleDist, fixedDirection, fixedPosition, datas) {\n  var dist = getTranslateDist(moveable, \"scale(\".concat(scaleDist.join(\", \"), \")\"), fixedDirection, fixedPosition, datas);\n  return dist;\n}\nfunction getDirectionByPos(pos, width, height) {\n  return [-1 + pos[0] / (width / 2), -1 + pos[1] / (height / 2)];\n}\nfunction getDirectionOffset(moveable, direction, nextMatrix) {\n  if (nextMatrix === void 0) {\n    nextMatrix = moveable.state.allMatrix;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height,\n    is3d = _a.is3d;\n  var n = is3d ? 4 : 3;\n  var nextFixedOffset = [width / 2 * (1 + direction[0]), height / 2 * (1 + direction[1])];\n  return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nfunction getRotateDist(moveable, rotateDist, datas) {\n  var fixedDirection = datas.fixedDirection;\n  var fixedPosition = datas.fixedPosition;\n  return getTranslateDist(moveable, \"rotate(\".concat(rotateDist, \"deg)\"), fixedDirection, fixedPosition, datas);\n}\nfunction getResizeDist(moveable, width, height, fixedPosition, transformOrigin, datas) {\n  var groupable = moveable.props.groupable;\n  var state = moveable.state;\n  var prevOrigin = state.transformOrigin,\n    offsetMatrix = state.offsetMatrix,\n    is3d = state.is3d,\n    prevWidth = state.width,\n    prevHeight = state.height,\n    left = state.left,\n    top = state.top;\n  var fixedDirection = datas.fixedDirection;\n  var targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n  var n = is3d ? 4 : 3;\n  var nextOrigin = calculateTransformOrigin(transformOrigin, width, height, prevWidth, prevHeight, prevOrigin);\n  var groupLeft = groupable ? left : 0;\n  var groupTop = groupable ? top : 0;\n  var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n  var dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n  return minus(dist, [groupLeft, groupTop]);\n}\nfunction getAbsolutePosition(moveable, direction) {\n  return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\nfunction getGestoData(moveable, ableName) {\n  var targetGesto = moveable.targetGesto;\n  var controlGesto = moveable.controlGesto;\n  var data;\n  if (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) {\n    data = targetGesto.getEventData()[ableName];\n  }\n  if (!data && (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag())) {\n    data = controlGesto.getEventData()[ableName];\n  }\n  return data || {};\n}\nfunction multiply2(pos1, pos2) {\n  return [pos1[0] * pos2[0], pos1[1] * pos2[1]];\n}\nfunction prefix() {\n  var classNames = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    classNames[_i] = arguments[_i];\n  }\n  return prefixNames.apply(void 0, __spreadArray([PREFIX], classNames, false));\n}\nfunction defaultSync(fn) {\n  fn();\n}\nfunction getTransformMatrix(transform) {\n  if (!transform || transform === \"none\") {\n    return [1, 0, 0, 1, 0, 0];\n  }\n  if (isObject(transform)) {\n    return transform;\n  }\n  return parseMat(transform);\n}\nfunction getAbsoluteMatrix(matrix, n, origin) {\n  return multiplies(n, createOriginMatrix(origin, n), matrix, createOriginMatrix(origin.map(function (a) {\n    return -a;\n  }), n));\n}\nfunction measureSVGSize(el, unit, isHorizontal) {\n  if (unit === \"%\") {\n    var viewBox = getSVGViewBox(el.ownerSVGElement);\n    return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n  }\n  return 1;\n}\nfunction getBeforeTransformOrigin(el) {\n  var relativeOrigin = getTransformOrigin(getComputedStyle$1(el, \":before\"));\n  return relativeOrigin.map(function (o, i) {\n    var _a = splitUnit(o),\n      value = _a.value,\n      unit = _a.unit;\n    return value * measureSVGSize(el, unit, i === 0);\n  });\n}\nfunction getTransformOrigin(style) {\n  var transformOrigin = style.transformOrigin;\n  return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nfunction getElementTransform(target, computedStyle) {\n  if (computedStyle === void 0) {\n    computedStyle = getComputedStyle$1(target);\n  }\n  var computedTransform = computedStyle.transform;\n  if (computedTransform && computedTransform !== \"none\") {\n    return computedStyle.transform;\n  }\n  if (\"transform\" in target) {\n    var list = target.transform;\n    var baseVal = list.baseVal;\n    if (!baseVal) {\n      return \"\";\n    }\n    var length = baseVal.length;\n    if (!length) {\n      return \"\";\n    }\n    var matrixes = [];\n    var _loop_1 = function (i) {\n      var matrix = baseVal[i].matrix;\n      matrixes.push(\"matrix(\".concat([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].map(function (chr) {\n        return matrix[chr];\n      }).join(\", \"), \")\"));\n    };\n    for (var i = 0; i < length; ++i) {\n      _loop_1(i);\n    }\n    return matrixes.join(\" \");\n  }\n  return \"\";\n}\nfunction getOffsetInfo(el, lastParent, isParent, checkZoom, targetStyle) {\n  var _a, _b, _c;\n  var doc = el && el.ownerDocument ? el.ownerDocument : document;\n  var documentElement = doc.documentElement || doc.body;\n  var hasSlot = false;\n  var target;\n  var parentSlotElement;\n  if (!el || isParent) {\n    target = el;\n  } else {\n    var assignedSlotParentElement = (_a = el === null || el === void 0 ? void 0 : el.assignedSlot) === null || _a === void 0 ? void 0 : _a.parentElement;\n    var parentElement = el.parentElement;\n    if (assignedSlotParentElement) {\n      hasSlot = true;\n      parentSlotElement = parentElement;\n      target = assignedSlotParentElement;\n    } else {\n      target = parentElement;\n    }\n  }\n  var isCustomElement = false;\n  var isEnd = el === lastParent || target === lastParent;\n  var position = \"relative\";\n  var offsetZoom = 1;\n  var targetZoom = parseFloat((_b = targetStyle) === null || _b === void 0 ? void 0 : _b.zoom) || 1;\n  var targetPosition = targetStyle === null || targetStyle === void 0 ? void 0 : targetStyle.position;\n  while (target && target !== documentElement) {\n    if (lastParent === target) {\n      isEnd = true;\n    }\n    var style = getComputedStyle$1(target);\n    var tagName = target.tagName.toLowerCase();\n    var transform = getElementTransform(target, style);\n    var willChange = style.willChange;\n    var zoom = parseFloat(style.zoom) || 1;\n    position = style.position;\n    if (checkZoom && zoom !== 1) {\n      offsetZoom = zoom;\n      break;\n    }\n    if (\n    // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n    !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\" || tagName === \"svg\" || position !== \"static\" || transform && transform !== \"none\" || willChange === \"transform\") {\n      break;\n    }\n    var slotParentNode = (_c = el === null || el === void 0 ? void 0 : el.assignedSlot) === null || _c === void 0 ? void 0 : _c.parentNode;\n    var targetParentNode = target.parentNode;\n    if (slotParentNode) {\n      hasSlot = true;\n      parentSlotElement = targetParentNode;\n    }\n    var parentNode = slotParentNode || targetParentNode;\n    if (parentNode && parentNode.nodeType === 11) {\n      // Shadow Root\n      target = parentNode.host;\n      isCustomElement = true;\n      break;\n    }\n    target = parentNode;\n    position = \"relative\";\n  }\n  return {\n    offsetZoom: offsetZoom,\n    hasSlot: hasSlot,\n    parentSlotElement: parentSlotElement,\n    isCustomElement: isCustomElement,\n    isStatic: position === \"static\",\n    isEnd: isEnd || !target || target === documentElement,\n    offsetParent: target || documentElement\n  };\n}\nfunction getOffsetPosInfo(el, target, style) {\n  var _a;\n  var tagName = el.tagName.toLowerCase();\n  var offsetLeft = el.offsetLeft;\n  var offsetTop = el.offsetTop; // svg\n\n  var isSVG = isUndefined(offsetLeft);\n  var hasOffset = !isSVG;\n  var origin;\n  var targetOrigin; // inner svg element\n\n  if (!hasOffset && tagName !== \"svg\") {\n    origin = IS_WEBKIT605 ? getBeforeTransformOrigin(el) : getTransformOrigin(style).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n    hasOffset = true;\n    _a = getSVGGraphicsOffset(el, origin, el === target && target.tagName.toLowerCase() === \"g\"), offsetLeft = _a[0], offsetTop = _a[1], origin[0] = _a[2], origin[1] = _a[3];\n  } else {\n    origin = getTransformOrigin(style).map(function (pos) {\n      return parseFloat(pos);\n    });\n    targetOrigin = origin.slice();\n  }\n  return {\n    tagName: tagName,\n    isSVG: isSVG,\n    hasOffset: hasOffset,\n    offset: [offsetLeft || 0, offsetTop || 0],\n    origin: origin,\n    targetOrigin: targetOrigin\n  };\n}\nfunction getBodyOffset(el, isSVG, style) {\n  if (style === void 0) {\n    style = getComputedStyle$1(el);\n  }\n  var bodyStyle = getComputedStyle$1(document.body);\n  var bodyPosition = bodyStyle.position;\n  if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n    return [0, 0];\n  }\n  var marginLeft = parseInt(bodyStyle.marginLeft, 10);\n  var marginTop = parseInt(bodyStyle.marginTop, 10);\n  if (style.position === \"absolute\") {\n    if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n      marginTop = 0;\n    }\n    if (style.left !== \"auto\" || style.right !== \"auto\") {\n      marginLeft = 0;\n    }\n  }\n  return [marginLeft, marginTop];\n}\nfunction convert3DMatrixes(matrixes) {\n  matrixes.forEach(function (info) {\n    var matrix = info.matrix;\n    if (matrix) {\n      info.matrix = convertDimension(matrix, 3, 4);\n    }\n  });\n}\nfunction getPositionFixedInfo(el) {\n  var fixedContainer = el.parentElement;\n  var hasTransform = false;\n  while (fixedContainer) {\n    var transform = getComputedStyle$1(fixedContainer).transform;\n    if (transform && transform !== \"none\") {\n      hasTransform = true;\n      break;\n    }\n    if (fixedContainer === document.body) {\n      break;\n    }\n    fixedContainer = fixedContainer.parentElement;\n  }\n  return {\n    fixedContainer: fixedContainer || document.body,\n    hasTransform: hasTransform\n  };\n}\nfunction makeMatrixCSS(matrix, is3d) {\n  if (is3d === void 0) {\n    is3d = matrix.length > 9;\n  }\n  return \"\".concat(is3d ? \"matrix3d\" : \"matrix\", \"(\").concat(convertMatrixtoCSS(matrix, !is3d).join(\",\"), \")\");\n}\nfunction getSVGViewBox(el) {\n  var clientWidth = el.clientWidth;\n  var clientHeight = el.clientHeight;\n  if (!el) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      clientWidth: clientWidth,\n      clientHeight: clientHeight\n    };\n  }\n  var viewBox = el.viewBox;\n  var baseVal = viewBox && viewBox.baseVal || {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  return {\n    x: baseVal.x,\n    y: baseVal.y,\n    width: baseVal.width || clientWidth,\n    height: baseVal.height || clientHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight\n  };\n}\nfunction getSVGMatrix(el, n) {\n  var _a = getSVGViewBox(el),\n    viewBoxWidth = _a.width,\n    viewBoxHeight = _a.height,\n    clientWidth = _a.clientWidth,\n    clientHeight = _a.clientHeight;\n  var scaleX = clientWidth / viewBoxWidth;\n  var scaleY = clientHeight / viewBoxHeight;\n  var preserveAspectRatio = el.preserveAspectRatio.baseVal; // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n\n  var align = preserveAspectRatio.align; // 1 : meet 2: slice\n\n  var meetOrSlice = preserveAspectRatio.meetOrSlice;\n  var svgOrigin = [0, 0];\n  var scale = [scaleX, scaleY];\n  var translate = [0, 0];\n  if (align !== 1) {\n    var xAlign = (align - 2) % 3;\n    var yAlign = Math.floor((align - 2) / 3);\n    svgOrigin[0] = viewBoxWidth * xAlign / 2;\n    svgOrigin[1] = viewBoxHeight * yAlign / 2;\n    var scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n    scale[0] = scaleDimension;\n    scale[1] = scaleDimension;\n    translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n    translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n  }\n  var scaleMatrix = createScaleMatrix(scale, n);\n  scaleMatrix[n * (n - 1)] = translate[0], scaleMatrix[n * (n - 1) + 1] = translate[1];\n  return getAbsoluteMatrix(scaleMatrix, n, svgOrigin);\n}\nfunction getSVGGraphicsOffset(el, origin, isGTarget) {\n  if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\n    return [0, 0, 0, 0];\n  }\n  var bbox = el.getBBox();\n  var viewBox = getSVGViewBox(el.ownerSVGElement);\n  var left = bbox.x - viewBox.x;\n  var top = bbox.y - viewBox.y;\n  return [left, top, origin[0] - left, origin[1] - top];\n}\nfunction calculatePosition(matrix, pos, n) {\n  return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nfunction calculatePoses(matrix, width, height, n) {\n  return [[0, 0], [width, 0], [0, height], [width, height]].map(function (pos) {\n    return calculatePosition(matrix, pos, n);\n  });\n}\nfunction getRect(poses) {\n  var posesX = poses.map(function (pos) {\n    return pos[0];\n  });\n  var posesY = poses.map(function (pos) {\n    return pos[1];\n  });\n  var left = Math.min.apply(Math, posesX);\n  var top = Math.min.apply(Math, posesY);\n  var right = Math.max.apply(Math, posesX);\n  var bottom = Math.max.apply(Math, posesY);\n  var rectWidth = right - left;\n  var rectHeight = bottom - top;\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    width: rectWidth,\n    height: rectHeight\n  };\n}\nfunction calculateRect(matrix, width, height, n) {\n  var poses = calculatePoses(matrix, width, height, n);\n  return getRect(poses);\n}\nfunction getSVGOffset(offsetInfo, targetInfo, container, n, beforeMatrix) {\n  var _a;\n  var target = offsetInfo.target;\n  var origin = offsetInfo.origin;\n  var targetMatrix = targetInfo.matrix;\n  var _b = getSize(target),\n    width = _b.offsetWidth,\n    height = _b.offsetHeight;\n  var containerClientRect = container.getBoundingClientRect();\n  var margin = [0, 0];\n  if (container === document.body) {\n    margin = getBodyOffset(target, true);\n  }\n  var rect = target.getBoundingClientRect();\n  var rectLeft = rect.left - containerClientRect.left + container.scrollLeft - (container.clientLeft || 0) + margin[0];\n  var rectTop = rect.top - containerClientRect.top + container.scrollTop - (container.clientTop || 0) + margin[1];\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  var mat = multiplies(n, beforeMatrix, targetMatrix);\n  var _c = calculateRect(mat, width, height, n),\n    prevLeft = _c.left,\n    prevTop = _c.top,\n    prevWidth = _c.width,\n    prevHeight = _c.height;\n  var posOrigin = calculatePosition(mat, origin, n);\n  var prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n  var rectOrigin = [rectLeft + prevOrigin[0] * rectWidth / prevWidth, rectTop + prevOrigin[1] * rectHeight / prevHeight];\n  var offset = [0, 0];\n  var count = 0;\n  while (++count < 10) {\n    var inverseBeforeMatrix = invert(beforeMatrix, n);\n    _a = minus(calculatePosition(inverseBeforeMatrix, rectOrigin, n), calculatePosition(inverseBeforeMatrix, posOrigin, n)), offset[0] = _a[0], offset[1] = _a[1];\n    var mat2 = multiplies(n, beforeMatrix, createOriginMatrix(offset, n), targetMatrix);\n    var _d = calculateRect(mat2, width, height, n),\n      nextLeft = _d.left,\n      nextTop = _d.top;\n    var distLeft = nextLeft - rectLeft;\n    var distTop = nextTop - rectTop;\n    if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n      break;\n    }\n    rectOrigin[0] -= distLeft;\n    rectOrigin[1] -= distTop;\n  }\n  return offset.map(function (p) {\n    return Math.round(p);\n  });\n}\nfunction calculateMoveableClientPositions(rootMatrix, poses, rootClientRect) {\n  var is3d = rootMatrix.length === 16;\n  var n = is3d ? 4 : 3;\n  var rootPoses = poses.map(function (pos) {\n    return calculatePosition(rootMatrix, pos, n);\n  });\n  var left = rootClientRect.left,\n    top = rootClientRect.top;\n  return rootPoses.map(function (pos) {\n    return [pos[0] + left, pos[1] + top];\n  });\n}\nfunction calculateMoveablePosition(matrix, origin, width, height) {\n  var is3d = matrix.length === 16;\n  var n = is3d ? 4 : 3;\n  var poses = calculatePoses(matrix, width, height, n);\n  var _a = poses[0],\n    x1 = _a[0],\n    y1 = _a[1],\n    _b = poses[1],\n    x2 = _b[0],\n    y2 = _b[1],\n    _c = poses[2],\n    x3 = _c[0],\n    y3 = _c[1],\n    _d = poses[3],\n    x4 = _d[0],\n    y4 = _d[1];\n  var _e = calculatePosition(matrix, origin, n),\n    originX = _e[0],\n    originY = _e[1];\n  var left = Math.min(x1, x2, x3, x4);\n  var top = Math.min(y1, y2, y3, y4);\n  var right = Math.max(x1, x2, x3, x4);\n  var bottom = Math.max(y1, y2, y3, y4);\n  x1 = x1 - left || 0;\n  x2 = x2 - left || 0;\n  x3 = x3 - left || 0;\n  x4 = x4 - left || 0;\n  y1 = y1 - top || 0;\n  y2 = y2 - top || 0;\n  y3 = y3 - top || 0;\n  y4 = y4 - top || 0;\n  originX = originX - left || 0;\n  originY = originY - top || 0;\n  var direction = getShapeDirection(calculatePoses(matrix, 100, 100, n));\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom,\n    origin: [originX, originY],\n    pos1: [x1, y1],\n    pos2: [x2, y2],\n    pos3: [x3, y3],\n    pos4: [x4, y4],\n    direction: direction\n  };\n}\nfunction getDistSize(vec) {\n  return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nfunction getDiagonalSize(pos1, pos2) {\n  return getDistSize([pos2[0] - pos1[0], pos2[1] - pos1[1]]);\n}\nfunction getLineStyle(pos1, pos2, zoom, rad) {\n  if (zoom === void 0) {\n    zoom = 1;\n  }\n  if (rad === void 0) {\n    rad = getRad(pos1, pos2);\n  }\n  var width = getDiagonalSize(pos1, pos2);\n  return {\n    transform: \"translateY(-50%) translate(\".concat(pos1[0], \"px, \").concat(pos1[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\"),\n    width: \"\".concat(width, \"px\")\n  };\n}\nfunction getControlTransform(rotation, zoom) {\n  var poses = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    poses[_i - 2] = arguments[_i];\n  }\n  var length = poses.length;\n  var x = poses.reduce(function (prev, pos) {\n    return prev + pos[0];\n  }, 0) / length;\n  var y = poses.reduce(function (prev, pos) {\n    return prev + pos[1];\n  }, 0) / length;\n  return {\n    transform: \"translateZ(0px) translate(\".concat(x, \"px, \").concat(y, \"px) rotate(\").concat(rotation, \"rad) scale(\").concat(zoom, \")\")\n  };\n}\nfunction getProps(props, ableName) {\n  var self = props[ableName];\n  if (isObject(self)) {\n    return __assign(__assign({}, props), self);\n  }\n  return props;\n}\nfunction getSize(target, style) {\n  if (style === void 0) {\n    style = target ? getComputedStyle$1(target) : null;\n  }\n  var hasOffset = target && !isUndefined(target.offsetWidth);\n  var offsetWidth = 0;\n  var offsetHeight = 0;\n  var clientWidth = 0;\n  var clientHeight = 0;\n  var cssWidth = 0;\n  var cssHeight = 0;\n  var contentWidth = 0;\n  var contentHeight = 0;\n  var minWidth = 0;\n  var minHeight = 0;\n  var minOffsetWidth = 0;\n  var minOffsetHeight = 0;\n  var maxWidth = Infinity;\n  var maxHeight = Infinity;\n  var maxOffsetWidth = Infinity;\n  var maxOffsetHeight = Infinity;\n  var inlineCSSWidth = 0;\n  var inlineCSSHeight = 0;\n  var svg = false;\n  if (target) {\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n      var bbox = target.getBBox();\n      svg = true;\n      offsetWidth = bbox.width;\n      offsetHeight = bbox.height;\n      cssWidth = offsetWidth;\n      cssHeight = offsetHeight;\n      contentWidth = offsetWidth;\n      contentHeight = offsetHeight;\n      clientWidth = offsetWidth;\n      clientHeight = offsetHeight;\n    } else {\n      var targetStyle = target.style;\n      var boxSizing = style.boxSizing === \"border-box\";\n      var borderLeft = parseFloat(style.borderLeftWidth) || 0;\n      var borderRight = parseFloat(style.borderRightWidth) || 0;\n      var borderTop = parseFloat(style.borderTopWidth) || 0;\n      var borderBottom = parseFloat(style.borderBottomWidth) || 0;\n      var paddingLeft = parseFloat(style.paddingLeft) || 0;\n      var paddingRight = parseFloat(style.paddingRight) || 0;\n      var paddingTop = parseFloat(style.paddingTop) || 0;\n      var paddingBottom = parseFloat(style.paddingBottom) || 0;\n      var horizontalPadding = paddingLeft + paddingRight;\n      var verticalPadding = paddingTop + paddingBottom;\n      var horizontalBorder = borderLeft + borderRight;\n      var verticalBorder = borderTop + borderBottom;\n      var horizontalOffset = horizontalPadding + horizontalBorder;\n      var verticalOffset = verticalPadding + verticalBorder;\n      var position = style.position;\n      var containerWidth = 0;\n      var containerHeight = 0; // SVGSVGElement, HTMLElement\n\n      if (\"clientLeft\" in target) {\n        var parentElement = null;\n        if (position === \"absolute\") {\n          var offsetInfo = getOffsetInfo(target, document.body);\n          parentElement = offsetInfo.offsetParent;\n        } else {\n          parentElement = target.parentElement;\n        }\n        if (parentElement) {\n          var parentStyle = getComputedStyle$1(parentElement);\n          containerWidth = parseFloat(parentStyle.width);\n          containerHeight = parseFloat(parentStyle.height);\n        }\n      }\n      minWidth = Math.max(horizontalPadding, convertUnitSize(style.minWidth, containerWidth) || 0);\n      minHeight = Math.max(verticalPadding, convertUnitSize(style.minHeight, containerHeight) || 0);\n      maxWidth = convertUnitSize(style.maxWidth, containerWidth);\n      maxHeight = convertUnitSize(style.maxHeight, containerHeight);\n      if (isNaN(maxWidth)) {\n        maxWidth = Infinity;\n      }\n      if (isNaN(maxHeight)) {\n        maxHeight = Infinity;\n      }\n      inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n      inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n      cssWidth = parseFloat(style.width) || 0;\n      cssHeight = parseFloat(style.height) || 0;\n      contentWidth = Math.abs(cssWidth - inlineCSSWidth) < 1 ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth) : cssWidth;\n      contentHeight = Math.abs(cssHeight - inlineCSSHeight) < 1 ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight) : cssHeight;\n      offsetWidth = contentWidth;\n      offsetHeight = contentHeight;\n      clientWidth = contentWidth;\n      clientHeight = contentHeight;\n      if (boxSizing) {\n        maxOffsetWidth = maxWidth;\n        maxOffsetHeight = maxHeight;\n        minOffsetWidth = minWidth;\n        minOffsetHeight = minHeight;\n        contentWidth = offsetWidth - horizontalOffset;\n        contentHeight = offsetHeight - verticalOffset;\n      } else {\n        maxOffsetWidth = maxWidth + horizontalOffset;\n        maxOffsetHeight = maxHeight + verticalOffset;\n        minOffsetWidth = minWidth + horizontalOffset;\n        minOffsetHeight = minHeight + verticalOffset;\n        offsetWidth = contentWidth + horizontalOffset;\n        offsetHeight = contentHeight + verticalOffset;\n      }\n      clientWidth = contentWidth + horizontalPadding;\n      clientHeight = contentHeight + verticalPadding;\n    }\n  }\n  return {\n    svg: svg,\n    offsetWidth: offsetWidth,\n    offsetHeight: offsetHeight,\n    clientWidth: clientWidth,\n    clientHeight: clientHeight,\n    contentWidth: contentWidth,\n    contentHeight: contentHeight,\n    inlineCSSWidth: inlineCSSWidth,\n    inlineCSSHeight: inlineCSSHeight,\n    cssWidth: cssWidth,\n    cssHeight: cssHeight,\n    minWidth: minWidth,\n    minHeight: minHeight,\n    maxWidth: maxWidth,\n    maxHeight: maxHeight,\n    minOffsetWidth: minOffsetWidth,\n    minOffsetHeight: minOffsetHeight,\n    maxOffsetWidth: maxOffsetWidth,\n    maxOffsetHeight: maxOffsetHeight\n  };\n}\nfunction getRotationRad(poses, direction) {\n  return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nfunction resetClientRect() {\n  return {\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    right: 0,\n    bottom: 0,\n    clientLeft: 0,\n    clientTop: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n    scrollWidth: 0,\n    scrollHeight: 0\n  };\n}\nfunction getExtendsRect(el, rect) {\n  var isRoot = el === document.body || el === document.documentElement;\n  var extendsRect = {\n    clientLeft: el.clientLeft,\n    clientTop: el.clientTop,\n    clientWidth: el.clientWidth,\n    clientHeight: el.clientHeight,\n    scrollWidth: el.scrollWidth,\n    scrollHeight: el.scrollHeight,\n    overflow: false\n  };\n  if (isRoot) {\n    extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n    extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n  }\n  extendsRect.overflow = getComputedStyle$1(el).overflow !== \"visible\";\n  return __assign(__assign({}, rect), extendsRect);\n}\nfunction getClientRectByPosition(position, base, el, isExtends) {\n  var left = position.left,\n    right = position.right,\n    top = position.top,\n    bottom = position.bottom;\n  var baseTop = base.top;\n  var baseLeft = base.left;\n  var rect = {\n    left: baseLeft + left,\n    top: baseTop + top,\n    right: baseLeft + right,\n    bottom: baseTop + bottom,\n    width: right - left,\n    height: bottom - top\n  };\n  if (el && isExtends) {\n    return getExtendsRect(el, rect);\n  }\n  return rect;\n}\nfunction getClientRect(el, isExtends) {\n  var left = 0;\n  var top = 0;\n  var width = 0;\n  var height = 0; // let isRoot = false;\n\n  if (el) {\n    // isRoot = el === document.body || el === document.documentElement;\n    // if (isRoot) {\n    //     width = window.innerWidth;\n    //     height = window.innerHeight;\n    //     const scrollPos = getBodyScrollPos();\n    //     [left, top] = [-scrollPos[0], -scrollPos[1]];\n    // } else {\n    var clientRect = el.getBoundingClientRect();\n    left = clientRect.left;\n    top = clientRect.top;\n    width = clientRect.width;\n    height = clientRect.height; // }\n  }\n\n  var rect = {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    right: left + width,\n    bottom: top + height\n  };\n  if (el && isExtends) {\n    return getExtendsRect(el, rect);\n  }\n  return rect;\n}\nfunction getTotalDirection(parentDirection, isPinch, inputEvent, datas) {\n  var direction;\n  if (parentDirection) {\n    direction = parentDirection;\n  } else if (isPinch) {\n    direction = [0, 0];\n  } else {\n    var target = inputEvent.target;\n    direction = getDirection(target, datas);\n  }\n  return direction;\n}\nfunction getDirection(target, datas) {\n  if (!target) {\n    return;\n  }\n  var deg = target.getAttribute(\"data-rotation\") || \"\";\n  var direciton = target.getAttribute(\"data-direction\");\n  datas.deg = deg;\n  if (!direciton) {\n    return;\n  }\n  var dir = [0, 0];\n  direciton.indexOf(\"w\") > -1 && (dir[0] = -1);\n  direciton.indexOf(\"e\") > -1 && (dir[0] = 1);\n  direciton.indexOf(\"n\") > -1 && (dir[1] = -1);\n  direciton.indexOf(\"s\") > -1 && (dir[1] = 1);\n  return dir;\n}\nfunction getAbsolutePoses(poses, dist) {\n  return [plus(dist, poses[0]), plus(dist, poses[1]), plus(dist, poses[2]), plus(dist, poses[3])];\n}\nfunction getAbsolutePosesByState(_a) {\n  var left = _a.left,\n    top = _a.top,\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nfunction roundSign(num) {\n  return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nfunction unset(self, name) {\n  var _a;\n  (_a = self[name]) === null || _a === void 0 ? void 0 : _a.unset();\n  self[name] = null;\n}\nfunction fillCSSObject(style, resolvedEvent) {\n  if (resolvedEvent) {\n    var originalDatas = getBeforeRenderableDatas(resolvedEvent);\n    originalDatas.nextStyle = __assign(__assign({}, originalDatas.nextStyle), style);\n  }\n  return {\n    style: style,\n    cssText: getKeys(style).map(function (name) {\n      return \"\".concat(decamelize(name, \"-\"), \": \").concat(style[name], \";\");\n    }).join(\"\")\n  };\n}\nfunction fillAfterTransform(prevEvent, nextEvent, resolvedEvent) {\n  var afterTransform = nextEvent.afterTransform || nextEvent.transform;\n  return __assign(__assign({}, fillCSSObject(__assign(__assign(__assign({}, prevEvent.style), nextEvent.style), {\n    transform: afterTransform\n  }), resolvedEvent)), {\n    afterTransform: afterTransform,\n    transform: prevEvent.transform\n  });\n}\nfunction fillParams(moveable, e, params, isBeforeEvent) {\n  var datas = e.datas;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  var nextParams = __assign(__assign({}, params), {\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    moveable: moveable,\n    datas: datas.datas,\n    isFirstDrag: !!e.isFirstDrag,\n    stopAble: function () {\n      datas.isEventStart = false;\n    },\n    stopDrag: function () {\n      var _a;\n      (_a = e.stop) === null || _a === void 0 ? void 0 : _a.call(e);\n    }\n  });\n  if (!datas.isStartEvent) {\n    datas.isStartEvent = true;\n  } else if (!isBeforeEvent) {\n    datas.lastEvent = nextParams;\n  }\n  return nextParams;\n}\nfunction fillEndParams(moveable, e, params) {\n  var datas = e.datas;\n  var isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n  if (!datas.datas) {\n    datas.datas = {};\n  }\n  return __assign(__assign({\n    isDrag: isDrag\n  }, params), {\n    moveable: moveable,\n    target: moveable.state.target,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    inputEvent: e.inputEvent,\n    currentTarget: moveable,\n    lastEvent: datas.lastEvent,\n    isDouble: e.isDouble,\n    datas: datas.datas,\n    isFirstDrag: !!e.isFirstDrag\n  });\n}\nfunction catchEvent(moveable, name, callback) {\n  moveable._emitter.on(name, callback);\n}\nfunction triggerEvent(moveable, name, params, isManager) {\n  return moveable.triggerEvent(name, params, isManager);\n}\nfunction getComputedStyle$1(el, pseudoElt) {\n  return window.getComputedStyle(el, pseudoElt);\n}\nfunction filterAbles(ables, methods, triggerAblesSimultaneously) {\n  var enabledAbles = {};\n  var ableGroups = {};\n  return ables.filter(function (able) {\n    var name = able.name;\n    if (enabledAbles[name] || !methods.some(function (method) {\n      return able[method];\n    })) {\n      return false;\n    }\n    if (!triggerAblesSimultaneously && able.ableGroup) {\n      if (ableGroups[able.ableGroup]) {\n        return false;\n      }\n      ableGroups[able.ableGroup] = true;\n    }\n    enabledAbles[name] = true;\n    return true;\n  });\n}\nfunction equals(a1, a2) {\n  return a1 === a2 || a1 == null && a2 == null;\n}\nfunction selectValue() {\n  var values = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n  var length = values.length - 1;\n  for (var i = 0; i < length; ++i) {\n    var value = values[i];\n    if (!isUndefined(value)) {\n      return value;\n    }\n  }\n  return values[length];\n}\nfunction groupBy(arr, func) {\n  var groups = [];\n  var groupKeys = [];\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var keyIndex = groupKeys.indexOf(groupKey);\n    var group = groups[keyIndex] || [];\n    if (keyIndex === -1) {\n      groupKeys.push(groupKey);\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction groupByMap(arr, func) {\n  var groups = [];\n  var groupKeys = {};\n  arr.forEach(function (el, index) {\n    var groupKey = func(el, index, arr);\n    var group = groupKeys[groupKey];\n    if (!group) {\n      group = [];\n      groupKeys[groupKey] = group;\n      groups.push(group);\n    }\n    group.push(el);\n  });\n  return groups;\n}\nfunction flat(arr) {\n  return arr.reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n}\nfunction maxOffset() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  args.sort(function (a, b) {\n    return Math.abs(b) - Math.abs(a);\n  });\n  return args[0];\n}\nfunction calculateInversePosition(matrix, pos, n) {\n  return calculate(invert(matrix, n), convertPositionMatrix(pos, n), n);\n}\nfunction convertDragDist(state, e) {\n  var _a;\n  var is3d = state.is3d,\n    rootMatrix = state.rootMatrix;\n  var n = is3d ? 4 : 3;\n  _a = calculateInversePosition(rootMatrix, [e.distX, e.distY], n), e.distX = _a[0], e.distY = _a[1];\n  return e;\n}\nfunction calculatePadding(matrix, pos, transformOrigin, origin, n) {\n  return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\nfunction convertCSSSize(value, size, isRelative) {\n  return isRelative ? \"\".concat(value / size * 100, \"%\") : \"\".concat(value, \"px\");\n}\nfunction getTinyDist(v) {\n  return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\nfunction getDirectionViewClassName(ableName) {\n  return function (moveable) {\n    if (!moveable.isDragging(ableName)) {\n      return \"\";\n    }\n    var data = getGestoData(moveable, ableName);\n    var deg = data.deg;\n    if (!deg) {\n      return \"\";\n    }\n    return prefix(\"view-control-rotation\".concat(deg));\n  };\n}\nfunction getDirectionCondition(ableName, checkAbles) {\n  if (checkAbles === void 0) {\n    checkAbles = [ableName];\n  }\n  return function (moveable, e) {\n    if (e.isRequest) {\n      if (checkAbles.some(function (name) {\n        return e.requestAble === name;\n      })) {\n        return e.parentDirection;\n      } else {\n        return false;\n      }\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n  };\n}\nfunction invertObject(obj) {\n  var nextObj = {};\n  for (var name in obj) {\n    nextObj[obj[name]] = name;\n  }\n  return nextObj;\n}\nfunction convertTransformInfo(transforms, index) {\n  var beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n  var beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n  var targetFunctionText = transforms[index] || \"\";\n  var afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n  var afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n  var beforeFunctions = parse(beforeFunctionTexts);\n  var beforeFunctions2 = parse(beforeFunctionTexts2);\n  var targetFunctions = parse([targetFunctionText]);\n  var afterFunctions = parse(afterFunctionTexts);\n  var afterFunctions2 = parse(afterFunctionTexts2);\n  var beforeFunctionMatrix = toMat(beforeFunctions);\n  var beforeFunctionMatrix2 = toMat(beforeFunctions2);\n  var afterFunctionMatrix = toMat(afterFunctions);\n  var afterFunctionMatrix2 = toMat(afterFunctions2);\n  var allFunctionMatrix = multiply(beforeFunctionMatrix, afterFunctionMatrix, 4);\n  return {\n    transforms: transforms,\n    beforeFunctionMatrix: beforeFunctionMatrix,\n    beforeFunctionMatrix2: beforeFunctionMatrix2,\n    targetFunctionMatrix: toMat(targetFunctions),\n    afterFunctionMatrix: afterFunctionMatrix,\n    afterFunctionMatrix2: afterFunctionMatrix2,\n    allFunctionMatrix: allFunctionMatrix,\n    beforeFunctions: beforeFunctions,\n    beforeFunctions2: beforeFunctions2,\n    targetFunction: targetFunctions[0],\n    afterFunctions: afterFunctions,\n    afterFunctions2: afterFunctions2,\n    beforeFunctionTexts: beforeFunctionTexts,\n    beforeFunctionTexts2: beforeFunctionTexts2,\n    targetFunctionText: targetFunctionText,\n    afterFunctionTexts: afterFunctionTexts,\n    afterFunctionTexts2: afterFunctionTexts2\n  };\n}\nfunction isArrayFormat(arr) {\n  if (!arr || !isObject(arr)) {\n    return false;\n  }\n  if (arr instanceof Element) {\n    return false;\n  }\n  return isArray(arr) || \"length\" in arr;\n}\nfunction getRefTarget(target, isSelector) {\n  if (!target) {\n    return null;\n  }\n  if (target instanceof Element) {\n    return target;\n  }\n  if (isString(target)) {\n    if (isSelector) {\n      return document.querySelector(target);\n    }\n    return target;\n  }\n  if (isFunction(target)) {\n    return target();\n  }\n  if (\"current\" in target) {\n    return target.current;\n  }\n  return target;\n}\nfunction getRefTargets(targets, isSelector) {\n  if (!targets) {\n    return [];\n  }\n  var userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n  return userTargets.reduce(function (prev, target) {\n    if (isString(target) && isSelector) {\n      return __spreadArray(__spreadArray([], prev, true), [].slice.call(document.querySelectorAll(target)), true);\n    }\n    if (isArray(target)) {\n      prev.push(getRefTargets(target, isSelector));\n    } else {\n      prev.push(getRefTarget(target, isSelector));\n    }\n    return prev;\n  }, []);\n}\nfunction getAbsoluteRotation(pos1, pos2, direction) {\n  var deg = getRad(pos1, pos2) / Math.PI * 180;\n  deg = direction >= 0 ? deg : 180 - deg;\n  deg = deg >= 0 ? deg : 360 + deg;\n  return deg;\n}\nfunction getDragDistByState(state, dist) {\n  var rootMatrix = state.rootMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var inverseMatrix = invert(rootMatrix, n);\n  if (!is3d) {\n    inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n  }\n  inverseMatrix[12] = 0;\n  inverseMatrix[13] = 0;\n  inverseMatrix[14] = 0;\n  return calculateMatrixDist(inverseMatrix, dist);\n}\nfunction getSizeDistByDist(startSize, dist, ratio, direction, keepRatio) {\n  var startOffsetWidth = startSize[0],\n    startOffsetHeight = startSize[1];\n  var distWidth = 0;\n  var distHeight = 0;\n  if (keepRatio && startOffsetWidth && startOffsetHeight) {\n    var rad = getRad([0, 0], dist);\n    var standardRad = getRad([0, 0], direction);\n    var size = getDistSize(dist);\n    var signSize = Math.cos(rad - standardRad) * size;\n    if (!direction[0]) {\n      // top, bottom\n      distHeight = signSize;\n      distWidth = distHeight * ratio;\n    } else if (!direction[1]) {\n      // left, right\n      distWidth = signSize;\n      distHeight = distWidth / ratio;\n    } else {\n      // two-way\n      var startWidthSize = direction[0] * 2 * startOffsetWidth;\n      var startHeightSize = direction[1] * 2 * startOffsetHeight;\n      var distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]]) - getDistSize([startWidthSize, startHeightSize]);\n      var ratioRad = getRad([0, 0], [ratio, 1]);\n      distWidth = Math.cos(ratioRad) * distSize;\n      distHeight = Math.sin(ratioRad) * distSize;\n    }\n  } else {\n    distWidth = direction[0] * dist[0];\n    distHeight = direction[1] * dist[1];\n  }\n  return [distWidth, distHeight];\n}\nfunction getOffsetSizeDist(sizeDirection, keepRatio, datas, e) {\n  var _a;\n  var ratio = datas.ratio,\n    startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight;\n  var distWidth = 0;\n  var distHeight = 0;\n  var distX = e.distX,\n    distY = e.distY,\n    parentDistance = e.parentDistance,\n    parentDist = e.parentDist,\n    parentScale = e.parentScale;\n  var startFixedDirection = datas.fixedDirection;\n  var directionsDists = [0, 1].map(function (index) {\n    return Math.abs(sizeDirection[index] - startFixedDirection[index]);\n  });\n  var directionRatios = [0, 1].map(function (index) {\n    var dist = directionsDists[index];\n    if (dist !== 0) {\n      dist = 2 / dist;\n    }\n    return dist;\n  });\n  if (parentDist) {\n    distWidth = parentDist[0];\n    distHeight = parentDist[1];\n    if (keepRatio) {\n      if (!distWidth) {\n        distWidth = distHeight * ratio;\n      } else if (!distHeight) {\n        distHeight = distWidth / ratio;\n      }\n    }\n  } else if (parentScale) {\n    distWidth = (parentScale[0] - 1) * startOffsetWidth;\n    distHeight = (parentScale[1] - 1) * startOffsetHeight;\n  } else if (parentDistance) {\n    var scaleX = startOffsetWidth * directionsDists[0];\n    var scaleY = startOffsetHeight * directionsDists[1];\n    var ratioDistance = getDistSize([scaleX, scaleY]);\n    distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n    distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n  } else {\n    var dist_1 = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    });\n    dist_1 = directionRatios.map(function (ratio, i) {\n      return dist_1[i] * ratio;\n    });\n    _a = getSizeDistByDist([startOffsetWidth, startOffsetHeight], dist_1, ratio, sizeDirection, keepRatio), distWidth = _a[0], distHeight = _a[1];\n  }\n  return {\n    // direction,\n    // sizeDirection,\n    distWidth: distWidth,\n    distHeight: distHeight\n  };\n}\nfunction convertTransformUnit(origin, xy) {\n  if (xy) {\n    if (origin === \"left\") {\n      return {\n        x: \"0%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"top\") {\n      return {\n        x: \"50%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"center\") {\n      return {\n        x: \"50%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"right\") {\n      return {\n        x: \"100%\",\n        y: \"50%\"\n      };\n    } else if (origin === \"bottom\") {\n      return {\n        x: \"50%\",\n        y: \"100%\"\n      };\n    }\n    var _a = origin.split(\" \"),\n      left = _a[0],\n      right = _a[1];\n    var leftOrigin = convertTransformUnit(left || \"\");\n    var rightOrigin = convertTransformUnit(right || \"\");\n    var originObject = __assign(__assign({}, leftOrigin), rightOrigin);\n    var nextOriginObject = {\n      x: \"50%\",\n      y: \"50%\"\n    };\n    if (originObject.x) {\n      nextOriginObject.x = originObject.x;\n    }\n    if (originObject.y) {\n      nextOriginObject.y = originObject.y;\n    }\n    if (originObject.value) {\n      if (originObject.x && !originObject.y) {\n        nextOriginObject.y = originObject.value;\n      }\n      if (!originObject.x && originObject.y) {\n        nextOriginObject.x = originObject.value;\n      }\n    }\n    return nextOriginObject;\n  }\n  if (origin === \"left\") {\n    return {\n      x: \"0%\"\n    };\n  }\n  if (origin === \"right\") {\n    return {\n      x: \"100%\"\n    };\n  }\n  if (origin === \"top\") {\n    return {\n      y: \"0%\"\n    };\n  }\n  if (origin === \"bottom\") {\n    return {\n      y: \"100%\"\n    };\n  }\n  if (!origin) {\n    return {};\n  }\n  if (origin === \"center\") {\n    return {\n      value: \"50%\"\n    };\n  }\n  return {\n    value: origin\n  };\n}\nfunction convertTransformOriginArray(transformOrigin, width, height) {\n  var _a = convertTransformUnit(transformOrigin, true),\n    x = _a.x,\n    y = _a.y;\n  return [convertUnitSize(x, width) || 0, convertUnitSize(y, height) || 0];\n}\nfunction rotatePosesInfo(poses, origin, rad) {\n  var prevPoses = poses.map(function (pos) {\n    return minus(pos, origin);\n  });\n  var nextPoses = prevPoses.map(function (pos) {\n    return rotate(pos, rad);\n  });\n  return {\n    prev: prevPoses,\n    next: nextPoses,\n    result: nextPoses.map(function (pos) {\n      return plus(pos, origin);\n    })\n  };\n}\nfunction isDeepArrayEquals(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every(function (value1, i) {\n    var value2 = arr2[i];\n    var isArray1 = isArray(value1);\n    var isArray2 = isArray(value2);\n    if (isArray1 && isArray2) {\n      return isDeepArrayEquals(value1, value2);\n    } else if (!isArray1 && !isArray2) {\n      return value1 === value2;\n    }\n    return false;\n  });\n}\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\n\nvar Pinchable = makeAble(\"pinchable\", {\n  events: {\n    onPinchStart: \"pinchStart\",\n    onPinch: \"pinch\",\n    onPinchEnd: \"pinchEnd\",\n    onPinchGroupStart: \"pinchGroupStart\",\n    onPinchGroup: \"pinchGroup\",\n    onPinchGroupEnd: \"pinchGroupEnd\"\n  },\n  dragStart: function () {\n    return true;\n  },\n  pinchStart: function (moveable, e) {\n    var datas = e.datas,\n      targets = e.targets,\n      angle = e.angle,\n      originalDatas = e.originalDatas;\n    var _a = moveable.props,\n      pinchable = _a.pinchable,\n      ables = _a.ables;\n    if (!pinchable) {\n      return false;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"Start\");\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlStart\");\n    var pinchAbles = (pinchable === true ? moveable.controlAbles : ables.filter(function (able) {\n      return pinchable.indexOf(able.name) > -1;\n    })).filter(function (able) {\n      return able.canPinch && able[controlEventName];\n    });\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var result = triggerEvent(moveable, eventName, params);\n    datas.isPinch = result !== false;\n    datas.ables = pinchAbles;\n    var isPinch = datas.isPinch;\n    if (!isPinch) {\n      return false;\n    }\n    pinchAbles.forEach(function (able) {\n      originalDatas[able.name] = originalDatas[able.name] || {};\n      if (!able[controlEventName]) {\n        return;\n      }\n      var ableEvent = __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        parentRotate: angle,\n        isPinch: true\n      });\n      able[controlEventName](moveable, ableEvent);\n    });\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: [0, 0]\n    };\n    return isPinch;\n  },\n  pinch: function (moveable, e) {\n    var datas = e.datas,\n      pinchScale = e.scale,\n      distance = e.distance,\n      originalDatas = e.originalDatas,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      angle = e.angle;\n    if (!datas.isPinch) {\n      return;\n    }\n    var parentDistance = distance * (1 - 1 / pinchScale);\n    var params = fillParams(moveable, e, {});\n    if (targets) {\n      params.targets = targets;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\");\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"Control\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        parentDistance: parentDistance,\n        parentRotate: angle,\n        isPinch: true\n      }));\n    });\n    return params;\n  },\n  pinchEnd: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      targets = e.targets,\n      originalDatas = e.originalDatas;\n    if (!datas.isPinch) {\n      return;\n    }\n    var eventName = \"onPinch\".concat(targets ? \"Group\" : \"\", \"End\");\n    var params = fillEndParams(moveable, e, {\n      isDrag: isPinch\n    });\n    if (targets) {\n      params.targets = targets;\n    }\n    triggerEvent(moveable, eventName, params);\n    var ables = datas.ables;\n    var controlEventName = \"drag\".concat(targets ? \"Group\" : \"\", \"ControlEnd\");\n    ables.forEach(function (able) {\n      if (!able[controlEventName]) {\n        return;\n      }\n      able[controlEventName](moveable, __assign(__assign({}, e), {\n        isDrag: isPinch,\n        datas: originalDatas[able.name],\n        inputEvent: inputEvent,\n        isPinch: true\n      }));\n    });\n    return isPinch;\n  },\n  pinchGroupStart: function (moveable, e) {\n    return this.pinchStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroup: function (moveable, e) {\n    return this.pinch(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  pinchGroupEnd: function (moveable, e) {\n    return this.pinchEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  }\n});\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n\nfunction fillChildEvents(moveable, name, e) {\n  var datas = e.originalDatas;\n  datas.groupable = datas.groupable || {};\n  var groupableDatas = datas.groupable;\n  groupableDatas.childDatas = groupableDatas.childDatas || [];\n  var childDatas = groupableDatas.childDatas;\n  return moveable.moveables.map(function (_, i) {\n    childDatas[i] = childDatas[i] || {};\n    childDatas[i][name] = childDatas[i][name] || {};\n    return __assign(__assign({}, e), {\n      datas: childDatas[i][name],\n      originalDatas: childDatas[i]\n    });\n  });\n}\nfunction triggerChildGesto(moveable, able, type, delta, e, isConvert, ableName) {\n  var isStart = !!type.match(/Start$/g);\n  var isEnd = !!type.match(/End$/g);\n  var isPinch = e.isPinch;\n  var datas = e.datas;\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childs = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var state = childMoveable.state;\n    var gestos = state.gestos;\n    var childEvent = ev;\n    if (isStart) {\n      childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n    } else {\n      if (!gestos[ableName]) {\n        gestos[ableName] = datas.childGestos[i];\n      }\n      if (!gestos[ableName]) {\n        return;\n      }\n      childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n    }\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    if (isEnd) {\n      gestos[ableName] = null;\n    }\n    return result;\n  });\n  if (isStart) {\n    datas.childGestos = moveables.map(function (child) {\n      return child.state.gestos[ableName];\n    });\n  }\n  return childs;\n}\nfunction triggerChildAbles(moveable, able, type, e, eachEvent, callback) {\n  if (eachEvent === void 0) {\n    eachEvent = function (_, ev) {\n      return ev;\n    };\n  }\n  var isEnd = !!type.match(/End$/g);\n  var events = fillChildEvents(moveable, able.name, e);\n  var moveables = moveable.moveables;\n  var childs = events.map(function (ev, i) {\n    var childMoveable = moveables[i];\n    var childEvent = ev;\n    childEvent = eachEvent(childMoveable, ev);\n    var result = able[type](childMoveable, __assign(__assign({}, childEvent), {\n      parentFlag: true\n    }));\n    result && callback && callback(childMoveable, ev, result, i);\n    if (isEnd) {\n      childMoveable.state.gestos = {};\n    }\n    return result;\n  });\n  return childs;\n}\nvar VERTICAL_NAMES = [\"left\", \"right\", \"center\"];\nvar HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"];\nvar VERTICAL_NAMES_MAP = {\n  start: \"left\",\n  end: \"right\",\n  center: \"center\"\n};\nvar HORIZONTAL_NAMES_MAP = {\n  start: \"top\",\n  end: \"bottom\",\n  center: \"middle\"\n};\nfunction hasGuidelines(moveable, ableName) {\n  var _a = moveable.props,\n    snappable = _a.snappable,\n    bounds = _a.bounds,\n    innerBounds = _a.innerBounds,\n    verticalGuidelines = _a.verticalGuidelines,\n    horizontalGuidelines = _a.horizontalGuidelines,\n    snapGridWidth = _a.snapGridWidth,\n    snapGridHeight = _a.snapGridHeight,\n    _b = moveable.state,\n    guidelines = _b.guidelines,\n    enableSnap = _b.enableSnap;\n  if (!snappable || !enableSnap || ableName && snappable !== true && snappable.indexOf(ableName) < 0) {\n    return false;\n  }\n  if (snapGridWidth || snapGridHeight || bounds || innerBounds || guidelines && guidelines.length || verticalGuidelines && verticalGuidelines.length || horizontalGuidelines && horizontalGuidelines.length) {\n    return true;\n  }\n  return false;\n}\nfunction getSnapDirections(snapDirections) {\n  if (snapDirections === false) {\n    return {};\n  } else if (snapDirections === true || !snapDirections) {\n    return {\n      left: true,\n      right: true,\n      top: true,\n      bottom: true\n    };\n  }\n  return snapDirections;\n}\nfunction mapSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapDirections = getSnapDirections(snapDirections);\n  var nextSnapPoses = {};\n  for (var name in nextSnapDirections) {\n    if (name in snapPoses && nextSnapDirections[name]) {\n      nextSnapPoses[name] = snapPoses[name];\n    }\n  }\n  return nextSnapPoses;\n}\nfunction splitSnapDirectionPoses(snapDirections, snapPoses) {\n  var nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n  var horizontalNames = HORIZONTAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  var verticalNames = VERTICAL_NAMES.filter(function (name) {\n    return name in nextSnapPoses;\n  });\n  return {\n    horizontal: horizontalNames.map(function (name) {\n      return nextSnapPoses[name];\n    }),\n    vertical: verticalNames.map(function (name) {\n      return nextSnapPoses[name];\n    })\n  };\n}\nfunction calculateContainerPos(rootMatrix, containerRect, n) {\n  var clientPos = calculatePosition(rootMatrix, [containerRect.clientLeft, containerRect.clientTop], n);\n  return [containerRect.left + clientPos[0], containerRect.top + clientPos[1]];\n}\nfunction solveLineConstants(_a) {\n  var point1 = _a[0],\n    point2 = _a[1];\n  var dx = point2[0] - point1[0];\n  var dy = point2[1] - point1[1];\n  if (Math.abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  } // b > 0\n  // ax + by + c = 0\n\n  var a = 0;\n  var b = 0;\n  var c = 0;\n  if (!dx) {\n    // -x + 1 = 0\n    a = -1;\n    c = point1[0];\n  } else if (!dy) {\n    // y - 1 = 0\n    b = 1;\n    c = -point1[1];\n  } else {\n    // y = -a(x - x1) + y1\n    // ax + y + a * x1 - y1 = 0\n    a = -dy / dx;\n    b = 1;\n    c = a * point1[0] - point1[1];\n  }\n  return [a, b, c].map(function (v) {\n    return throttle(v, TINY_NUM$1);\n  });\n}\nfunction checkMoveableSnapPoses(moveable, posesX, posesY, customSnapThreshold) {\n  var props = moveable.props;\n  var snapThreshold = selectValue(customSnapThreshold, props.snapThreshold, 5);\n  return checkSnapPoses(moveable.state.guidelines, posesX, posesY, snapThreshold);\n}\nfunction checkSnapPoses(guidelines, posesX, posesY, snapThreshold) {\n  return {\n    vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n    horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold)\n  };\n}\nfunction checkSnapKeepRatio(moveable, startPos, endPos) {\n  var endX = endPos[0],\n    endY = endPos[1];\n  var startX = startPos[0],\n    startY = startPos[1];\n  var _a = minus(endPos, startPos),\n    dx = _a[0],\n    dy = _a[1];\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  dx = getTinyDist(dx);\n  dy = getTinyDist(dy);\n  var verticalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isSnap: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  }\n  var _b = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []),\n    verticalSnapInfo = _b.vertical,\n    horizontalSnapInfo = _b.horizontal;\n  verticalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isRight ? pos >= startX : pos <= startX;\n  });\n  horizontalSnapInfo.posInfos.filter(function (_a) {\n    var pos = _a.pos;\n    return isBottom ? pos >= startY : pos <= startY;\n  });\n  verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n  horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n  var _c = getNearestSnapGuidelineInfo(verticalSnapInfo),\n    isVerticalSnap = _c.isSnap,\n    verticalGuideline = _c.guideline;\n  var _d = getNearestSnapGuidelineInfo(horizontalSnapInfo),\n    isHorizontalSnap = _d.isSnap,\n    horizontalGuideline = _d.guideline;\n  var horizontalPos = isHorizontalSnap ? horizontalGuideline.pos[1] : 0;\n  var verticalPos = isVerticalSnap ? verticalGuideline.pos[0] : 0;\n  if (dx === 0) {\n    if (isHorizontalSnap) {\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = horizontalGuideline.pos[1];\n      horizontalInfo.offset = endY - horizontalInfo.pos;\n    }\n  } else if (dy === 0) {\n    if (isVerticalSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = verticalPos;\n      verticalInfo.offset = endX - verticalPos;\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isSnap = false;\n    if (isVerticalSnap) {\n      x = verticalPos;\n      y = a * x + b;\n      isSnap = true;\n    } else if (isHorizontalSnap) {\n      y = horizontalPos;\n      x = (y - b) / a;\n      isSnap = true;\n    }\n    if (isSnap) {\n      verticalInfo.isSnap = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isSnap = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction checkSnaps(moveable, rect, customSnapThreshold) {\n  var poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n  return checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal, customSnapThreshold);\n}\nfunction getNearestSnapGuidelineInfo(snapInfo) {\n  var isSnap = snapInfo.isSnap;\n  if (!isSnap) {\n    return {\n      isSnap: false,\n      offset: 0,\n      dist: -1,\n      pos: 0,\n      guideline: null\n    };\n  }\n  var posInfo = snapInfo.posInfos[0];\n  var guidelineInfo = posInfo.guidelineInfos[0];\n  var offset = guidelineInfo.offset;\n  var dist = guidelineInfo.dist;\n  var guideline = guidelineInfo.guideline;\n  return {\n    isSnap: isSnap,\n    offset: offset,\n    dist: dist,\n    pos: posInfo.pos,\n    guideline: guideline\n  };\n}\nfunction checkSnap(guidelines, targetType, targetPoses, snapThreshold) {\n  if (!guidelines || !guidelines.length) {\n    return {\n      isSnap: false,\n      index: -1,\n      posInfos: []\n    };\n  }\n  var isVertical = targetType === \"vertical\";\n  var posType = isVertical ? 0 : 1;\n  var snapPosInfos = targetPoses.map(function (targetPos, index) {\n    var guidelineInfos = guidelines.map(function (guideline) {\n      var pos = guideline.pos;\n      var offset = targetPos - pos[posType];\n      return {\n        offset: offset,\n        dist: Math.abs(offset),\n        guideline: guideline\n      };\n    }).filter(function (_a) {\n      var guideline = _a.guideline,\n        dist = _a.dist;\n      var type = guideline.type;\n      if (type !== targetType || dist > snapThreshold) {\n        return false;\n      }\n      return true;\n    }).sort(function (a, b) {\n      return a.dist - b.dist;\n    });\n    return {\n      pos: targetPos,\n      index: index,\n      guidelineInfos: guidelineInfos\n    };\n  }).filter(function (snapPosInfo) {\n    return snapPosInfo.guidelineInfos.length > 0;\n  }).sort(function (a, b) {\n    return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n  });\n  var isSnap = snapPosInfos.length > 0;\n  return {\n    isSnap: isSnap,\n    index: isSnap ? snapPosInfos[0].index : -1,\n    posInfos: snapPosInfos\n  };\n}\nfunction getSnapInfosByDirection(moveable, poses, snapDirection, snapThreshold) {\n  if (snapThreshold === void 0) {\n    snapThreshold = 1;\n  }\n  var nextPoses = [];\n  if (snapDirection[0] && snapDirection[1]) {\n    nextPoses = [snapDirection, [-snapDirection[0], snapDirection[1]], [snapDirection[0], -snapDirection[1]]].map(function (direction) {\n      return getPosByDirection(poses, direction);\n    });\n  } else if (!snapDirection[0] && !snapDirection[1]) {\n    var alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n    for (var i = 0; i < 4; ++i) {\n      nextPoses.push(alignPoses[i]);\n      nextPoses.push([(alignPoses[i][0] + alignPoses[i + 1][0]) / 2, (alignPoses[i][1] + alignPoses[i + 1][1]) / 2]);\n    }\n  } else {\n    if (moveable.props.keepRatio) {\n      nextPoses = [[-1, -1], [-1, 1], [1, -1], [1, 1], snapDirection].map(function (dir) {\n        return getPosByDirection(poses, dir);\n      });\n    } else {\n      nextPoses = getPosesByDirection(poses, snapDirection);\n      if (nextPoses.length > 1) {\n        nextPoses.push([(nextPoses[0][0] + nextPoses[1][0]) / 2, (nextPoses[0][1] + nextPoses[1][1]) / 2]);\n      }\n    }\n  }\n  return checkMoveableSnapPoses(moveable, nextPoses.map(function (pos) {\n    return pos[0];\n  }), nextPoses.map(function (pos) {\n    return pos[1];\n  }), snapThreshold);\n}\nfunction checkSnapBoundPriority(a, b) {\n  var aDist = Math.abs(a.offset);\n  var bDist = Math.abs(b.offset);\n  if (a.isBound && b.isBound) {\n    return bDist - aDist;\n  } else if (a.isBound) {\n    return -1;\n  } else if (b.isBound) {\n    return 1;\n  } else if (a.isSnap && b.isSnap) {\n    return bDist - aDist;\n  } else if (a.isSnap) {\n    return -1;\n  } else if (b.isSnap) {\n    return 1;\n  } else if (aDist < TINY_NUM) {\n    return 1;\n  } else if (bDist < TINY_NUM) {\n    return -1;\n  }\n  return aDist - bDist;\n}\nfunction getNearOffsetInfo(offsets, index) {\n  return offsets.slice().sort(function (a, b) {\n    var aSign = a.sign[index];\n    var bSign = b.sign[index];\n    var aOffset = a.offset[index];\n    var bOffset = b.offset[index]; // -1 The positions of a and b do not change.\n    // 1 The positions of a and b are reversed.\n\n    if (!aSign) {\n      return 1;\n    } else if (!bSign) {\n      return -1;\n    }\n    return checkSnapBoundPriority({\n      isBound: a.isBound,\n      isSnap: a.isSnap,\n      offset: aOffset\n    }, {\n      isBound: b.isBound,\n      isSnap: b.isSnap,\n      offset: bOffset\n    });\n  })[0];\n}\nfunction getCheckSnapDirections(direction, fixedDirection, keepRatio) {\n  var directions = []; // const fixedDirection = [-direction[0], -direction[1]];\n\n  if (keepRatio) {\n    if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n      directions.push([fixedDirection, [-1, -1]], [fixedDirection, [-1, 1]], [fixedDirection, [1, -1]], [fixedDirection, [1, 1]]);\n    } else {\n      directions.push([fixedDirection, [direction[0], -direction[1]]], [fixedDirection, [-direction[0], direction[1]]]);\n    }\n    directions.push([fixedDirection, direction]);\n  } else {\n    if (direction[0] && direction[1] || !direction[0] && !direction[1]) {\n      var endDirection_1 = direction[0] ? direction : [1, 1];\n      [1, -1].forEach(function (signX) {\n        [1, -1].forEach(function (signY) {\n          var nextDirection = [signX * endDirection_1[0], signY * endDirection_1[1]];\n          if (fixedDirection[0] === nextDirection[0] && fixedDirection[1] === nextDirection[1]) {\n            return;\n          }\n          directions.push([fixedDirection, nextDirection]);\n        });\n      });\n    } else if (direction[0]) {\n      var signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[fixedDirection[0], -1], [sign * direction[0], -1]], [[fixedDirection[0], 0], [sign * direction[0], 0]], [[fixedDirection[0], 1], [sign * direction[0], 1]]);\n      });\n    } else if (direction[1]) {\n      var signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n      signs.forEach(function (sign) {\n        directions.push([[-1, fixedDirection[1]], [-1, sign * direction[1]]], [[0, fixedDirection[1]], [0, sign * direction[1]]], [[1, fixedDirection[1]], [1, sign * direction[1]]]);\n      });\n    }\n  }\n  return directions;\n}\nfunction isStartLine(dot, line) {\n  // l    o     => true\n  // o    l    => false\n  var cx = average([line[0][0], line[1][0]]);\n  var cy = average([line[0][1], line[1][1]]);\n  return {\n    vertical: cx <= dot[0],\n    horizontal: cy <= dot[1]\n  };\n}\nfunction hitTestLine(dot, _a) {\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (Math.abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var test1;\n  var test2;\n  if (!dx) {\n    test1 = pos1[0];\n    test2 = dot[0];\n  } else if (!dy) {\n    test1 = pos1[1];\n    test2 = dot[1];\n  } else {\n    var a = dy / dx; // y = a * (x - pos1) + pos1\n\n    test1 = a * (dot[0] - pos1[0]) + pos1[1];\n    test2 = dot[1];\n  }\n  return test1 - test2;\n}\nfunction isSameStartLine(dots, line, centerSign, error) {\n  if (error === void 0) {\n    error = TINY_NUM;\n  }\n  return dots.every(function (dot) {\n    var value = hitTestLine(dot, line);\n    var sign = value <= 0;\n    return sign === centerSign || Math.abs(value) <= error;\n  });\n}\nfunction checkInnerBoundDot(pos, start, end, isStart, threshold) {\n  if (threshold === void 0) {\n    threshold = 0;\n  }\n  if (isStart && start - threshold <= pos || !isStart && pos <= end + threshold) {\n    // false 402 565 602 => 37 ([0, 37])\n    // true 400 524.9712603540036 600 => 124 ([124, 0])\n    // true 400 410 600 => 10 ([10, 0])\n    return {\n      isBound: true,\n      offset: isStart ? start - pos : end - pos\n    };\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction checkInnerBound(moveable, _a) {\n  var line = _a.line,\n    centerSign = _a.centerSign,\n    verticalSign = _a.verticalSign,\n    horizontalSign = _a.horizontalSign,\n    lineConstants = _a.lineConstants;\n  var bounds = moveable.props.innerBounds;\n  if (!bounds) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  if (isSameStartLine([[left, top], [left + width, top], [left, top + height], [left + width, top + height]], line, centerSign)) {\n    return {\n      isAllBound: false,\n      isBound: false,\n      isVerticalBound: false,\n      isHorizontalBound: false,\n      offset: [0, 0]\n    };\n  } // test vertical\n\n  var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n  var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign); // test horizontal\n\n  var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n  var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n  var isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n  var isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n  var isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n  var isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n  var verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n  var horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n  var offset = [0, 0];\n  var isBound = false;\n  var isAllBound = false;\n  if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n    offset = [verticalOffset, 0];\n    isBound = isVerticalBound;\n    isAllBound = isAllVerticalBound;\n  } else {\n    offset = [0, horizontalOffset];\n    isBound = isHorizontalBound;\n    isAllBound = isAllHorizontalBound;\n  }\n  return {\n    isAllBound: isAllBound,\n    isVerticalBound: isVerticalBound,\n    isHorizontalBound: isHorizontalBound,\n    isBound: isBound,\n    offset: offset\n  };\n}\nfunction checkLineBoundCollision(line, _a, boundLine, isStart, threshold, isRender) {\n  var a = _a[0],\n    b = _a[1];\n  var dot1 = line[0]; // const dot2 = line[1];\n\n  var boundDot1 = boundLine[0];\n  var boundDot2 = boundLine[1]; // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n  // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n  var dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n  var dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n  var hasDx = b;\n  var hasDy = a;\n  var slope = -a / b; // lineConstants\n  // ax + by + c = 0\n  // dx2 or dy2 is zero\n\n  if (!dx2) {\n    // vertical\n    // by + c = 0\n    if (isRender && !hasDy) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDx) {\n      // ax + by + c = 0\n      // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n      var y = slope * (boundDot1[0] - dot1[0]) + dot1[1]; // boundDot1[1] <= y  <= boundDot2[1]\n\n      return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n    } else {\n      // ax + c = 0\n      var offset = boundDot1[0] - dot1[0];\n      var isBound = Math.abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  } else if (!dy2) {\n    // horizontal\n    if (isRender && !hasDx) {\n      // 90deg\n      return {\n        isBound: false,\n        offset: 0\n      };\n    } else if (hasDy) {\n      // y = a * (x - x1) + y1\n      // x = (y - y1) / a + x1\n      // const a = dy1 / dx1;\n      // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n      var x = (boundDot1[1] - dot1[1]) / slope + dot1[0]; // boundDot1[0] <= x && x <= boundDot2[0]\n\n      return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n    } else {\n      var offset = boundDot1[1] - dot1[1];\n      var isBound = Math.abs(offset) <= (threshold || 0);\n      return {\n        isBound: isBound,\n        offset: isBound ? offset : 0\n      };\n    }\n  }\n  return {\n    isBound: false,\n    offset: 0\n  };\n}\nfunction getInnerBoundInfo(moveable, lineInfos, datas) {\n  return lineInfos.map(function (info) {\n    var _a = checkInnerBound(moveable, info),\n      isBound = _a.isBound,\n      offset = _a.offset,\n      isVerticalBound = _a.isVerticalBound,\n      isHorizontalBound = _a.isHorizontalBound;\n    var multiple = info.multiple;\n    var sizeOffset = getDragDist({\n      datas: datas,\n      distX: offset[0],\n      distY: offset[1]\n    }).map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isBound,\n      isVerticalBound: isVerticalBound,\n      isHorizontalBound: isHorizontalBound,\n      isSnap: false,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getInnerBoundDragInfo(moveable, poses, datas) {\n  var _a;\n  var lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(function (info) {\n    return __assign(__assign({}, info), {\n      multiple: info.multiple.map(function (dir) {\n        return Math.abs(dir) * 2;\n      })\n    });\n  });\n  var innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n  var widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n  var heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n  var verticalOffset = 0;\n  var horizontalOffset = 0;\n  var isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n  var isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n  if (isVerticalBound || isHorizontalBound) {\n    _a = getInverseDragDist({\n      datas: datas,\n      distX: -widthOffsetInfo.offset[0],\n      distY: -heightOffsetInfo.offset[1]\n    }), verticalOffset = _a[0], horizontalOffset = _a[1];\n  }\n  return {\n    vertical: {\n      isBound: isVerticalBound,\n      offset: verticalOffset\n    },\n    horizontal: {\n      isBound: isHorizontalBound,\n      offset: horizontalOffset\n    }\n  };\n}\nfunction getCheckSnapLineDirections(direction, keepRatio) {\n  var lineDirections = [];\n  var x = direction[0];\n  var y = direction[1];\n  if (x && y) {\n    lineDirections.push([[0, y * 2], direction, [-x, y]], [[x * 2, 0], direction, [x, -y]]);\n  } else if (x) {\n    // vertcal\n    lineDirections.push([[x * 2, 0], [x, 1], [x, -1]]);\n    if (keepRatio) {\n      lineDirections.push([[0, -1], [x, -1], [-x, -1]], [[0, 1], [x, 1], [-x, 1]]);\n    }\n  } else if (y) {\n    // horizontal\n    lineDirections.push([[0, y * 2], [1, y], [-1, y]]);\n    if (keepRatio) {\n      lineDirections.push([[-1, 0], [-1, y], [-1, -y]], [[1, 0], [1, y], [1, -y]]);\n    }\n  } else {\n    // [0, 0] to all direction\n    lineDirections.push([[-1, 0], [-1, -1], [-1, 1]], [[1, 0], [1, -1], [1, 1]], [[0, -1], [-1, -1], [1, -1]], [[0, 1], [-1, 1], [1, 1]]);\n  }\n  return lineDirections;\n}\nfunction getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio) {\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  var virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n  var center = getPosByDirection(virtualPoses, [0, 0]);\n  return getCheckSnapLineDirections(direction, keepRatio).map(function (_a) {\n    var multiple = _a[0],\n      dir1 = _a[1],\n      dir2 = _a[2];\n    var virtualLine = [getPosByDirection(virtualPoses, dir1), getPosByDirection(virtualPoses, dir2)];\n    var lineConstants = solveLineConstants(virtualLine);\n    var _b = isStartLine(center, virtualLine),\n      verticalSign = _b.vertical,\n      horizontalSign = _b.horizontal;\n    var centerSign = hitTestLine(center, virtualLine) <= 0;\n    return {\n      multiple: multiple,\n      centerSign: centerSign,\n      verticalSign: verticalSign,\n      horizontalSign: horizontalSign,\n      lineConstants: lineConstants,\n      line: [getPosByDirection(poses, dir1), getPosByDirection(poses, dir2)]\n    };\n  });\n}\nfunction isBoundRotate$1(relativePoses, boundDots, center, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].some(function (line) {\n    var centerSign = hitTestLine(center, line) <= 0;\n    return !isSameStartLine(boundDots, line, centerSign);\n  });\n}\nfunction getDistPointLine(_a) {\n  // x = 0, y = 0\n  // d = (ax + by + c) / root(a2 + b2)\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return Math.abs(pos1[0]);\n  }\n  if (!dy) {\n    return Math.abs(pos1[1]);\n  } // y - y1 = a(x - x1)\n  // 0 = ax -y + -a * x1 + y1\n\n  var a = dy / dx;\n  return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine(_a) {\n  var pos1 = _a[0],\n    pos2 = _a[1];\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (!dx) {\n    return [pos1[0], 0];\n  }\n  if (!dy) {\n    return [0, pos1[1]];\n  }\n  var a = dy / dx; // y - y1 = a (x  - x1)\n  // y = ax - a * x1 + y1\n\n  var b = -a * pos1[0] + pos1[1]; // y = ax + b = -1/a x\n  // x = -b / (a + 1 / a)\n  // y = b / (1 + 1 / a^2)\n\n  return [-b / (a + 1 / a), b / (a * a + 1)];\n}\nfunction checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  var bounds = moveable.props.innerBounds;\n  var rad = rotation * Math.PI / 180;\n  if (!bounds) {\n    return [];\n  }\n  var left = bounds.left,\n    top = bounds.top,\n    width = bounds.width,\n    height = bounds.height;\n  var relativeLeft = left - origin[0];\n  var relativeRight = left + width - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = top + height - origin[1];\n  var dots = [[relativeLeft, relativeTop], [relativeRight, relativeTop], [relativeLeft, relativeBottom], [relativeRight, relativeBottom]];\n  var center = getPosByDirection(nextPoses, [0, 0]);\n  if (!isBoundRotate$1(nextPoses, dots, center, 0)) {\n    return [];\n  }\n  var result = [];\n  var dotInfos = dots.map(function (dot) {\n    return [getDistSize(dot), getRad([0, 0], dot)];\n  });\n  [[nextPoses[0], nextPoses[1]], [nextPoses[1], nextPoses[3]], [nextPoses[3], nextPoses[2]], [nextPoses[2], nextPoses[0]]].forEach(function (line) {\n    var lineRad = getRad([0, 0], solveReverseLine(line));\n    var lineDist = getDistPointLine(line);\n    result.push.apply(result, dotInfos.filter(function (_a) {\n      var dotDist = _a[0];\n      return dotDist && lineDist <= dotDist;\n    }).map(function (_a) {\n      var dotDist = _a[0],\n        dotRad = _a[1];\n      var distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n      var nextRad1 = dotRad + distRad;\n      var nextRad2 = dotRad - distRad;\n      return [rad + nextRad1 - lineRad, rad + nextRad2 - lineRad];\n    }).reduce(function (prev, cur) {\n      prev.push.apply(prev, cur);\n      return prev;\n    }, []).filter(function (nextRad) {\n      return !isBoundRotate$1(prevPoses, dots, center, nextRad);\n    }).map(function (nextRad) {\n      return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n    }));\n  });\n  return result;\n}\nfunction checkInnerBoundPoses(moveable) {\n  var innerBounds = moveable.props.innerBounds;\n  if (!innerBounds) {\n    return {\n      vertical: [],\n      horizontal: []\n    };\n  }\n  var _a = moveable.getRect(),\n    pos1 = _a.pos1,\n    pos2 = _a.pos2,\n    pos3 = _a.pos3,\n    pos4 = _a.pos4;\n  var poses = [pos1, pos2, pos3, pos4];\n  var center = getPosByDirection(poses, [0, 0]);\n  var left = innerBounds.left,\n    top = innerBounds.top,\n    width = innerBounds.width,\n    height = innerBounds.height;\n  var leftLine = [[left, top], [left, top + height]];\n  var topLine = [[left, top], [left + width, top]];\n  var rightLine = [[left + width, top], [left + width, top + height]];\n  var bottomLine = [[left, top + height], [left + width, top + height]];\n  var lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n  var horizontalPoses = [];\n  var verticalPoses = [];\n  var boundMap = {\n    top: false,\n    bottom: false,\n    left: false,\n    right: false\n  };\n  lineInfos.forEach(function (lineInfo) {\n    var line = lineInfo.line,\n      lineConstants = lineInfo.lineConstants;\n    var _a = isStartLine(center, line),\n      isHorizontalStart = _a.horizontal,\n      isVerticalStart = _a.vertical; // test vertical\n\n    var topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n    var bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true); // test horizontal\n\n    var leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n    var rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n    if (topBoundInfo.isBound && !boundMap.top) {\n      horizontalPoses.push(top);\n      boundMap.top = true;\n    }\n    if (bottomBoundInfo.isBound && !boundMap.bottom) {\n      horizontalPoses.push(top + height);\n      boundMap.bottom = true;\n    }\n    if (leftBoundInfo.isBound && !boundMap.left) {\n      verticalPoses.push(left);\n      boundMap.left = true;\n    }\n    if (rightBoundInfo.isBound && !boundMap.right) {\n      verticalPoses.push(left + width);\n      boundMap.right = true;\n    }\n  });\n  return {\n    horizontal: horizontalPoses,\n    vertical: verticalPoses\n  };\n}\nfunction checkBoundPoses(bounds, verticalPoses, horizontalPoses) {\n  var _a = bounds || {},\n    _b = _a.position,\n    position = _b === void 0 ? \"client\" : _b,\n    _c = _a.left,\n    left = _c === void 0 ? -Infinity : _c,\n    _d = _a.top,\n    top = _d === void 0 ? -Infinity : _d,\n    _e = _a.right,\n    right = _e === void 0 ? Infinity : _e,\n    _f = _a.bottom,\n    bottom = _f === void 0 ? Infinity : _f;\n  var nextBounds = {\n    position: position,\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n  return {\n    vertical: checkBounds(nextBounds, verticalPoses, true),\n    horizontal: checkBounds(nextBounds, horizontalPoses, false)\n  };\n}\nfunction getBounds(moveable, externalBounds) {\n  var _a = moveable.state,\n    _b = _a.containerClientRect,\n    containerHeight = _b.clientHeight,\n    containerWidth = _b.clientWidth,\n    clientLeft = _b.clientLeft,\n    clientTop = _b.clientTop,\n    _c = _a.snapOffset,\n    snapOffsetLeft = _c.left,\n    snapOffsetTop = _c.top,\n    snapOffsetRight = _c.right,\n    snapOffsetBottom = _c.bottom;\n  var bounds = externalBounds || moveable.props.bounds || {};\n  var position = bounds.position || \"client\";\n  var isCSS = position === \"css\";\n  var _d = bounds.left,\n    left = _d === void 0 ? -Infinity : _d,\n    _e = bounds.top,\n    top = _e === void 0 ? -Infinity : _e;\n  var _f = bounds.right,\n    right = _f === void 0 ? isCSS ? -Infinity : Infinity : _f,\n    _g = bounds.bottom,\n    bottom = _g === void 0 ? isCSS ? -Infinity : Infinity : _g;\n  if (isCSS) {\n    right = containerWidth + snapOffsetRight - snapOffsetLeft - right;\n    bottom = containerHeight + snapOffsetBottom - snapOffsetTop - bottom;\n  }\n  return {\n    left: left + snapOffsetLeft - clientLeft,\n    right: right + snapOffsetLeft - clientLeft,\n    top: top + snapOffsetTop - clientTop,\n    bottom: bottom + snapOffsetTop - clientTop\n  };\n}\nfunction checkBoundKeepRatio(moveable, startPos, endPos) {\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var endX = endPos[0],\n    endY = endPos[1];\n  var _b = minus(endPos, startPos),\n    dx = _b[0],\n    dy = _b[1];\n  if (Math.abs(dx) < TINY_NUM) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM) {\n    dy = 0;\n  }\n  var isBottom = dy > 0;\n  var isRight = dx > 0;\n  var verticalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  var horizontalInfo = {\n    isBound: false,\n    offset: 0,\n    pos: 0\n  };\n  if (dx === 0 && dy === 0) {\n    return {\n      vertical: verticalInfo,\n      horizontal: horizontalInfo\n    };\n  } else if (dx === 0) {\n    if (isBottom) {\n      if (bottom < endY) {\n        horizontalInfo.pos = bottom;\n        horizontalInfo.offset = endY - bottom;\n      }\n    } else {\n      if (top > endY) {\n        horizontalInfo.pos = top;\n        horizontalInfo.offset = endY - top;\n      }\n    }\n  } else if (dy === 0) {\n    if (isRight) {\n      if (right < endX) {\n        verticalInfo.pos = right;\n        verticalInfo.offset = endX - right;\n      }\n    } else {\n      if (left > endX) {\n        verticalInfo.pos = left;\n        verticalInfo.offset = endX - left;\n      }\n    }\n  } else {\n    // y - y1 = a * (x - x1)\n    var a = dy / dx;\n    var b = endPos[1] - a * endX;\n    var y = 0;\n    var x = 0;\n    var isBound = false;\n    if (isRight && right <= endX) {\n      y = a * right + b;\n      x = right;\n      isBound = true;\n    } else if (!isRight && endX <= left) {\n      y = a * left + b;\n      x = left;\n      isBound = true;\n    }\n    if (isBound) {\n      if (y < top || y > bottom) {\n        isBound = false;\n      }\n    }\n    if (!isBound) {\n      if (isBottom && bottom <= endY) {\n        y = bottom;\n        x = (y - b) / a;\n        isBound = true;\n      } else if (!isBottom && endY <= top) {\n        y = top;\n        x = (y - b) / a;\n        isBound = true;\n      }\n    }\n    if (isBound) {\n      verticalInfo.isBound = true;\n      verticalInfo.pos = x;\n      verticalInfo.offset = endX - x;\n      horizontalInfo.isBound = true;\n      horizontalInfo.pos = y;\n      horizontalInfo.offset = endY - y;\n    }\n  }\n  return {\n    vertical: verticalInfo,\n    horizontal: horizontalInfo\n  };\n}\nfunction checkBounds(bounds, poses, isVertical) {\n  // 0   [100 - 200]  300\n  var startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n  var endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"]; // 450\n\n  var minPos = Math.min.apply(Math, poses);\n  var maxPos = Math.max.apply(Math, poses);\n  var boundInfos = [];\n  if (startBoundPos + 1 > minPos) {\n    boundInfos.push({\n      isBound: true,\n      offset: minPos - startBoundPos,\n      pos: startBoundPos\n    });\n  }\n  if (endBoundPos - 1 < maxPos) {\n    boundInfos.push({\n      isBound: true,\n      offset: maxPos - endBoundPos,\n      pos: endBoundPos\n    });\n  }\n  if (!boundInfos.length) {\n    boundInfos.push({\n      isBound: false,\n      offset: 0,\n      pos: 0\n    });\n  }\n  return boundInfos.sort(function (a, b) {\n    return Math.abs(b.offset) - Math.abs(a.offset);\n  });\n}\nfunction isBoundRotate(relativePoses, boundRect, rad) {\n  var nextPoses = rad ? relativePoses.map(function (pos) {\n    return rotate(pos, rad);\n  }) : relativePoses;\n  return nextPoses.some(function (pos) {\n    return pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1 || pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1 || pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1 || pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1;\n  });\n}\nfunction boundRotate(vec, boundPos, index) {\n  var r = getDistSize(vec);\n  var nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n  return [nextPos, -nextPos].sort(function (a, b) {\n    return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n  }).map(function (pos) {\n    return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n  });\n}\nfunction checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation) {\n  if (!moveable.props.bounds) {\n    return [];\n  }\n  var rad = rotation * Math.PI / 180;\n  var _a = getBounds(moveable),\n    left = _a.left,\n    top = _a.top,\n    right = _a.right,\n    bottom = _a.bottom;\n  var relativeLeft = left - origin[0];\n  var relativeRight = right - origin[0];\n  var relativeTop = top - origin[1];\n  var relativeBottom = bottom - origin[1];\n  var boundRect = {\n    left: relativeLeft,\n    top: relativeTop,\n    right: relativeRight,\n    bottom: relativeBottom\n  };\n  if (!isBoundRotate(nextPoses, boundRect, 0)) {\n    return [];\n  }\n  var result = [];\n  [[relativeLeft, 0], [relativeRight, 0], [relativeTop, 1], [relativeBottom, 1]].forEach(function (_a) {\n    var boundPos = _a[0],\n      index = _a[1];\n    nextPoses.forEach(function (nextPos) {\n      var relativeRad1 = getRad([0, 0], nextPos);\n      result.push.apply(result, boundRotate(nextPos, boundPos, index).map(function (relativeRad2) {\n        return rad + relativeRad2 - relativeRad1;\n      }).filter(function (nextRad) {\n        return !isBoundRotate(prevPoses, boundRect, nextRad);\n      }).map(function (nextRad) {\n        return throttle(nextRad * 180 / Math.PI, TINY_NUM);\n      }));\n    });\n  });\n  return result;\n}\nfunction renderGuideline(info, React) {\n  var _a;\n  var direction = info.direction,\n    classNames = info.classNames,\n    size = info.size,\n    pos = info.pos,\n    zoom = info.zoom,\n    key = info.key;\n  var isHorizontal = direction === \"horizontal\";\n  var scaleType = isHorizontal ? \"Y\" : \"X\"; // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n  return React.createElement(\"div\", {\n    key: key,\n    className: classNames.join(\" \"),\n    style: (_a = {}, _a[isHorizontal ? \"width\" : \"height\"] = \"\".concat(size), _a.transform = \"translate(\".concat(pos[0], \", \").concat(pos[1], \") translate\").concat(scaleType, \"(-50%) scale\").concat(scaleType, \"(\").concat(zoom, \")\"), _a)\n  });\n}\nfunction renderInnerGuideline(info, React) {\n  return renderGuideline(__assign(__assign({}, info), {\n    classNames: __spreadArray([prefix(\"line\", \"guideline\", info.direction)], info.classNames, true).filter(function (className) {\n      return className;\n    }),\n    size: info.size || \"\".concat(info.sizeValue, \"px\"),\n    pos: info.pos || info.posValue.map(function (v) {\n      return \"\".concat(throttle(v, 0.1), \"px\");\n    })\n  }), React);\n}\nfunction renderSnapPoses(moveable, direction, snapPoses, minPos, targetPos, size, index, React) {\n  var zoom = moveable.props.zoom;\n  return snapPoses.map(function (_a, i) {\n    var type = _a.type,\n      pos = _a.pos;\n    var renderPos = [0, 0];\n    renderPos[index] = minPos;\n    renderPos[index ? 0 : 1] = -targetPos + pos;\n    return renderInnerGuideline({\n      key: \"\".concat(direction, \"TargetGuideline\").concat(i),\n      classNames: [prefix(\"target\", \"bold\", type)],\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom,\n      direction: direction\n    }, React);\n  });\n}\nfunction renderGuidelines(moveable, type, guidelines, targetPos, targetRect, React) {\n  var _a = moveable.props,\n    zoom = _a.zoom,\n    isDisplayInnerSnapDigit = _a.isDisplayInnerSnapDigit;\n  var mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[mainNames.start];\n  var targetEnd = targetRect[mainNames.end];\n  return guidelines.filter(function (_a) {\n    var hide = _a.hide,\n      elementRect = _a.elementRect;\n    if (hide) {\n      return false;\n    }\n    if (isDisplayInnerSnapDigit && elementRect) {\n      // inner\n      var rect = elementRect.rect;\n      if (rect[mainNames.start] <= targetStart && targetEnd <= rect[mainNames.end]) {\n        return false;\n      }\n    }\n    return true;\n  }).map(function (guideline, i) {\n    var pos = guideline.pos,\n      size = guideline.size,\n      element = guideline.element,\n      className = guideline.className;\n    var renderPos = [-targetPos[0] + pos[0], -targetPos[1] + pos[1]];\n    return renderInnerGuideline({\n      key: \"\".concat(type, \"-default-guideline-\").concat(i),\n      classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n      direction: type,\n      posValue: renderPos,\n      sizeValue: size,\n      zoom: zoom\n    }, React);\n  });\n}\nfunction renderDigitLine(moveable, type, lineType, index, gap, renderPos, className, React) {\n  var _a;\n  var _b = moveable.props,\n    _c = _b.snapDigit,\n    snapDigit = _c === void 0 ? 0 : _c,\n    _d = _b.isDisplaySnapDigit,\n    isDisplaySnapDigit = _d === void 0 ? true : _d,\n    _e = _b.snapDistFormat,\n    snapDistFormat = _e === void 0 ? function (v, type) {\n      // Type can be used render different values.\n      if (type === 'vertical') {\n        return v;\n      }\n      return v;\n    } : _e,\n    zoom = _b.zoom;\n  var scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n  var sizeName = type === \"vertical\" ? \"height\" : \"width\";\n  var absGap = Math.abs(gap);\n  var snapSize = isDisplaySnapDigit ? parseFloat(absGap.toFixed(snapDigit)) : 0;\n  return React.createElement(\"div\", {\n    key: \"\".concat(type, \"-\").concat(lineType, \"-guideline-\").concat(index),\n    className: prefix(\"guideline-group\", type),\n    style: (_a = {\n      left: \"\".concat(renderPos[0], \"px\"),\n      top: \"\".concat(renderPos[1], \"px\")\n    }, _a[sizeName] = \"\".concat(absGap, \"px\"), _a)\n  }, renderInnerGuideline({\n    direction: type,\n    classNames: [prefix(lineType), className],\n    size: \"100%\",\n    posValue: [0, 0],\n    sizeValue: absGap,\n    zoom: zoom\n  }, React), React.createElement(\"div\", {\n    className: prefix(\"size-value\", \"gap\"),\n    style: {\n      transform: \"translate\".concat(scaleType, \"(-50%) scale(\").concat(zoom, \")\")\n    }\n  }, snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"));\n}\nfunction groupByElementGuidelines(type, guidelines, targetRect, isDisplayInnerSnapDigit) {\n  var index = type === \"vertical\" ? 0 : 1;\n  var otherIndex = type === \"vertical\" ? 1 : 0;\n  var names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n  var targetStart = targetRect[names.start];\n  var targetEnd = targetRect[names.end];\n  return groupBy(guidelines, function (guideline) {\n    return guideline.pos[index];\n  }).map(function (nextGuidelines) {\n    var start = [];\n    var end = [];\n    var inner = [];\n    nextGuidelines.forEach(function (guideline) {\n      var _a, _b;\n      var element = guideline.element;\n      var rect = guideline.elementRect.rect;\n      if (rect[names.end] < targetStart) {\n        start.push(guideline);\n      } else if (targetEnd < rect[names.start]) {\n        end.push(guideline);\n      } else if (rect[names.start] <= targetStart && targetEnd <= rect[names.end] && isDisplayInnerSnapDigit) {\n        var pos = guideline.pos;\n        var elementRect1 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_a = {}, _a[names.end] = rect[names.start], _a))\n        };\n        var elementRect2 = {\n          element: element,\n          rect: __assign(__assign({}, rect), (_b = {}, _b[names.start] = rect[names.end], _b))\n        };\n        var nextPos1 = [0, 0];\n        var nextPos2 = [0, 0];\n        nextPos1[index] = pos[index];\n        nextPos1[otherIndex] = pos[otherIndex];\n        nextPos2[index] = pos[index];\n        nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n        start.push({\n          type: type,\n          pos: nextPos1,\n          size: 0,\n          elementRect: elementRect1\n        });\n        end.push({\n          type: type,\n          pos: nextPos2,\n          size: 0,\n          elementRect: elementRect2\n        }); // inner.push(guideline);\n      }\n    });\n\n    start.sort(function (a, b) {\n      return b.pos[otherIndex] - a.pos[otherIndex];\n    });\n    end.sort(function (a, b) {\n      return a.pos[otherIndex] - b.pos[otherIndex];\n    });\n    return {\n      total: nextGuidelines,\n      start: start,\n      end: end,\n      inner: inner\n    };\n  });\n}\nfunction renderDashedGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var isDisplayInnerSnapDigit = moveable.props.isDisplayInnerSnapDigit;\n  var rendered = [];\n  [\"vertical\", \"horizontal\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    });\n    var index = type === \"vertical\" ? 1 : 0;\n    var otherIndex = index ? 0 : 1;\n    var groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit);\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    groups.forEach(function (_a) {\n      var total = _a.total,\n        start = _a.start,\n        end = _a.end,\n        inner = _a.inner;\n      var sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start];\n      var prevRect = targetRect;\n      start.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = prevRect[mainNames.start] - nextRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.start] - targetStart - size;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      prevRect = targetRect;\n      end.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size = nextRect[mainNames.start] - prevRect[mainNames.end];\n        if (size > 0) {\n          var renderPos = [0, 0];\n          renderPos[index] = targetPos[index] + prevRect[mainNames.end] - targetStart;\n          renderPos[otherIndex] = sidePos;\n          rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size, renderPos, guideline.className, React));\n        }\n        prevRect = nextRect;\n      });\n      inner.forEach(function (guideline) {\n        var nextRect = guideline.elementRect.rect;\n        var size1 = targetStart - nextRect[mainNames.start];\n        var size2 = nextRect[mainNames.end] - targetEnd;\n        var renderPos1 = [0, 0];\n        var renderPos2 = [0, 0];\n        renderPos1[index] = targetPos[index] - size1;\n        renderPos1[otherIndex] = sidePos;\n        renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n        renderPos2[otherIndex] = sidePos;\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size1, renderPos1, guideline.className, React));\n        rendered.push(renderDigitLine(moveable, type, \"dashed\", rendered.length, size2, renderPos2, guideline.className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction renderGapGuidelines(moveable, guidelines, targetPos, targetRect, React) {\n  var rendered = [];\n  [\"horizontal\", \"vertical\"].forEach(function (type) {\n    var nextGuidelines = guidelines.filter(function (guideline) {\n      return guideline.type === type;\n    }).slice(0, 1);\n    var index = type === \"vertical\" ? 0 : 1;\n    var otherIndex = index ? 0 : 1;\n    var mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n    var sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetSideStart = targetRect[sideNames.start];\n    var targetSideEnd = targetRect[sideNames.end];\n    nextGuidelines.forEach(function (_a) {\n      var gap = _a.gap,\n        gapRects = _a.gapRects;\n      var sideStartPos = Math.max.apply(Math, __spreadArray([targetSideStart], gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.start];\n      }), false));\n      var sideEndPos = Math.min.apply(Math, __spreadArray([targetSideEnd], gapRects.map(function (_a) {\n        var rect = _a.rect;\n        return rect[sideNames.end];\n      }), false));\n      var sideCenterPos = (sideStartPos + sideEndPos) / 2;\n      if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd) / 2) {\n        return;\n      }\n      gapRects.forEach(function (_a) {\n        var rect = _a.rect,\n          className = _a.className;\n        var renderPos = [targetPos[0], targetPos[1]];\n        if (rect[mainNames.end] < targetStart) {\n          renderPos[index] += rect[mainNames.end] - targetStart;\n        } else if (targetEnd < rect[mainNames.start]) {\n          renderPos[index] += rect[mainNames.start] - targetStart - gap;\n        } else {\n          return;\n        }\n        renderPos[otherIndex] += sideCenterPos - targetSideStart;\n        rendered.push(renderDigitLine(moveable, index ? \"vertical\" : \"horizontal\", \"gap\", rendered.length, gap, renderPos, className, React));\n      });\n    });\n  });\n  return rendered;\n}\nfunction solveEquation(pos1, pos2, snapOffset, isVertical) {\n  var dx = pos2[0] - pos1[0];\n  var dy = pos2[1] - pos1[1];\n  if (Math.abs(dx) < TINY_NUM$1) {\n    dx = 0;\n  }\n  if (Math.abs(dy) < TINY_NUM$1) {\n    dy = 0;\n  }\n  if (!dx) {\n    // y = 0 * x + b\n    // only horizontal\n    if (!isVertical) {\n      return [0, snapOffset];\n    }\n    return [0, 0];\n  }\n  if (!dy) {\n    // only vertical\n    if (isVertical) {\n      return [snapOffset, 0];\n    }\n    return [0, 0];\n  } // y = ax + b\n\n  var a = dy / dx;\n  var b = pos1[1] - a * pos1[0];\n  if (isVertical) {\n    // y = a * x + b\n    var y = a * (pos2[0] + snapOffset) + b;\n    return [snapOffset, y - pos2[1]];\n  } else {\n    // x = (y - b) / a\n    var x = (pos2[1] + snapOffset - b) / a;\n    return [x - pos2[0], snapOffset];\n  }\n}\nfunction solveNextOffset(pos1, pos2, offset, isVertical, datas) {\n  var sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n  if (!sizeOffset) {\n    return {\n      isOutside: false,\n      offset: [0, 0]\n    };\n  }\n  var size = getDist$1(pos1, pos2);\n  var dist1 = getDist$1(sizeOffset, pos1);\n  var dist2 = getDist$1(sizeOffset, pos2);\n  var isOutside = dist1 > size || dist2 > size;\n  var _a = getDragDist({\n      datas: datas,\n      distX: sizeOffset[0],\n      distY: sizeOffset[1]\n    }),\n    widthOffset = _a[0],\n    heightOffset = _a[1];\n  return {\n    offset: [widthOffset, heightOffset],\n    isOutside: isOutside\n  };\n}\nfunction getSnapBound(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return getNearestSnapGuidelineInfo(snapInfo).offset;\n  }\n  return 0;\n}\nfunction checkThrottleDragRotate(throttleDragRotate, _a, _b, _c, _d) {\n  var distX = _a[0],\n    distY = _a[1];\n  var isVerticalBound = _b[0],\n    isHorizontalBound = _b[1];\n  var isVerticalSnap = _c[0],\n    isHorizontalSnap = _c[1];\n  var verticalOffset = _d[0],\n    horizontalOffset = _d[1];\n  var offsetX = -verticalOffset;\n  var offsetY = -horizontalOffset;\n  if (throttleDragRotate && distX && distY) {\n    offsetX = 0;\n    offsetY = 0;\n    var adjustPoses = [];\n    if (isVerticalBound && isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalBound) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalBound) {\n      adjustPoses.push([0, horizontalOffset]);\n    } else if (isVerticalSnap && isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n    } else if (isVerticalSnap) {\n      adjustPoses.push([verticalOffset, 0]);\n    } else if (isHorizontalSnap) {\n      adjustPoses.push([0, horizontalOffset]);\n    }\n    if (adjustPoses.length) {\n      adjustPoses.sort(function (a, b) {\n        return getDistSize(minus([distX, distY], a)) - getDistSize(minus([distX, distY], b));\n      });\n      var adjustPos = adjustPoses[0];\n      if (adjustPos[0] && Math.abs(distX) > TINY_NUM$1) {\n        offsetX = -adjustPos[0];\n        offsetY = distY * Math.abs(distX + offsetX) / Math.abs(distX) - distY;\n      } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM$1) {\n        var prevDistY = distY;\n        offsetY = -adjustPos[1];\n        offsetX = distX * Math.abs(distY + offsetY) / Math.abs(prevDistY) - distX;\n      }\n      if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n        if (Math.abs(offsetX) > TINY_NUM$1 && Math.abs(offsetX) < Math.abs(verticalOffset)) {\n          var scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else if (Math.abs(offsetY) > TINY_NUM$1 && Math.abs(offsetY) < Math.abs(horizontalOffset)) {\n          var scale = Math.abs(horizontalOffset) / Math.abs(offsetY);\n          offsetX *= scale;\n          offsetY *= scale;\n        } else {\n          offsetX = maxOffset(-verticalOffset, offsetX);\n          offsetY = maxOffset(-horizontalOffset, offsetY);\n        }\n      }\n    }\n  } else {\n    offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n    offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n  }\n  return [offsetX, offsetY];\n}\nfunction checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"draggable\")) {\n    return [{\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }, {\n      isSnap: false,\n      isBound: false,\n      offset: 0\n    }];\n  }\n  var poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n  var _a = getRect(poses),\n    left = _a.left,\n    right = _a.right,\n    top = _a.top,\n    bottom = _a.bottom;\n  var boundPoses = {\n    horizontal: poses.map(function (pos) {\n      return pos[1];\n    }),\n    vertical: poses.map(function (pos) {\n      return pos[0];\n    })\n  };\n  var snapDirections = getSnapDirections(moveable.props.snapDirections);\n  var snapPoses = splitSnapDirectionPoses(snapDirections, {\n    left: left,\n    right: right,\n    top: top,\n    bottom: bottom,\n    center: (left + right) / 2,\n    middle: (top + bottom) / 2\n  });\n  var _b = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses),\n    verticalSnapBoundInfo = _b.vertical,\n    horizontalSnapBoundInfo = _b.horizontal;\n  var _c = getInnerBoundDragInfo(moveable, poses, datas),\n    verticalInnerBoundInfo = _c.vertical,\n    horizontalInnerBoundInfo = _c.horizontal;\n  var isVerticalSnap = verticalSnapBoundInfo.isSnap;\n  var isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n  var isVerticalBound = verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n  var isHorizontalBound = horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n  var verticalOffset = maxOffset(verticalSnapBoundInfo.offset, verticalInnerBoundInfo.offset);\n  var horizontalOffset = maxOffset(horizontalSnapBoundInfo.offset, horizontalInnerBoundInfo.offset);\n  var _d = checkThrottleDragRotate(throttleDragRotate, [distX, distY], [isVerticalBound, isHorizontalBound], [isVerticalSnap, isHorizontalSnap], [verticalOffset, horizontalOffset]),\n    offsetX = _d[0],\n    offsetY = _d[1];\n  return [{\n    isBound: isVerticalBound,\n    isSnap: isVerticalSnap,\n    offset: offsetX\n  }, {\n    isBound: isHorizontalBound,\n    isSnap: isHorizontalSnap,\n    offset: offsetY\n  }];\n}\nfunction checkMoveableSnapBounds(moveable, isRequest, poses, boundPoses) {\n  if (boundPoses === void 0) {\n    boundPoses = poses;\n  }\n  var _a = checkBoundPoses(getBounds(moveable), boundPoses.vertical, boundPoses.horizontal),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical;\n  var _b = isRequest ? {\n      horizontal: {\n        isSnap: false,\n        index: -1\n      },\n      vertical: {\n        isSnap: false,\n        index: -1\n      }\n    } : checkMoveableSnapPoses(moveable, poses.vertical, poses.horizontal),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapBounds(guideines, bounds, posesX, posesY, snapThreshold) {\n  var _a = checkBoundPoses(bounds, posesX, posesY),\n    horizontalBoundInfos = _a.horizontal,\n    verticalBoundInfos = _a.vertical; // options.isRequest ? {\n  //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n  //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n  // } :\n\n  var _b = checkSnapPoses(guideines, posesX, posesY, snapThreshold),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n  var verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfos[0].isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      snapIndex: horizontalSnapInfo.index,\n      offset: horizontalOffset,\n      dist: horizontalDist,\n      bounds: horizontalBoundInfos,\n      snap: horizontalSnapInfo\n    },\n    vertical: {\n      isBound: verticalBoundInfos[0].isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      snapIndex: verticalSnapInfo.index,\n      offset: verticalOffset,\n      dist: verticalDist,\n      bounds: verticalBoundInfos,\n      snap: verticalSnapInfo\n    }\n  };\n}\nfunction checkSnapRightLine(startPos, endPos, snapBoundInfo, keepRatio) {\n  var rad = getRad(startPos, endPos) / Math.PI * 180;\n  var _a = snapBoundInfo.vertical,\n    isVerticalBound = _a.isBound,\n    isVerticalSnap = _a.isSnap,\n    verticalDist = _a.dist,\n    _b = snapBoundInfo.horizontal,\n    isHorizontalBound = _b.isBound,\n    isHorizontalSnap = _b.isSnap,\n    horizontalDist = _b.dist;\n  var rad180 = rad % 180;\n  var isHorizontalLine = rad180 < 3 || rad180 > 177;\n  var isVerticalLine = rad180 > 87 && rad180 < 93;\n  if (horizontalDist < verticalDist) {\n    if (isVerticalBound || isVerticalSnap && !isVerticalLine && (!keepRatio || !isHorizontalLine)) {\n      return \"vertical\";\n    }\n  }\n  if (isHorizontalBound || isHorizontalSnap && !isHorizontalLine && (!keepRatio || !isVerticalLine)) {\n    return \"horizontal\";\n  }\n  return \"\";\n}\nfunction getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas) {\n  return directions.map(function (_a) {\n    var startDirection = _a[0],\n      endDirection = _a[1];\n    var otherStartPos = getPosByDirection(poses, startDirection);\n    var otherEndPos = getPosByDirection(poses, endDirection);\n    var snapBoundInfo = keepRatio ? checkSnapBoundsKeepRatio(moveable, otherStartPos, otherEndPos, isRequest) : checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [otherEndPos[0]],\n      horizontal: [otherEndPos[1]]\n    });\n    var _b = snapBoundInfo.horizontal,\n      // dist: otherHorizontalDist,\n      otherHorizontalOffset = _b.offset,\n      isOtherHorizontalBound = _b.isBound,\n      isOtherHorizontalSnap = _b.isSnap,\n      _c = snapBoundInfo.vertical,\n      // dist: otherVerticalDist,\n      otherVerticalOffset = _c.offset,\n      isOtherVerticalBound = _c.isBound,\n      isOtherVerticalSnap = _c.isSnap;\n    var multiple = minus(endDirection, startDirection);\n    if (!otherVerticalOffset && !otherHorizontalOffset) {\n      return {\n        isBound: isOtherVerticalBound || isOtherHorizontalBound,\n        isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n        sign: multiple,\n        offset: [0, 0]\n      };\n    }\n    var snapLine = checkSnapRightLine(otherStartPos, otherEndPos, snapBoundInfo, keepRatio);\n    if (!snapLine) {\n      return {\n        sign: multiple,\n        isBound: false,\n        isSnap: false,\n        offset: [0, 0]\n      };\n    }\n    var isVertical = snapLine === \"vertical\";\n    var sizeOffset = [0, 0];\n    if (!keepRatio && Math.abs(endDirection[0]) === 1 && Math.abs(endDirection[1]) === 1 && startDirection[0] !== endDirection[0] && startDirection[1] !== endDirection[1]) {\n      sizeOffset = getDragDist({\n        datas: datas,\n        distX: -otherVerticalOffset,\n        distY: -otherHorizontalOffset\n      });\n    } else {\n      sizeOffset = solveNextOffset(otherStartPos, otherEndPos, -(isVertical ? otherVerticalOffset : otherHorizontalOffset), isVertical, datas).offset;\n    }\n    sizeOffset = sizeOffset.map(function (size, i) {\n      return size * (multiple[i] ? 2 / multiple[i] : 0);\n    });\n    return {\n      sign: multiple,\n      isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n      isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n      offset: sizeOffset\n    };\n  });\n}\nfunction getSnapBoundOffset(boundInfo, snapInfo) {\n  if (boundInfo.isBound) {\n    return boundInfo.offset;\n  } else if (snapInfo.isSnap) {\n    return snapInfo.offset;\n  }\n  return 0;\n}\nfunction checkSnapBoundsKeepRatio(moveable, startPos, endPos, isRequest) {\n  var _a = checkBoundKeepRatio(moveable, startPos, endPos),\n    horizontalBoundInfo = _a.horizontal,\n    verticalBoundInfo = _a.vertical;\n  var _b = isRequest ? {\n      horizontal: {\n        isSnap: false\n      },\n      vertical: {\n        isSnap: false\n      }\n    } : checkSnapKeepRatio(moveable, startPos, endPos),\n    horizontalSnapInfo = _b.horizontal,\n    verticalSnapInfo = _b.vertical;\n  var horizontalOffset = getSnapBoundOffset(horizontalBoundInfo, horizontalSnapInfo);\n  var verticalOffset = getSnapBoundOffset(verticalBoundInfo, verticalSnapInfo);\n  var horizontalDist = Math.abs(horizontalOffset);\n  var verticalDist = Math.abs(verticalOffset);\n  return {\n    horizontal: {\n      isBound: horizontalBoundInfo.isBound,\n      isSnap: horizontalSnapInfo.isSnap,\n      offset: horizontalOffset,\n      dist: horizontalDist\n    },\n    vertical: {\n      isBound: verticalBoundInfo.isBound,\n      isSnap: verticalSnapInfo.isSnap,\n      offset: verticalOffset,\n      dist: verticalDist\n    }\n  };\n}\nfunction checkMaxBounds(moveable, poses, direction, fixedPosition, datas) {\n  var fixedDirection = [-direction[0], -direction[1]];\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var bounds = moveable.props.bounds;\n  var maxWidth = Infinity;\n  var maxHeight = Infinity;\n  if (bounds) {\n    var directions = [[direction[0], -direction[1]], [-direction[0], direction[1]]];\n    var _b = bounds.left,\n      left_1 = _b === void 0 ? -Infinity : _b,\n      _c = bounds.top,\n      top_1 = _c === void 0 ? -Infinity : _c,\n      _d = bounds.right,\n      right_1 = _d === void 0 ? Infinity : _d,\n      _e = bounds.bottom,\n      bottom_1 = _e === void 0 ? Infinity : _e;\n    directions.forEach(function (otherDirection) {\n      var isCheckVertical = otherDirection[0] !== fixedDirection[0];\n      var isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n      var otherPos = getPosByDirection(poses, otherDirection);\n      var deg = getRad(fixedPosition, otherPos) * 360 / Math.PI;\n      if (isCheckHorizontal) {\n        var nextOtherPos = otherPos.slice();\n        if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n          nextOtherPos[1] = fixedPosition[1];\n        }\n        var _a = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[1] < otherPos[1] ? bottom_1 : top_1) - otherPos[1], false, datas),\n          _b = _a.offset,\n          heightOffset = _b[1],\n          isHeightOutside = _a.isOutside;\n        if (!isNaN(heightOffset)) {\n          maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n        }\n      }\n      if (isCheckVertical) {\n        var nextOtherPos = otherPos.slice();\n        if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n          nextOtherPos[0] = fixedPosition[0];\n        }\n        var _c = solveNextOffset(fixedPosition, nextOtherPos, (fixedPosition[0] < otherPos[0] ? right_1 : left_1) - otherPos[0], true, datas),\n          widthOffset = _c.offset[0],\n          isWidthOutside = _c.isOutside;\n        if (!isNaN(widthOffset)) {\n          maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n        }\n      }\n    });\n  }\n  return {\n    maxWidth: maxWidth,\n    maxHeight: maxHeight\n  };\n}\nfunction getTotalGuidelines(moveable) {\n  var state = moveable.state;\n  var containerClientRect = state.containerClientRect,\n    hasFixed = state.hasFixed;\n  var overflow = containerClientRect.overflow,\n    containerHeight = containerClientRect.scrollHeight,\n    containerWidth = containerClientRect.scrollWidth,\n    containerClientHeight = containerClientRect.clientHeight,\n    containerClientWidth = containerClientRect.clientWidth,\n    clientLeft = containerClientRect.clientLeft,\n    clientTop = containerClientRect.clientTop;\n  var _a = moveable.props,\n    _b = _a.snapGap,\n    snapGap = _b === void 0 ? true : _b,\n    verticalGuidelines = _a.verticalGuidelines,\n    horizontalGuidelines = _a.horizontalGuidelines,\n    _c = _a.snapThreshold,\n    snapThreshold = _c === void 0 ? 5 : _c,\n    _d = _a.snapGridWidth,\n    snapGridWidth = _d === void 0 ? 0 : _d,\n    _e = _a.snapGridHeight,\n    snapGridHeight = _e === void 0 ? 0 : _e,\n    _f = _a.maxSnapElementGuidelineDistance,\n    maxSnapElementGuidelineDistance = _f === void 0 ? Infinity : _f;\n  var _g = getRect(getAbsolutePosesByState(moveable.state)),\n    top = _g.top,\n    left = _g.left,\n    bottom = _g.bottom,\n    right = _g.right;\n  var targetRect = {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    center: (left + right) / 2,\n    middle: (top + bottom) / 2\n  };\n  var elementGuidelines = getElementGuidelines(moveable);\n  var totalGuidelines = __spreadArray([], elementGuidelines, true);\n  if (snapGap) {\n    totalGuidelines.push.apply(totalGuidelines, getGapGuidelines(moveable, targetRect, snapThreshold));\n  }\n  totalGuidelines.push.apply(totalGuidelines, getGridGuidelines(snapGridWidth, snapGridHeight, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop));\n  var snapOffset = __assign({}, state.snapOffset || {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  });\n  if (hasFixed) {\n    var left_1 = containerClientRect.left,\n      top_1 = containerClientRect.top;\n    snapOffset.left += left_1;\n    snapOffset.top += top_1;\n    snapOffset.right += left_1;\n    snapOffset.bottom += top_1;\n  }\n  totalGuidelines.push.apply(totalGuidelines, getDefaultGuidelines(horizontalGuidelines || false, verticalGuidelines || false, overflow ? containerWidth : containerClientWidth, overflow ? containerHeight : containerClientHeight, clientLeft, clientTop, snapOffset));\n  totalGuidelines = totalGuidelines.filter(function (_a) {\n    var element = _a.element,\n      elementRect = _a.elementRect,\n      type = _a.type;\n    if (!element || !elementRect) {\n      return true;\n    }\n    var rect = elementRect.rect;\n    return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n  });\n  return totalGuidelines;\n}\nfunction getGapGuidelines(moveable, targetRect, snapThreshold) {\n  var _a = moveable.props,\n    _b = _a.maxSnapElementGuidelineDistance,\n    maxSnapElementGuidelineDistance = _b === void 0 ? Infinity : _b,\n    _c = _a.maxSnapElementGapDistance,\n    maxSnapElementGapDistance = _c === void 0 ? Infinity : _c;\n  var elementRects = moveable.state.elementRects;\n  var gapGuidelines = [];\n  [[\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP], [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP]].forEach(function (_a) {\n    var type = _a[0],\n      mainNames = _a[1],\n      sideNames = _a[2];\n    var targetStart = targetRect[mainNames.start];\n    var targetEnd = targetRect[mainNames.end];\n    var targetCenter = targetRect[mainNames.center];\n    var targetStart2 = targetRect[sideNames.start];\n    var targetEnd2 = targetRect[sideNames.end]; // element : moveable\n\n    function getDist(elementRect) {\n      var rect = elementRect.rect;\n      if (rect[mainNames.end] < targetStart + snapThreshold) {\n        return targetStart - rect[mainNames.end];\n      } else if (targetEnd - snapThreshold < rect[mainNames.start]) {\n        return rect[mainNames.start] - targetEnd;\n      } else {\n        return -1;\n      }\n    }\n    var nextElementRects = elementRects.filter(function (elementRect) {\n      var rect = elementRect.rect;\n      if (rect[sideNames.start] > targetEnd2 || rect[sideNames.end] < targetStart2) {\n        return false;\n      }\n      return getDist(elementRect) > 0;\n    }).sort(function (a, b) {\n      return getDist(a) - getDist(b);\n    });\n    var groups = [];\n    nextElementRects.forEach(function (snapRect1) {\n      nextElementRects.forEach(function (snapRect2) {\n        if (snapRect1 === snapRect2) {\n          return;\n        }\n        var rect1 = snapRect1.rect;\n        var rect2 = snapRect2.rect;\n        var rect1Start = rect1[sideNames.start];\n        var rect1End = rect1[sideNames.end];\n        var rect2Start = rect2[sideNames.start];\n        var rect2End = rect2[sideNames.end];\n        if (rect1Start > rect2End || rect2Start > rect1End) {\n          return;\n        }\n        groups.push([snapRect1, snapRect2]);\n      });\n    });\n    groups.forEach(function (_a) {\n      var snapRect1 = _a[0],\n        snapRect2 = _a[1];\n      var rect1 = snapRect1.rect;\n      var rect2 = snapRect2.rect;\n      var rect1Start = rect1[mainNames.start];\n      var rect1End = rect1[mainNames.end];\n      var rect2Start = rect2[mainNames.start];\n      var rect2End = rect2[mainNames.end];\n      var gap = 0;\n      var pos = 0;\n      var isStart = false;\n      var isCenter = false;\n      var isEnd = false;\n      if (rect1End <= targetStart && targetEnd <= rect2Start) {\n        // (l)element1(r) : (l)target(r) : (l)element2(r)\n        isCenter = true;\n        gap = (rect2Start - rect1End - (targetEnd - targetStart)) / 2;\n        pos = rect1End + gap + (targetEnd - targetStart) / 2;\n        if (Math.abs(pos - targetCenter) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n        // (l)element1(r) : (l)element2(r) : (l)target\n        isStart = true;\n        gap = rect2Start - rect1End;\n        pos = rect2End + gap;\n        if (Math.abs(pos - targetStart) > snapThreshold) {\n          return;\n        }\n      } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n        // target(r) : (l)element1(r) : (l)element2(r)\n        isEnd = true;\n        gap = rect2Start - rect1End;\n        pos = rect1Start - gap;\n        if (Math.abs(pos - targetEnd) > snapThreshold) {\n          return;\n        }\n      } else {\n        return;\n      }\n      if (!gap) {\n        return;\n      }\n      if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n        return;\n      }\n      if (gap > maxSnapElementGapDistance) {\n        return;\n      }\n      gapGuidelines.push({\n        type: type,\n        pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n        element: snapRect2.element,\n        size: 0,\n        className: snapRect2.className,\n        isStart: isStart,\n        isCenter: isCenter,\n        isEnd: isEnd,\n        gap: gap,\n        hide: true,\n        gapRects: [snapRect1, snapRect2]\n      });\n    });\n  });\n  return gapGuidelines;\n}\nfunction getGridGuidelines(snapGridWidth, snapGridHeight, containerWidth, containerHeight, clientLeft, clientTop) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  var guidelines = [];\n  if (snapGridHeight) {\n    for (var pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n      guidelines.push({\n        type: \"horizontal\",\n        pos: [0, throttle(pos - clientTop, 0.1)],\n        size: containerWidth,\n        hide: true\n      });\n    }\n  }\n  if (snapGridWidth) {\n    for (var pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n      guidelines.push({\n        type: \"vertical\",\n        pos: [throttle(pos - clientLeft, 0.1), 0],\n        size: containerHeight,\n        hide: true\n      });\n    }\n  }\n  return guidelines;\n}\nfunction checkBetweenRects(rect1, rect2, type, distance) {\n  if (type === \"horizontal\") {\n    return Math.abs(rect1.right - rect2.left) <= distance || Math.abs(rect1.left - rect2.right) <= distance || rect1.left <= rect2.right && rect2.left <= rect1.right;\n  } else if (type === \"vertical\") {\n    return Math.abs(rect1.bottom - rect2.top) <= distance || Math.abs(rect1.top - rect2.bottom) <= distance || rect1.top <= rect2.bottom && rect2.top <= rect1.bottom;\n  }\n  return true;\n}\nfunction getElementGuidelines(moveable) {\n  var state = moveable.state;\n  var _a = moveable.props.elementGuidelines,\n    elementGuidelines = _a === void 0 ? [] : _a;\n  if (!elementGuidelines.length) {\n    state.elementRects = [];\n    return [];\n  }\n  var prevValues = (state.elementRects || []).filter(function (snapRect) {\n    return !snapRect.refresh;\n  });\n  var nextElementGuidelines = elementGuidelines.map(function (el) {\n    if (isObject(el) && \"element\" in el) {\n      return __assign(__assign({}, el), {\n        element: getRefTarget(el.element, true)\n      });\n    }\n    return {\n      element: getRefTarget(el, true)\n    };\n  }).filter(function (value) {\n    return value.element;\n  });\n  var _b = diff(prevValues.map(function (v) {\n      return v.element;\n    }), nextElementGuidelines.map(function (v) {\n      return v.element;\n    })),\n    maintained = _b.maintained,\n    added = _b.added;\n  var nextValues = [];\n  maintained.forEach(function (_a) {\n    var prevIndex = _a[0],\n      nextIndex = _a[1];\n    nextValues[nextIndex] = prevValues[prevIndex];\n  });\n  getSnapElementRects(moveable, added.map(function (index) {\n    return nextElementGuidelines[index];\n  })).map(function (rect, i) {\n    nextValues[added[i]] = rect;\n  });\n  state.elementRects = nextValues;\n  var elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n  var nextGuidelines = [];\n  nextValues.forEach(function (snapRect) {\n    var element = snapRect.element,\n      _a = snapRect.top,\n      topValue = _a === void 0 ? elementSnapDirections.top : _a,\n      _b = snapRect.left,\n      leftValue = _b === void 0 ? elementSnapDirections.left : _b,\n      _c = snapRect.right,\n      rightValue = _c === void 0 ? elementSnapDirections.right : _c,\n      _d = snapRect.bottom,\n      bottomValue = _d === void 0 ? elementSnapDirections.bottom : _d,\n      _e = snapRect.center,\n      centerValue = _e === void 0 ? elementSnapDirections.center : _e,\n      _f = snapRect.middle,\n      middleValue = _f === void 0 ? elementSnapDirections.middle : _f,\n      className = snapRect.className,\n      rect = snapRect.rect;\n    var _g = splitSnapDirectionPoses({\n        top: topValue,\n        right: rightValue,\n        left: leftValue,\n        bottom: bottomValue,\n        center: centerValue,\n        middle: middleValue\n      }, rect),\n      horizontal = _g.horizontal,\n      vertical = _g.vertical;\n    var rectTop = rect.top;\n    var rectLeft = rect.left;\n    var width = rect.right - rectLeft;\n    var height = rect.bottom - rectTop;\n    var sizes = [width, height];\n    vertical.forEach(function (pos) {\n      nextGuidelines.push({\n        type: \"vertical\",\n        element: element,\n        pos: [throttle(pos, 0.1), rectTop],\n        size: height,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect\n      });\n    });\n    horizontal.forEach(function (pos) {\n      nextGuidelines.push({\n        type: \"horizontal\",\n        element: element,\n        pos: [rectLeft, throttle(pos, 0.1)],\n        size: width,\n        sizes: sizes,\n        className: className,\n        elementRect: snapRect\n      });\n    });\n  });\n  return nextGuidelines;\n}\nfunction getDefaultGuidelines(horizontalGuidelines, verticalGuidelines, width, height, clientLeft, clientTop, snapOffset) {\n  if (clientLeft === void 0) {\n    clientLeft = 0;\n  }\n  if (clientTop === void 0) {\n    clientTop = 0;\n  }\n  if (snapOffset === void 0) {\n    snapOffset = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n  }\n  var guidelines = [];\n  var snapOffsetLeft = snapOffset.left,\n    snapOffsetTop = snapOffset.top,\n    snapOffsetBottom = snapOffset.bottom,\n    snapOffsetRight = snapOffset.right;\n  var snapWidth = width + snapOffsetRight - snapOffsetLeft;\n  var snapHeight = height + snapOffsetBottom - snapOffsetTop;\n  horizontalGuidelines && horizontalGuidelines.forEach(function (posInfo) {\n    var nextPosInfo = isObject(posInfo) ? posInfo : {\n      pos: posInfo\n    };\n    guidelines.push({\n      type: \"horizontal\",\n      pos: [snapOffsetLeft, throttle(nextPosInfo.pos - clientTop + snapOffsetTop, 0.1)],\n      size: snapWidth,\n      className: nextPosInfo.className\n    });\n  });\n  verticalGuidelines && verticalGuidelines.forEach(function (posInfo) {\n    var nextPosInfo = isObject(posInfo) ? posInfo : {\n      pos: posInfo\n    };\n    guidelines.push({\n      type: \"vertical\",\n      pos: [throttle(nextPosInfo.pos - clientLeft + snapOffsetLeft, 0.1), snapOffsetTop],\n      size: snapHeight,\n      className: nextPosInfo.className\n    });\n  });\n  return guidelines;\n}\nfunction getSnapElementRects(moveable, values) {\n  if (!values.length) {\n    return [];\n  }\n  var state = moveable.state;\n  var containerClientRect = state.containerClientRect,\n    _a = state.targetClientRect,\n    clientTop = _a.top,\n    clientLeft = _a.left,\n    rootMatrix = state.rootMatrix,\n    is3d = state.is3d;\n  var n = is3d ? 4 : 3;\n  var _b = calculateContainerPos(rootMatrix, containerClientRect, n),\n    containerLeft = _b[0],\n    containerTop = _b[1];\n  var poses = getAbsolutePosesByState(state);\n  var _c = getMinMaxs(poses),\n    targetLeft = _c.minX,\n    targetTop = _c.minY;\n  var _d = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [clientLeft - containerLeft, clientTop - containerTop], n)).map(function (pos) {\n      return roundSign(pos);\n    }),\n    distLeft = _d[0],\n    distTop = _d[1];\n  return values.map(function (value) {\n    var rect = value.element.getBoundingClientRect();\n    var left = rect.left - containerLeft;\n    var top = rect.top - containerTop;\n    var bottom = top + rect.height;\n    var right = left + rect.width;\n    var _a = calculateInversePosition(rootMatrix, [left, top], n),\n      elementLeft = _a[0],\n      elementTop = _a[1];\n    var _b = calculateInversePosition(rootMatrix, [right, bottom], n),\n      elementRight = _b[0],\n      elementBottom = _b[1];\n    return __assign(__assign({}, value), {\n      rect: {\n        left: elementLeft + distLeft,\n        right: elementRight + distLeft,\n        top: elementTop + distTop,\n        bottom: elementBottom + distTop,\n        center: (elementLeft + elementRight) / 2 + distLeft,\n        middle: (elementTop + elementBottom) / 2 + distTop\n      }\n    });\n  });\n}\nfunction checkSnapInfo(moveable) {\n  var state = moveable.state;\n  var container = state.container;\n  var snapContainer = moveable.props.snapContainer || container;\n  if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n    return false;\n  }\n  var containerClientRect = state.containerClientRect;\n  var snapOffset = {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  };\n  if (container !== snapContainer) {\n    var snapContainerTarget = getRefTarget(snapContainer, true);\n    if (snapContainerTarget) {\n      var snapContainerRect = getClientRect(snapContainerTarget);\n      var offset1 = getDragDistByState(state, [snapContainerRect.left - containerClientRect.left, snapContainerRect.top - containerClientRect.top]);\n      var offset2 = getDragDistByState(state, [snapContainerRect.right - containerClientRect.right, snapContainerRect.bottom - containerClientRect.bottom]);\n      snapOffset.left = throttle(offset1[0], 0.00001);\n      snapOffset.top = throttle(offset1[1], 0.00001);\n      snapOffset.right = throttle(offset2[0], 0.00001);\n      snapOffset.bottom = throttle(offset2[1], 0.00001);\n    }\n  }\n  state.snapContainer = snapContainer;\n  state.snapOffset = snapOffset;\n  state.guidelines = getTotalGuidelines(moveable);\n  state.enableSnap = true;\n  return true;\n}\nfunction getNextFixedPoses(matrix, width, height, fixedDirection, fixedPos, is3d) {\n  var nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n  var nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n  return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\nfunction getSizeOffsetInfo(moveable, poses, direction, keepRatio, isRequest, datas) {\n  var fixedDirection = datas.fixedDirection;\n  var directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n  var innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n  var offsets = __spreadArray(__spreadArray([], getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas), true), getInnerBoundInfo(moveable, innerBoundLineInfos, datas), true);\n  var widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n  var heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n  return {\n    width: {\n      isBound: widthOffsetInfo.isBound,\n      offset: widthOffsetInfo.offset[0]\n    },\n    height: {\n      isBound: heightOffsetInfo.isBound,\n      offset: heightOffsetInfo.offset[1]\n    }\n  };\n}\nfunction recheckSizeByTwoDirection(moveable, poses, width, height, maxWidth, maxHeight, direction, isRequest, datas) {\n  var snapPos = getPosByDirection(poses, direction);\n  var _a = checkMoveableSnapBounds(moveable, isRequest, {\n      vertical: [snapPos[0]],\n      horizontal: [snapPos[1]]\n    }),\n    horizontalOffset = _a.horizontal.offset,\n    verticalOffset = _a.vertical.offset;\n  if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\n    var _b = getDragDist({\n        datas: datas,\n        distX: -verticalOffset,\n        distY: -horizontalOffset\n      }),\n      nextWidthOffset = _b[0],\n      nextHeightOffset = _b[1];\n    var nextWidth = Math.min(maxWidth || Infinity, width + direction[0] * nextWidthOffset);\n    var nextHeight = Math.min(maxHeight || Infinity, height + direction[1] * nextHeightOffset);\n    return [nextWidth - width, nextHeight - height];\n  }\n  return [0, 0];\n}\nfunction checkSizeDist(moveable, getNextPoses, width, height, direction, fixedPosition, isRequest, datas) {\n  var poses = getAbsolutePosesByState(moveable.state);\n  var keepRatio = moveable.props.keepRatio;\n  var widthOffset = 0;\n  var heightOffset = 0;\n  for (var i = 0; i < 2; ++i) {\n    var nextPoses = getNextPoses(widthOffset, heightOffset);\n    var _a = getSizeOffsetInfo(moveable, nextPoses, direction, keepRatio, isRequest, datas),\n      widthOffsetInfo = _a.width,\n      heightOffsetInfo = _a.height;\n    var isWidthBound = widthOffsetInfo.isBound;\n    var isHeightBound = heightOffsetInfo.isBound;\n    var nextWidthOffset = widthOffsetInfo.offset;\n    var nextHeightOffset = heightOffsetInfo.offset;\n    if (i === 1) {\n      if (!isWidthBound) {\n        nextWidthOffset = 0;\n      }\n      if (!isHeightBound) {\n        nextHeightOffset = 0;\n      }\n    }\n    if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n      return [0, 0];\n    }\n    if (keepRatio) {\n      var widthDist = Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n      var heightDist = Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n      var isGetWidthOffset = isWidthBound && isHeightBound ? widthDist < heightDist : isHeightBound || !isWidthBound && widthDist < heightDist;\n      if (isGetWidthOffset) {\n        // width : height = ? : heightOffset\n        nextWidthOffset = width * nextHeightOffset / height;\n      } else {\n        // width : height = widthOffset : ?\n        nextHeightOffset = height * nextWidthOffset / width;\n      }\n    }\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  if (direction[0] && direction[1]) {\n    var _b = checkMaxBounds(moveable, poses, direction, fixedPosition, datas),\n      maxWidth = _b.maxWidth,\n      maxHeight = _b.maxHeight;\n    var _c = recheckSizeByTwoDirection(moveable, getNextPoses(widthOffset, heightOffset).map(function (pos) {\n        return pos.map(function (p) {\n          return throttle(p, FLOAT_POINT_NUM);\n        });\n      }), width + widthOffset, height + heightOffset, maxWidth, maxHeight, direction, isRequest, datas),\n      nextWidthOffset = _c[0],\n      nextHeightOffset = _c[1];\n    widthOffset += nextWidthOffset;\n    heightOffset += nextHeightOffset;\n  }\n  return [widthOffset, heightOffset];\n}\nfunction checkSnapRotate(moveable, rect, rotation) {\n  if (!hasGuidelines(moveable, \"rotatable\")) {\n    return {\n      isSnap: false,\n      rotation: rotation\n    };\n  }\n  var pos1 = rect.pos1,\n    pos2 = rect.pos2,\n    pos3 = rect.pos3,\n    pos4 = rect.pos4,\n    origin2 = rect.origin;\n  var rad = rotation * Math.PI / 180;\n  var prevPoses = [pos1, pos2, pos3, pos4].map(function (pos) {\n    return minus(pos, origin2);\n  });\n  var nextPoses = prevPoses.map(function (pos) {\n    return rotate(pos, rad);\n  }); // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n  // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n\n  var result = __spreadArray(__spreadArray([], checkRotateBounds(moveable, prevPoses, nextPoses, origin2, rotation), true), checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin2, rotation), true);\n  result.sort(function (a, b) {\n    return Math.abs(a - rotation) - Math.abs(b - rotation);\n  });\n  var isSnap = result.length > 0;\n  return {\n    isSnap: isSnap,\n    rotation: isSnap ? result[0] : rotation\n  };\n}\nfunction checkSnapResize(moveable, width, height, direction, fixedPosition, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"resizable\")) {\n    return [0, 0];\n  }\n  var fixedDirection = datas.fixedDirection,\n    nextAllMatrix = datas.nextAllMatrix;\n  var _a = moveable.state,\n    allMatrix = _a.allMatrix,\n    is3d = _a.is3d;\n  return checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(nextAllMatrix || allMatrix, width + widthOffset, height + heightOffset, fixedDirection, fixedPosition, is3d);\n  }, width, height, direction, fixedPosition, isRequest, datas);\n}\nfunction checkSnapScale(moveable, scale, direction, isRequest, datas) {\n  if (!hasGuidelines(moveable, \"scalable\")) {\n    return [0, 0];\n  }\n  var startOffsetWidth = datas.startOffsetWidth,\n    startOffsetHeight = datas.startOffsetHeight,\n    fixedPosition = datas.fixedPosition,\n    fixedDirection = datas.fixedDirection,\n    is3d = datas.is3d;\n  var sizeDist = checkSizeDist(moveable, function (widthOffset, heightOffset) {\n    return getNextFixedPoses(scaleMatrix(datas, plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight])), startOffsetWidth, startOffsetHeight, fixedDirection, fixedPosition, is3d);\n  }, startOffsetWidth, startOffsetHeight, direction, fixedPosition, isRequest, datas);\n  return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\nfunction startCheckSnapDrag(moveable, datas) {\n  datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\nfunction getSnapGuidelines(posInfos) {\n  var guidelines = [];\n  posInfos.forEach(function (posInfo) {\n    posInfo.guidelineInfos.forEach(function (_a) {\n      var guideline = _a.guideline;\n      if (guidelines.indexOf(guideline) > -1) {\n        return;\n      }\n      guidelines.push(guideline);\n    });\n  });\n  return guidelines;\n}\nfunction addBoundGuidelines(moveable, verticalPoses, horizontalPoses, verticalSnapPoses, horizontalSnapPoses, externalBounds) {\n  var _a = checkBoundPoses(getBounds(moveable, externalBounds), verticalPoses, horizontalPoses),\n    verticalBoundInfos = _a.vertical,\n    horizontalBoundInfos = _a.horizontal;\n  verticalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      verticalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  horizontalBoundInfos.forEach(function (info) {\n    if (info.isBound) {\n      horizontalSnapPoses.push({\n        type: \"bounds\",\n        pos: info.pos\n      });\n    }\n  });\n  var _b = checkInnerBoundPoses(moveable),\n    verticalInnerBoundPoses = _b.vertical,\n    horizontalInnerBoundPoses = _b.horizontal;\n  verticalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(verticalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    verticalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n  horizontalInnerBoundPoses.forEach(function (innerPos) {\n    if (findIndex(horizontalSnapPoses, function (_a) {\n      var type = _a.type,\n        pos = _a.pos;\n      return type === \"bounds\" && pos === innerPos;\n    }) >= 0) {\n      return;\n    }\n    horizontalSnapPoses.push({\n      type: \"bounds\",\n      pos: innerPos\n    });\n  });\n}\nvar directionCondition$2 = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\n\nvar Snappable = {\n  name: \"snappable\",\n  dragRelation: \"strong\",\n  props: {\n    snappable: [Boolean, Array],\n    snapContainer: Object,\n    snapDirections: [Boolean, Object],\n    elementSnapDirections: [Boolean, Object],\n    snapGap: Boolean,\n    snapGridWidth: Number,\n    snapGridHeight: Number,\n    isDisplaySnapDigit: Boolean,\n    isDisplayInnerSnapDigit: Boolean,\n    snapDigit: Number,\n    snapThreshold: Number,\n    snapRenderThreshold: Number,\n    horizontalGuidelines: Array,\n    verticalGuidelines: Array,\n    elementGuidelines: Array,\n    bounds: Object,\n    innerBounds: Object,\n    snapDistFormat: Function,\n    maxSnapElementGuidelineDistance: Number,\n    maxSnapElementGapDistance: Number\n  },\n  events: {\n    onSnap: \"snap\"\n  },\n  css: [\":host {\\n    --bounds-color: #d66;\\n}\\n.guideline {\\n    pointer-events: none;\\n    z-index: 2;\\n}\\n.guideline.bounds {\\n    background: #d66;\\n    background: var(--bounds-color);\\n}\\n.guideline-group {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.guideline-group .size-value {\\n    position: absolute;\\n    color: #f55;\\n    font-size: 12px;\\n    font-weight: bold;\\n}\\n.guideline-group.horizontal .size-value {\\n    transform-origin: 50% 100%;\\n    transform: translateX(-50%);\\n    left: 50%;\\n    bottom: 5px;\\n}\\n.guideline-group.vertical .size-value {\\n    transform-origin: 0% 50%;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    left: 5px;\\n}\\n.guideline.gap {\\n    background: #f55;\\n}\\n.size-value.gap {\\n    color: #f55;\\n}\\n\"],\n  render: function (moveable, React) {\n    var state = moveable.state;\n    var targetTop = state.top,\n      targetLeft = state.left,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      snapRenderInfo = state.snapRenderInfo;\n    var _a = moveable.props.snapRenderThreshold,\n      snapRenderThreshold = _a === void 0 ? 1 : _a;\n    if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\n      return [];\n    }\n    state.guidelines = getTotalGuidelines(moveable);\n    var minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n    var minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n    var externalPoses = snapRenderInfo.externalPoses || [];\n    var poses = getAbsolutePosesByState(moveable.state);\n    var verticalSnapPoses = [];\n    var horizontalSnapPoses = [];\n    var verticalGuidelines = [];\n    var horizontalGuidelines = [];\n    var snapInfos = [];\n    var _b = getRect(poses),\n      width = _b.width,\n      height = _b.height,\n      top = _b.top,\n      left = _b.left,\n      bottom = _b.bottom,\n      right = _b.right;\n    var targetRect = {\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom,\n      center: (left + right) / 2,\n      middle: (top + bottom) / 2\n    };\n    var hasExternalPoses = externalPoses.length > 0;\n    var externalRect = hasExternalPoses ? getRect(externalPoses) : {};\n    if (!snapRenderInfo.request) {\n      if (snapRenderInfo.direction) {\n        snapInfos.push(getSnapInfosByDirection(moveable, poses, snapRenderInfo.direction, snapRenderThreshold));\n      }\n      if (snapRenderInfo.snap) {\n        var rect = getRect(poses);\n        if (snapRenderInfo.center) {\n          rect.middle = (rect.top + rect.bottom) / 2;\n          rect.center = (rect.left + rect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold));\n      }\n      if (hasExternalPoses) {\n        if (snapRenderInfo.center) {\n          externalRect.middle = (externalRect.top + externalRect.bottom) / 2;\n          externalRect.center = (externalRect.left + externalRect.right) / 2;\n        }\n        snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold));\n      }\n      snapInfos.forEach(function (snapInfo) {\n        var verticalPosInfos = snapInfo.vertical.posInfos,\n          horizontalPosInfos = snapInfo.horizontal.posInfos;\n        verticalSnapPoses.push.apply(verticalSnapPoses, verticalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        }));\n        horizontalSnapPoses.push.apply(horizontalSnapPoses, horizontalPosInfos.filter(function (_a) {\n          var guidelineInfos = _a.guidelineInfos;\n          return guidelineInfos.some(function (_a) {\n            var guideline = _a.guideline;\n            return !guideline.hide;\n          });\n        }).map(function (posInfo) {\n          return {\n            type: \"snap\",\n            pos: posInfo.pos\n          };\n        }));\n        verticalGuidelines.push.apply(verticalGuidelines, getSnapGuidelines(verticalPosInfos));\n        horizontalGuidelines.push.apply(horizontalGuidelines, getSnapGuidelines(horizontalPosInfos));\n      });\n    }\n    addBoundGuidelines(moveable, [left, right], [top, bottom], verticalSnapPoses, horizontalSnapPoses);\n    if (hasExternalPoses) {\n      addBoundGuidelines(moveable, [externalRect.left, externalRect.right], [externalRect.top, externalRect.bottom], verticalSnapPoses, horizontalSnapPoses, snapRenderInfo.externalBounds);\n    }\n    var allGuidelines = __spreadArray(__spreadArray([], verticalGuidelines, true), horizontalGuidelines, true);\n    var elementGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.element && !guideline.gapRects;\n    });\n    var gapGuidelines = allGuidelines.filter(function (guideline) {\n      return guideline.gapRects;\n    }).sort(function (a, b) {\n      return a.gap - b.gap;\n    });\n    triggerEvent(moveable, \"onSnap\", {\n      guidelines: allGuidelines.filter(function (_a) {\n        var element = _a.element;\n        return !element;\n      }),\n      elements: elementGuidelines,\n      gaps: gapGuidelines\n    }, true);\n    return __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], renderDashedGuidelines(moveable, elementGuidelines, [minLeft, minTop], targetRect, React), true), renderGapGuidelines(moveable, gapGuidelines, [minLeft, minTop], targetRect, React), true), renderGuidelines(moveable, \"horizontal\", horizontalGuidelines, [targetLeft, targetTop], targetRect, React), true), renderGuidelines(moveable, \"vertical\", verticalGuidelines, [targetLeft, targetTop], targetRect, React), true), renderSnapPoses(moveable, \"horizontal\", horizontalSnapPoses, minLeft, targetTop, width, 0, React), true), renderSnapPoses(moveable, \"vertical\", verticalSnapPoses, minTop, targetLeft, height, 1, React), true);\n  },\n  dragStart: function (moveable, e) {\n    moveable.state.snapRenderInfo = {\n      request: e.isRequest,\n      snap: true,\n      center: true\n    };\n    checkSnapInfo(moveable);\n  },\n  drag: function (moveable) {\n    var state = moveable.state;\n    if (!checkSnapInfo(moveable)) {\n      state.guidelines = getTotalGuidelines(moveable);\n    }\n    if (state.snapRenderInfo) {\n      state.snapRenderInfo.render = true;\n    }\n  },\n  pinchStart: function (moveable) {\n    this.unset(moveable);\n  },\n  dragEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (directionCondition$2(moveable, e) || dragControlCondition(moveable, e)) {\n      return true;\n    }\n    if (!e.isRequest && e.inputEvent) {\n      return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n    }\n  },\n  dragControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    checkSnapInfo(moveable);\n  },\n  dragControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupStart: function (moveable, e) {\n    this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  dragGroupControlStart: function (moveable) {\n    moveable.state.snapRenderInfo = null;\n    checkSnapInfo(moveable);\n  },\n  dragGroupControl: function (moveable) {\n    this.drag(moveable);\n  },\n  dragGroupControlEnd: function (moveable) {\n    this.unset(moveable);\n  },\n  unset: function (moveable) {\n    var state = moveable.state;\n    state.enableSnap = false;\n    state.guidelines = [];\n    state.snapRenderInfo = null;\n    state.elementRects = [];\n  }\n};\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n\nfunction renderDirectionControlsByInfos(moveable, ableName, renderDirections, React) {\n  var _a = moveable.getState(),\n    renderPoses = _a.renderPoses,\n    rotationRad = _a.rotation,\n    direction = _a.direction;\n  var zoom = getProps(moveable.props, ableName).zoom;\n  var sign = direction > 0 ? 1 : -1;\n  var degRotation = rotationRad / Math.PI * 180;\n  var directionMap = {};\n  var renderState = moveable.renderState;\n  if (!renderState.renderDirectionMap) {\n    renderState.renderDirectionMap = {};\n  }\n  var renderDirectionMap = renderState.renderDirectionMap;\n  renderDirections.forEach(function (_a) {\n    var dir = _a.dir;\n    directionMap[dir] = true;\n  });\n  return renderDirections.map(function (_a) {\n    var data = _a.data,\n      classNames = _a.classNames,\n      dir = _a.dir;\n    var indexes = DIRECTION_INDEXES[dir];\n    if (!indexes || !directionMap[dir]) {\n      return null;\n    }\n    renderDirectionMap[dir] = true;\n    var directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n    var dataAttrs = {};\n    getKeys(data).forEach(function (name) {\n      dataAttrs[\"data-\".concat(name)] = data[name];\n    });\n    return React.createElement(\"div\", __assign({\n      className: prefix.apply(void 0, __spreadArray([\"control\", \"direction\", dir, ableName], classNames, false)),\n      \"data-rotation\": directionRotation,\n      \"data-direction\": dir\n    }, dataAttrs, {\n      key: \"direction-\".concat(dir),\n      style: getControlTransform.apply(void 0, __spreadArray([rotationRad, zoom], indexes.map(function (index) {\n        return renderPoses[index];\n      }), false))\n    }));\n  });\n}\nfunction renderDirectionControls(moveable, defaultDirections, ableName, React) {\n  var _a = getProps(moveable.props, ableName).renderDirections,\n    directions = _a === void 0 ? defaultDirections : _a;\n  if (!directions) {\n    return [];\n  }\n  var renderDirections = directions === true ? DIRECTIONS : directions;\n  return renderDirectionControlsByInfos(moveable, ableName, renderDirections.map(function (dir) {\n    return {\n      data: {},\n      classNames: [],\n      dir: dir\n    };\n  }), React);\n}\nfunction renderAroundControls(moveable, React) {\n  var renderState = moveable.renderState;\n  if (!renderState.renderDirectionMap) {\n    renderState.renderDirectionMap = {};\n  }\n  var _a = moveable.getState(),\n    renderPoses = _a.renderPoses,\n    rotationRad = _a.rotation,\n    direction = _a.direction;\n  var renderDirectionMap = renderState.renderDirectionMap;\n  var zoom = moveable.props.zoom;\n  var sign = direction > 0 ? 1 : -1;\n  var degRotation = rotationRad / Math.PI * 180;\n  return getKeys(renderDirectionMap).map(function (dir) {\n    var indexes = DIRECTION_INDEXES[dir];\n    if (!indexes) {\n      return null;\n    }\n    var directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n    return React.createElement(\"div\", {\n      className: prefix(\"around-control\"),\n      \"data-rotation\": directionRotation,\n      \"data-direction\": dir,\n      key: \"direction-around-\".concat(dir),\n      style: getControlTransform.apply(void 0, __spreadArray([rotationRad, zoom], indexes.map(function (index) {\n        return renderPoses[index];\n      }), false))\n    });\n  });\n}\nfunction renderLine(React, direction, pos1, pos2, zoom, key) {\n  var classNames = [];\n  for (var _i = 6; _i < arguments.length; _i++) {\n    classNames[_i - 6] = arguments[_i];\n  }\n  var rad = getRad(pos1, pos2);\n  var rotation = direction ? throttle(rad / Math.PI * 180, 15) % 180 : -1;\n  return React.createElement(\"div\", {\n    key: \"line-\".concat(key),\n    className: prefix.apply(void 0, __spreadArray([\"line\", \"direction\", direction ? \"edge\" : \"\", direction], classNames, false)),\n    \"data-rotation\": rotation,\n    \"data-line-key\": key,\n    \"data-direction\": direction,\n    style: getLineStyle(pos1, pos2, zoom, rad)\n  });\n}\nfunction renderEdgeLines(React, ableName, edge, poses, zoom) {\n  var directions = edge === true ? DIRECTIONS4 : edge;\n  return directions.map(function (direction, i) {\n    var _a = DIRECTION_INDEXES[direction],\n      index1 = _a[0],\n      index2 = _a[1];\n    if (index2 == null) {\n      return;\n    }\n    return renderLine(React, direction, poses[index1], poses[index2], zoom, \"\".concat(ableName, \"Edge\").concat(i), ableName);\n  }).filter(Boolean);\n}\nfunction getRenderDirections(ableName) {\n  return function (moveable, React) {\n    var edge = getProps(moveable.props, ableName).edge;\n    if (edge && (edge === true || edge.length)) {\n      return __spreadArray(__spreadArray([], renderEdgeLines(React, ableName, edge, moveable.getState().renderPoses, moveable.props.zoom), true), renderDiagonalDirections(moveable, ableName, React), true);\n    }\n    return renderAllDirections(moveable, ableName, React);\n  };\n}\nfunction renderAllDirections(moveable, ableName, React) {\n  return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\nfunction renderDiagonalDirections(moveable, ableName, React) {\n  return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\n\nvar Draggable = {\n  name: \"draggable\",\n  props: {\n    draggable: Boolean,\n    throttleDrag: Number,\n    throttleDragRotate: Number,\n    startDragRotate: Number,\n    edgeDraggable: Boolean\n  },\n  events: {\n    onDragStart: \"dragStart\",\n    onDrag: \"drag\",\n    onDragEnd: \"dragEnd\",\n    onDragGroupStart: \"dragGroupStart\",\n    onDragGroup: \"dragGroup\",\n    onDragGroupEnd: \"dragGroupEnd\"\n  },\n  requestStyle: function () {\n    return [\"left\", \"top\", \"right\", \"bottom\"];\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      throttleDragRotate = _a.throttleDragRotate,\n      zoom = _a.zoom;\n    var _b = moveable.getState(),\n      dragInfo = _b.dragInfo,\n      beforeOrigin = _b.beforeOrigin;\n    if (!throttleDragRotate || !dragInfo) {\n      return [];\n    }\n    var dist = dragInfo.dist;\n    if (!dist[0] && !dist[1]) {\n      return [];\n    }\n    var width = getDistSize(dist);\n    var rad = getRad(dist, [0, 0]);\n    return [React.createElement(\"div\", {\n      className: prefix(\"line\", \"horizontal\", \"dragline\", \"dashed\"),\n      key: \"dragRotateGuideline\",\n      style: {\n        width: \"\".concat(width, \"px\"),\n        transform: \"translate(\".concat(beforeOrigin[0], \"px, \").concat(beforeOrigin[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n      }\n    })];\n  },\n  dragStart: function (moveable, e) {\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentGesto = e.parentGesto;\n    var state = moveable.state;\n    var gestos = state.gestos,\n      style = state.style;\n    if (gestos.draggable) {\n      return false;\n    }\n    gestos.draggable = parentGesto || moveable.targetGesto;\n    datas.datas = {};\n    datas.left = parseFloat(style.left || \"\") || 0;\n    datas.top = parseFloat(style.top || \"\") || 0;\n    datas.bottom = parseFloat(style.bottom || \"\") || 0;\n    datas.right = parseFloat(style.right || \"\") || 0;\n    datas.startValue = [0, 0];\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(e, \"translate\");\n    startCheckSnapDrag(moveable, datas);\n    datas.prevDist = [0, 0];\n    datas.prevBeforeDist = [0, 0];\n    datas.isDrag = false;\n    datas.deltaOffset = [0, 0];\n    var params = fillParams(moveable, e, __assign({\n      set: function (translate) {\n        datas.startValue = translate;\n      }\n    }, fillTransformStartEvent(e)));\n    var result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n    if (result !== false) {\n      datas.isDrag = true;\n      moveable.state.dragInfo = {\n        startRect: moveable.getRect(),\n        dist: [0, 0]\n      };\n    } else {\n      gestos.draggable = null;\n      datas.isPinch = false;\n    }\n    return datas.isDrag ? params : false;\n  },\n  drag: function (moveable, e) {\n    if (!e) {\n      return;\n    }\n    resolveTransformEvent(e, \"translate\");\n    var datas = e.datas,\n      parentEvent = e.parentEvent,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest,\n      deltaOffset = e.deltaOffset;\n    var distX = e.distX,\n      distY = e.distY;\n    var isDrag = datas.isDrag,\n      prevDist = datas.prevDist,\n      prevBeforeDist = datas.prevBeforeDist,\n      startValue = datas.startValue;\n    if (!isDrag) {\n      return;\n    }\n    if (deltaOffset) {\n      distX += deltaOffset[0];\n      distY += deltaOffset[1];\n    }\n    var props = moveable.props;\n    var parentMoveable = props.parentMoveable;\n    var throttleDrag = parentEvent ? 0 : props.throttleDrag || 0;\n    var throttleDragRotate = parentEvent ? 0 : props.throttleDragRotate || 0;\n    var dragRotateRad = 0;\n    var isVerticalSnap = false;\n    var isVerticalBound = false;\n    var isHorizontalSnap = false;\n    var isHorizontalBound = false;\n    if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n      var startDragRotate = props.startDragRotate || 0;\n      var deg = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate) - startDragRotate;\n      var ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n      var rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n      var r = getDistSize([rx, ry]);\n      dragRotateRad = deg * Math.PI / 180;\n      distX = r * Math.cos(dragRotateRad);\n      distY = r * Math.sin(dragRotateRad);\n    }\n    if (!isPinch && !parentEvent && !parentFlag) {\n      var _a = checkSnapBoundsDrag(moveable, distX, distY, throttleDragRotate, isRequest || deltaOffset, datas),\n        verticalInfo = _a[0],\n        horizontalInfo = _a[1];\n      isVerticalSnap = verticalInfo.isSnap;\n      isVerticalBound = verticalInfo.isBound;\n      isHorizontalSnap = horizontalInfo.isSnap;\n      isHorizontalBound = horizontalInfo.isBound;\n      var verticalOffset = verticalInfo.offset;\n      var horizontalOffset = horizontalInfo.offset;\n      distX += verticalOffset;\n      distY += horizontalOffset;\n    }\n    var beforeTranslate = plus(getBeforeDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    var translate = plus(getTransformDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }), startValue);\n    throttleArray(translate, TINY_NUM);\n    throttleArray(beforeTranslate, TINY_NUM);\n    if (!throttleDragRotate) {\n      if (!isVerticalSnap && !isVerticalBound) {\n        translate[0] = throttle(translate[0], throttleDrag);\n        beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n      }\n      if (!isHorizontalSnap && !isHorizontalBound) {\n        translate[1] = throttle(translate[1], throttleDrag);\n        beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n      }\n    }\n    var beforeDist = minus(beforeTranslate, startValue);\n    var dist = minus(translate, startValue);\n    var delta = minus(dist, prevDist);\n    var beforeDelta = minus(beforeDist, prevBeforeDist);\n    datas.prevDist = dist;\n    datas.prevBeforeDist = beforeDist;\n    datas.passDelta = delta; //distX - (datas.passDistX || 0);\n    // datas.passDeltaY = distY - (datas.passDistY || 0);\n\n    datas.passDist = dist; //distX;\n    // datas.passDistY = distY;\n\n    var left = datas.left + beforeDist[0];\n    var top = datas.top + beforeDist[1];\n    var right = datas.right - beforeDist[0];\n    var bottom = datas.bottom - beforeDist[1];\n    var nextTransform = convertTransformFormat(datas, \"translate(\".concat(translate[0], \"px, \").concat(translate[1], \"px)\"), \"translate(\".concat(dist[0], \"px, \").concat(dist[1], \"px)\"));\n    fillOriginalTransform(e, nextTransform);\n    moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n    if (!parentEvent && !parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && beforeDelta.some(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var _b = moveable.state,\n      width = _b.width,\n      height = _b.height;\n    var params = fillParams(moveable, e, __assign({\n      transform: nextTransform,\n      dist: dist,\n      delta: delta,\n      translate: translate,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeTranslate: beforeTranslate,\n      left: left,\n      top: top,\n      right: right,\n      bottom: bottom,\n      width: width,\n      height: height,\n      isPinch: isPinch\n    }, fillCSSObject({\n      transform: nextTransform\n    }, e)));\n    !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n    return params;\n  },\n  dragAfter: function (moveable, e) {\n    var datas = e.datas;\n    var deltaOffset = datas.deltaOffset;\n    if (deltaOffset[0] || deltaOffset[1]) {\n      datas.deltaOffset = [0, 0];\n      return this.drag(moveable, __assign(__assign({}, e), {\n        deltaOffset: deltaOffset\n      }));\n    }\n    return false;\n  },\n  dragEnd: function (moveable, e) {\n    var parentEvent = e.parentEvent,\n      datas = e.datas;\n    moveable.state.dragInfo = null;\n    if (!datas.isDrag) {\n      return;\n    }\n    datas.isDrag = false;\n    var param = fillEndParams(moveable, e, {});\n    !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n    return param;\n  },\n  dragGroupStart: function (moveable, e) {\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY;\n    var params = this.dragStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var events = triggerChildGesto(moveable, this, \"dragStart\", [clientX || 0, clientY || 0], e, false, \"draggable\");\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events\n    });\n    var result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n    datas.isDrag = result !== false;\n    return datas.isDrag ? params : false;\n  },\n  dragGroup: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    var params = this.drag(moveable, e);\n    var passDelta = e.datas.passDelta;\n    var events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n    if (!params) {\n      return;\n    }\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onDragGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isDrag) {\n      return;\n    }\n    this.dragEnd(moveable, e);\n    var events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n    triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    }));\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Draggable#request\n   * @param {object} [e] - the draggable's request parameter\n   * @param {number} [e.x] - x position\n   * @param {number} [e.y] - y position\n   * @param {number} [e.deltaX] - X number to move\n   * @param {number} [e.deltaY] - Y number to move\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * // Use Relative Value\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n   * // Use Absolute Value\n   * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"draggable\");\n   *\n   * // request\n   * // Use Relative Value\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * // Use Absolute Value\n   * moveable.request(\"draggable\", { x: 200, y: 100 });\n   * moveable.request(\"draggable\", { x: 220, y: 100 });\n   * moveable.request(\"draggable\", { x: 240, y: 100 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    return {\n      isControl: false,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"x\" in e) {\n          distX = e.x - rect.left;\n        } else if (\"deltaX\" in e) {\n          distX += e.deltaX;\n        }\n        if (\"y\" in e) {\n          distY = e.y - rect.top;\n        } else if (\"deltaY\" in e) {\n          distY += e.deltaY;\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  },\n  unset: function (moveable) {\n    moveable.state.gestos.draggable = null;\n    moveable.state.dragInfo = null;\n  }\n};\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nvar directionCondition$1 = getDirectionCondition(\"resizable\");\nvar Resizable = {\n  name: \"resizable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: {\n    resizable: Boolean,\n    throttleResize: Number,\n    renderDirections: Array,\n    keepRatio: Boolean,\n    resizeFormat: Function,\n    keepRatioFinally: Boolean,\n    edge: Boolean,\n    checkResizableError: Boolean\n  },\n  events: {\n    onResizeStart: \"resizeStart\",\n    onBeforeResize: \"beforeResize\",\n    onResize: \"resize\",\n    onResizeEnd: \"resizeEnd\",\n    onResizeGroupStart: \"resizeGroupStart\",\n    onBeforeResizeGroup: \"beforeResizeGroup\",\n    onResizeGroup: \"resizeGroup\",\n    onResizeGroupEnd: \"resizeGroupEnd\"\n  },\n  render: getRenderDirections(\"resizable\"),\n  dragControlCondition: directionCondition$1,\n  viewClassName: getDirectionViewClassName(\"resizable\"),\n  dragControlStart: function (moveable, e) {\n    var _a;\n    var inputEvent = e.inputEvent,\n      isPinch = e.isPinch,\n      isGroup = e.isGroup,\n      parentDirection = e.parentDirection,\n      parentGesto = e.parentGesto,\n      datas = e.datas,\n      parentFixedDirection = e.parentFixedDirection,\n      parentEvent = e.parentEvent;\n    var direction = getTotalDirection(parentDirection, isPinch, inputEvent, datas);\n    var state = moveable.state;\n    var target = state.target,\n      width = state.width,\n      height = state.height,\n      gestos = state.gestos;\n    if (!direction || !target) {\n      return false;\n    }\n    if (gestos.resizable) {\n      return false;\n    }\n    gestos.resizable = parentGesto || moveable.controlGesto;\n    !isPinch && setDragStart(moveable, e);\n    datas.datas = {};\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.prevWidth = 0;\n    datas.prevHeight = 0;\n    datas.minSize = [0, 0];\n    datas.startWidth = state.inlineCSSWidth || state.cssWidth;\n    datas.startHeight = state.inlineCSSHeight || state.cssHeight;\n    datas.maxSize = [Infinity, Infinity];\n    if (!isGroup) {\n      datas.minSize = [state.minOffsetWidth, state.minOffsetHeight];\n      datas.maxSize = [state.maxOffsetWidth, state.maxOffsetHeight];\n    }\n    var transformOrigin = moveable.props.transformOrigin || \"% %\";\n    datas.transformOrigin = transformOrigin && isString(transformOrigin) ? transformOrigin.split(\" \") : transformOrigin;\n    datas.startOffsetMatrix = state.offsetMatrix;\n    datas.startTransformOrigin = state.transformOrigin;\n    datas.isWidth = (_a = e === null || e === void 0 ? void 0 : e.parentIsWidth) !== null && _a !== void 0 ? _a : !direction[0] && !direction[1] || direction[0] || !direction[1];\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n    }\n    function setFixedPosition(fixedPosition) {\n      var _a = moveable.state,\n        width = _a.width,\n        height = _a.height;\n      datas.fixedPosition = fixedPosition;\n      datas.fixedDirection = getDirectionByPos(fixedPosition, width, height);\n    }\n    function setMin(minSize) {\n      datas.minSize = [convertUnitSize(\"\".concat(minSize[0]), 0) || 0, convertUnitSize(\"\".concat(minSize[1]), 0) || 0];\n    }\n    function setMax(maxSize) {\n      var nextMaxSize = [maxSize[0] || Infinity, maxSize[1] || Infinity];\n      if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n        nextMaxSize[0] = convertUnitSize(\"\".concat(nextMaxSize[0]), 0) || Infinity;\n      }\n      if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n        nextMaxSize[1] = convertUnitSize(\"\".concat(nextMaxSize[1]), 0) || Infinity;\n      }\n      datas.maxSize = nextMaxSize;\n    }\n    setRatio(width / height);\n    setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n    datas.setFixedDirection = setFixedDirection;\n    datas.setFixedPosition = setFixedPosition;\n    datas.setMin = setMin;\n    datas.setMax = setMax;\n    var params = fillParams(moveable, e, {\n      direction: direction,\n      startRatio: datas.ratio,\n      set: function (_a) {\n        var startWidth = _a[0],\n          startHeight = _a[1];\n        datas.startWidth = startWidth;\n        datas.startHeight = startHeight;\n      },\n      setMin: setMin,\n      setMax: setMax,\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection,\n      setFixedPosition: setFixedPosition,\n      setOrigin: function (origin) {\n        datas.transformOrigin = origin;\n      },\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n    datas.startFixedDirection = datas.fixedDirection;\n    datas.startFixedPosition = datas.fixedPosition;\n    if (result !== false) {\n      datas.isResize = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isResize ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a;\n    var datas = e.datas,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      parentKeepRatio = e.parentKeepRatio,\n      dragClient = e.dragClient,\n      parentDist = e.parentDist,\n      isRequest = e.isRequest,\n      isGroup = e.isGroup,\n      parentEvent = e.parentEvent,\n      resolveMatrix = e.resolveMatrix;\n    var isResize = datas.isResize,\n      transformOrigin = datas.transformOrigin,\n      startWidth = datas.startWidth,\n      startHeight = datas.startHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight,\n      minSize = datas.minSize,\n      maxSize = datas.maxSize,\n      ratio = datas.ratio,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      isWidth = datas.isWidth;\n    if (!isResize) {\n      return;\n    }\n    if (resolveMatrix) {\n      var is3d = moveable.state.is3d;\n      var startOffsetMatrix = datas.startOffsetMatrix,\n        startTransformOrigin = datas.startTransformOrigin;\n      var n = is3d ? 4 : 3;\n      var targetMatrix = parseMat(getNextTransforms(e));\n      var targetN = Math.sqrt(targetMatrix.length);\n      if (n !== targetN) {\n        targetMatrix = convertDimension(targetMatrix, targetN, n);\n      }\n      var nextAllMatrix = getNextMatrix(startOffsetMatrix, targetMatrix, startTransformOrigin, n);\n      var poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n      datas.startPositions = poses;\n      datas.nextTargetMatrix = targetMatrix;\n      datas.nextAllMatrix = nextAllMatrix;\n    }\n    var props = getProps(moveable.props, \"resizable\");\n    var resizeFormat = props.resizeFormat,\n      _b = props.throttleResize,\n      throttleResize = _b === void 0 ? parentFlag ? 0 : 1 : _b,\n      parentMoveable = props.parentMoveable,\n      keepRatioFinally = props.keepRatioFinally;\n    var direction = datas.direction;\n    var sizeDirection = direction;\n    var distWidth = 0;\n    var distHeight = 0;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    function getNextBoundingSize() {\n      var fixedDirection = datas.fixedDirection;\n      var nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n      distWidth = nextSize.distWidth;\n      distHeight = nextSize.distHeight;\n      var nextWidth = sizeDirection[0] - fixedDirection[0] || keepRatio ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n      var nextHeight = sizeDirection[1] - fixedDirection[1] || keepRatio ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n      if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n        if (isWidth) {\n          nextHeight = nextWidth / ratio;\n        } else {\n          nextWidth = nextHeight * ratio;\n        }\n      }\n      return [nextWidth, nextHeight];\n    }\n    var _c = getNextBoundingSize(),\n      boundingWidth = _c[0],\n      boundingHeight = _c[1];\n    if (!parentEvent) {\n      datas.setFixedDirection(datas.fixedDirection);\n      triggerEvent(moveable, \"onBeforeResize\", fillParams(moveable, e, {\n        startFixedDirection: datas.startFixedDirection,\n        startFixedPosition: datas.startFixedPosition,\n        setFixedDirection: function (nextFixedDirection) {\n          var _a;\n          datas.setFixedDirection(nextFixedDirection);\n          _a = getNextBoundingSize(), boundingWidth = _a[0], boundingHeight = _a[1];\n          return [boundingWidth, boundingHeight];\n        },\n        setFixedPosition: function (nextFixedPosition) {\n          var _a;\n          datas.setFixedPosition(nextFixedPosition);\n          _a = getNextBoundingSize(), boundingWidth = _a[0], boundingHeight = _a[1];\n          return [boundingWidth, boundingHeight];\n        },\n        boundingWidth: boundingWidth,\n        boundingHeight: boundingHeight,\n        setSize: function (size) {\n          boundingWidth = size[0], boundingHeight = size[1];\n        }\n      }, true));\n    }\n    var fixedPosition = dragClient;\n    if (!dragClient) {\n      if (!parentFlag && isPinch) {\n        fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n      } else {\n        fixedPosition = datas.fixedPosition;\n      }\n    }\n    var snapDist = [0, 0];\n    if (!isPinch) {\n      snapDist = checkSnapResize(moveable, boundingWidth, boundingHeight, direction, fixedPosition, isRequest, datas);\n    }\n    if (parentDist) {\n      !parentDist[0] && (snapDist[0] = 0);\n      !parentDist[1] && (snapDist[1] = 0);\n    }\n    function computeSize() {\n      var _a;\n      if (resizeFormat) {\n        _a = resizeFormat([boundingWidth, boundingHeight]), boundingWidth = _a[0], boundingHeight = _a[1];\n      }\n      boundingWidth = throttle(boundingWidth, throttleResize);\n      boundingHeight = throttle(boundingHeight, throttleResize);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        // pre-compute before maintaining the ratio\n        computeSize();\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        boundingWidth += snapDist[0];\n        boundingHeight = boundingWidth / ratio;\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        boundingHeight += snapDist[1];\n        boundingWidth = boundingHeight * ratio;\n      }\n    } else {\n      boundingWidth += snapDist[0];\n      boundingHeight += snapDist[1];\n      boundingWidth = Math.max(0, boundingWidth);\n      boundingHeight = Math.max(0, boundingHeight);\n    }\n    _a = calculateBoundSize([boundingWidth, boundingHeight], minSize, maxSize, keepRatio ? ratio : false), boundingWidth = _a[0], boundingHeight = _a[1];\n    computeSize();\n    if (keepRatio && (isGroup || keepRatioFinally)) {\n      if (isWidth) {\n        boundingHeight = boundingWidth / ratio;\n      } else {\n        boundingWidth = boundingHeight * ratio;\n      }\n    }\n    distWidth = boundingWidth - startOffsetWidth;\n    distHeight = boundingHeight - startOffsetHeight;\n    var delta = [distWidth - prevWidth, distHeight - prevHeight];\n    datas.prevWidth = distWidth;\n    datas.prevHeight = distHeight;\n    var inverseDelta = getResizeDist(moveable, boundingWidth, boundingHeight, fixedPosition, transformOrigin, datas);\n    if (!parentMoveable && delta.every(function (num) {\n      return !num;\n    }) && inverseDelta.every(function (num) {\n      return !num;\n    })) {\n      return;\n    }\n    var drag = Draggable.drag(moveable, setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"));\n    var transform = drag.transform;\n    var nextWidth = startWidth + distWidth;\n    var nextHeight = startHeight + distHeight;\n    var params = fillParams(moveable, e, __assign({\n      width: nextWidth,\n      height: nextHeight,\n      offsetWidth: Math.round(boundingWidth),\n      offsetHeight: Math.round(boundingHeight),\n      startRatio: ratio,\n      boundingWidth: boundingWidth,\n      boundingHeight: boundingHeight,\n      direction: direction,\n      dist: [distWidth, distHeight],\n      delta: delta,\n      isPinch: !!isPinch,\n      drag: drag\n    }, fillAfterTransform({\n      style: {\n        width: \"\".concat(nextWidth, \"px\"),\n        height: \"\".concat(nextHeight, \"px\")\n      },\n      transform: transform\n    }, drag, e)));\n    !parentEvent && triggerEvent(moveable, \"onResize\", params);\n    return params;\n  },\n  dragControlAfter: function (moveable, e) {\n    var datas = e.datas;\n    var isResize = datas.isResize,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      prevWidth = datas.prevWidth,\n      prevHeight = datas.prevHeight;\n    if (!isResize || moveable.props.checkResizableError === false) {\n      return;\n    }\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height;\n    var errorWidth = width - (startOffsetWidth + prevWidth);\n    var errorHeight = height - (startOffsetHeight + prevHeight);\n    var isErrorWidth = Math.abs(errorWidth) > 3;\n    var isErrorHeight = Math.abs(errorHeight) > 3;\n    if (isErrorWidth) {\n      datas.startWidth += errorWidth;\n      datas.startOffsetWidth += errorWidth;\n      datas.prevWidth += errorWidth;\n    }\n    if (isErrorHeight) {\n      datas.startHeight += errorHeight;\n      datas.startOffsetHeight += errorHeight;\n      datas.prevHeight += errorHeight;\n    }\n    if (isErrorWidth || isErrorHeight) {\n      return this.dragControl(moveable, e);\n    }\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      parentEvent = e.parentEvent;\n    if (!datas.isResize) {\n      return;\n    }\n    datas.isResize = false;\n    var params = fillEndParams(moveable, e, {});\n    !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: directionCondition$1,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, __assign(__assign({}, e), {\n      isGroup: true\n    }));\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    function setDist(child, ev) {\n      var fixedDirection = datas.fixedDirection;\n      var fixedPosition = datas.fixedPosition;\n      var startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n      var pos = getPosByDirection(startPositions, fixedDirection);\n      var _a = calculate(createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3), [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1], 3),\n        originalX = _a[0],\n        originalY = _a[1];\n      ev.datas.originalX = originalX;\n      ev.datas.originalY = originalY;\n      return ev;\n    }\n    var parentStartOffsetWidth = datas.startOffsetWidth,\n      parentStartOffsetHeight = datas.startOffsetHeight;\n    function updateGroupMin() {\n      var originalMinSize = datas.minSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMinSize = _a.minSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMinWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n        var parentMinHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n        originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n        originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n      });\n    }\n    function updateGroupMax() {\n      var originalMaxSize = datas.maxSize;\n      originalEvents.forEach(function (ev) {\n        var _a = ev.datas,\n          childMaxSize = _a.maxSize,\n          childStartOffsetWidth = _a.startOffsetWidth,\n          childStartOffsetHeight = _a.startOffsetHeight;\n        var parentMaxWidth = parentStartOffsetWidth * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n        var parentMaxHeight = parentStartOffsetHeight * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n        originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n        originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n      });\n    }\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return setDist(child, ev);\n    });\n    updateGroupMin();\n    updateGroupMax();\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        setDist(ev.moveable, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events.map(function (ev) {\n        return __assign(__assign({}, ev), {\n          setMin: function (minSize) {\n            ev.setMin(minSize);\n            updateGroupMin();\n          },\n          setMax: function (maxSize) {\n            ev.setMax(maxSize);\n            updateGroupMax();\n          }\n        });\n      }),\n      setFixedDirection: setFixedDirection,\n      setMin: function (minSize) {\n        params.setMin(minSize);\n        updateGroupMin();\n      },\n      setMax: function (maxSize) {\n        params.setMax(maxSize);\n        updateGroupMax();\n      }\n    });\n    var result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n    datas.isResize = result !== false;\n    return datas.isResize ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    var props = getProps(moveable.props, \"resizable\");\n    catchEvent(moveable, \"onBeforeResize\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, __assign(__assign({}, e), {\n      isGroup: true\n    }));\n    if (!params) {\n      return;\n    }\n    var boundingWidth = params.boundingWidth,\n      boundingHeight = params.boundingHeight,\n      dist = params.dist;\n    var keepRatio = props.keepRatio;\n    var parentScale = [boundingWidth / (boundingWidth - dist[0]), boundingHeight / (boundingHeight - dist[1])];\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * parentScale[0], ev.datas.originalY * parentScale[1], 1], 3),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: parentScale,\n        dragClient: plus(fixedPosition, [clientX, clientY]),\n        parentKeepRatio: keepRatio\n      });\n    });\n    var nextParams = __assign({\n      targets: props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onResizeGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isResize) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Resizable#request\n   * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * // Use Relative Value\n   * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n   *\n   * // Use Absolute Value\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"resizable\");\n   *\n   * // request\n   * // Use Relative Value\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   *\n   * // Use Absolute Value\n   * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n   * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n   * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    var rect = moveable.getRect();\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        var _a;\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1],\n          parentIsWidth: (_a = e === null || e === void 0 ? void 0 : e.horizontal) !== null && _a !== void 0 ? _a : true\n        };\n      },\n      request: function (e) {\n        if (\"offsetWidth\" in e) {\n          distWidth = e.offsetWidth - rect.offsetWidth;\n        } else if (\"deltaWidth\" in e) {\n          distWidth += e.deltaWidth;\n        }\n        if (\"offsetHeight\" in e) {\n          distHeight = e.offsetHeight - rect.offsetHeight;\n        } else if (\"deltaHeight\" in e) {\n          distHeight += e.deltaHeight;\n        }\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  },\n  unset: function (moveable) {\n    moveable.state.gestos.resizable = null;\n  }\n};\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(moveable, datas, clientX, clientY, rect) {\n  var groupable = moveable.props.groupable;\n  var state = moveable.state;\n  var n = state.is3d ? 4 : 3;\n  var origin = datas.origin;\n  var nextOrigin = calculatePosition(moveable.state.rootMatrix,\n  // TO-DO #710\n  minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]), n);\n  var startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n  datas.startAbsoluteOrigin = startAbsoluteOrigin;\n  datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n  datas.defaultDeg = datas.prevDeg;\n  datas.prevSnapDeg = 0;\n  datas.loop = 0;\n  datas.startDist = getDist$1(startAbsoluteOrigin, [clientX, clientY]);\n}\nfunction getAbsoluteDist(deg, direction, datas) {\n  var defaultDeg = datas.defaultDeg,\n    prevDeg = datas.prevDeg;\n  var normalizedPrevDeg = prevDeg % 360;\n  var loop = Math.floor(prevDeg / 360);\n  if (normalizedPrevDeg < 0) {\n    normalizedPrevDeg += 360;\n  }\n  if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n    // 360 => 0\n    ++loop;\n  } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n    // 0 => 360\n    --loop;\n  }\n  var dist = direction * (loop * 360 + deg - defaultDeg);\n  datas.prevDeg = defaultDeg + dist;\n  return dist;\n}\nfunction getAbsoluteDistByClient(clientX, clientY, direction, datas) {\n  return getAbsoluteDist(getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180, direction, datas);\n}\nfunction getRotateInfo(moveable, moveableRect, datas, dist, startValue, checkSnap) {\n  var _a = moveable.props.throttleRotate,\n    throttleRotate = _a === void 0 ? 0 : _a;\n  var prevSnapDeg = datas.prevSnapDeg;\n  var snapRotation = 0;\n  var isSnap = false;\n  if (checkSnap) {\n    var result = checkSnapRotate(moveable, moveableRect, dist);\n    isSnap = result.isSnap;\n    snapRotation = startValue + result.rotation;\n  }\n  if (!isSnap) {\n    snapRotation = throttle(startValue + dist, throttleRotate);\n  }\n  var snapDeg = snapRotation - startValue;\n  datas.prevSnapDeg = snapDeg;\n  return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n}\nfunction getRotationPositions(rotationPosition, _a, direction) {\n  var pos1 = _a[0],\n    pos2 = _a[1],\n    pos3 = _a[2],\n    pos4 = _a[3];\n  if (rotationPosition === \"none\") {\n    return [];\n  }\n  if (isArray(rotationPosition)) {\n    return rotationPosition.map(function (child) {\n      return getRotationPositions(child, [pos1, pos2, pos3, pos4], direction)[0];\n    });\n  }\n  var _b = (rotationPosition || \"top\").split(\"-\"),\n    dir1 = _b[0],\n    dir2 = _b[1];\n  var radPoses = [pos1, pos2];\n  if (dir1 === \"left\") {\n    radPoses = [pos3, pos1];\n  } else if (dir1 === \"right\") {\n    radPoses = [pos2, pos4];\n  } else if (dir1 === \"bottom\") {\n    radPoses = [pos4, pos3];\n  }\n  var pos = [(radPoses[0][0] + radPoses[1][0]) / 2, (radPoses[0][1] + radPoses[1][1]) / 2];\n  var rad = getRotationRad(radPoses, direction);\n  if (dir2) {\n    var isStart = dir2 === \"top\" || dir2 === \"left\";\n    var isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n    pos = radPoses[isStart && !isReverse || !isStart && isReverse ? 0 : 1];\n  }\n  return [[pos, rad]];\n}\nfunction dragControlCondition(moveable, e) {\n  if (e.isRequest) {\n    return e.requestAble === \"rotatable\";\n  }\n  var target = e.inputEvent.target;\n  if (hasClass(target, prefix(\"rotation-control\")) || hasClass(target, prefix(\"around-control\")) || hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\"))) {\n    return true;\n  }\n  var rotationTarget = moveable.props.rotationTarget;\n  if (rotationTarget) {\n    return getRefTargets(rotationTarget, true).some(function (element) {\n      if (!element) {\n        return false;\n      }\n      return target === element || target.contains(element);\n    });\n  }\n  return false;\n}\nvar directionCSS = DIRECTIONS.map(function (dir) {\n  var top = \"\";\n  var left = \"\";\n  var originX = \"center\";\n  var originY = \"center\";\n  if (dir.indexOf(\"n\") > -1) {\n    top = \"top: -20px;\";\n    originY = \"bottom\";\n  }\n  if (dir.indexOf(\"s\") > -1) {\n    top = \"top: 0px;\";\n    originY = \"top\";\n  }\n  if (dir.indexOf(\"w\") > -1) {\n    left = \"left: -20px;\";\n    originX = \"right\";\n  }\n  if (dir.indexOf(\"e\") > -1) {\n    left = \"left: 0px;\";\n    originX = \"left\";\n  }\n  return \".around-control[data-direction*=\\\"\".concat(dir, \"\\\"] {\\n        \").concat(left).concat(top, \"\\n        transform-origin: \").concat(originX, \" \").concat(originY, \";\\n    }\");\n}).join(\"\\n\");\nvar css = \".rotation {\\n    position: absolute;\\n    height: 40px;\\n    width: 1px;\\n    transform-origin: 50% 100%;\\n    height: calc(40px * var(--zoom));\\n    top: auto;\\n    left: 0;\\n    bottom: 100%;\\n    will-change: transform;\\n}\\n.rotation .rotation-line {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    transform-origin: 50% 50%;\\n}\\n.rotation .rotation-control {\\n    border-color: #4af;\\n    border-color: var(--moveable-color);\\n    background:#fff;\\n    cursor: alias;\\n}\\n:global .view-rotation-dragging, .rotatable.direction.control {\\n    cursor: alias;\\n}\\n.around-control {\\n    position: absolute;\\n    will-change: transform;\\n    width: 20px;\\n    height: 20px;\\n    left: -10px;\\n    top: -10px;\\n    box-sizing: border-box;\\n    background: transparent;\\n    z-index: 8;\\n    cursor: alias;\\n    transform-origin: center center;\\n}\\n.rotatable.direction.control.move {\\n    cursor: move;\\n}\\n\".concat(directionCSS, \"\\n\");\nvar Rotatable = {\n  name: \"rotatable\",\n  canPinch: true,\n  props: {\n    rotatable: Boolean,\n    rotationPosition: String,\n    throttleRotate: Number,\n    renderDirections: Object,\n    rotationTarget: Object,\n    rotateAroundControls: Boolean,\n    edge: Boolean,\n    resolveAblesWithRotatable: Object\n  },\n  events: {\n    onRotateStart: \"rotateStart\",\n    onBeforeRotate: \"beforeRotate\",\n    onRotate: \"rotate\",\n    onRotateEnd: \"rotateEnd\",\n    onRotateGroupStart: \"rotateGroupStart\",\n    onBeforeRotateGroup: \"beforeRotateGroup\",\n    onRotateGroup: \"rotateGroup\",\n    onRotateGroupEnd: \"rotateGroupEnd\"\n  },\n  css: [css],\n  viewClassName: function (moveable) {\n    if (!moveable.isDragging(\"rotatable\")) {\n      return \"\";\n    }\n    return prefix(\"view-rotation-dragging\");\n  },\n  render: function (moveable, React) {\n    var _a = getProps(moveable.props, \"rotatable\"),\n      rotatable = _a.rotatable,\n      rotationPosition = _a.rotationPosition,\n      zoom = _a.zoom,\n      renderDirections = _a.renderDirections,\n      rotateAroundControls = _a.rotateAroundControls,\n      resolveAblesWithRotatable = _a.resolveAblesWithRotatable;\n    var _b = moveable.getState(),\n      renderPoses = _b.renderPoses,\n      direction = _b.direction;\n    if (!rotatable) {\n      return null;\n    }\n    var positions = getRotationPositions(rotationPosition, renderPoses, direction);\n    var jsxs = [];\n    positions.forEach(function (_a, i) {\n      var pos = _a[0],\n        rad = _a[1];\n      jsxs.push(React.createElement(\"div\", {\n        key: \"rotation\".concat(i),\n        className: prefix(\"rotation\"),\n        style: {\n          // tslint:disable-next-line: max-line-length\n          transform: \"translate(-50%) translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rad, \"rad)\")\n        }\n      }, React.createElement(\"div\", {\n        className: prefix(\"line rotation-line\"),\n        style: {\n          transform: \"scaleX(\".concat(zoom, \")\")\n        }\n      }), React.createElement(\"div\", {\n        className: prefix(\"control rotation-control\"),\n        style: {\n          transform: \"translate(0.5px) scale(\".concat(zoom, \")\")\n        }\n      })));\n    });\n    if (renderDirections) {\n      var ables = getKeys(resolveAblesWithRotatable || {});\n      var resolveMap_1 = {};\n      ables.forEach(function (name) {\n        resolveAblesWithRotatable[name].forEach(function (direction) {\n          resolveMap_1[direction] = name;\n        });\n      });\n      var directionControlInfos = [];\n      if (isArray(renderDirections)) {\n        directionControlInfos = renderDirections.map(function (dir) {\n          var able = resolveMap_1[dir];\n          return {\n            data: able ? {\n              resolve: able\n            } : {},\n            classNames: able ? [\"move\"] : [],\n            dir: dir\n          };\n        });\n      }\n      jsxs.push.apply(jsxs, renderDirectionControlsByInfos(moveable, \"rotatable\", directionControlInfos, React));\n    }\n    if (rotateAroundControls) {\n      jsxs.push.apply(jsxs, renderAroundControls(moveable, React));\n    }\n    return jsxs;\n  },\n  dragControlCondition: dragControlCondition,\n  dragControlStart: function (moveable, e) {\n    var _a;\n    var _b;\n    var datas = e.datas,\n      clientX = e.clientX,\n      clientY = e.clientY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    var state = moveable.state;\n    var target = state.target,\n      left = state.left,\n      top = state.top,\n      direction = state.direction,\n      beforeDirection = state.beforeDirection,\n      targetTransform = state.targetTransform,\n      moveableClientRect = state.moveableClientRect,\n      offsetMatrix = state.offsetMatrix,\n      targetMatrix = state.targetMatrix,\n      allMatrix = state.allMatrix,\n      width = state.width,\n      height = state.height;\n    if (!isRequest && !target) {\n      return false;\n    }\n    var rect = moveable.getRect();\n    datas.rect = rect;\n    datas.transform = targetTransform;\n    datas.left = left;\n    datas.top = top;\n    var setFixedPosition = function (fixedPosition) {\n      var _a = moveable.state,\n        allMatrix = _a.allMatrix,\n        is3d = _a.is3d,\n        width = _a.width,\n        height = _a.height;\n      var fixedDirection = getDirectionByPos(fixedPosition, width, height);\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = calculatePosition(allMatrix, fixedPosition, is3d ? 4 : 3);\n      if (resizeStart) {\n        resizeStart.setFixedPosition(fixedPosition);\n      }\n    };\n    var setFixedDirection = function (fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getDirectionOffset(moveable, fixedDirection);\n      if (resizeStart) {\n        resizeStart.setFixedDirection(fixedDirection);\n      }\n    };\n    var startClientX = clientX;\n    var startClientY = clientY;\n    if (isRequest || isPinch || parentFlag) {\n      var externalRotate = parentRotate || 0;\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin,\n        prevDeg: externalRotate,\n        defaultDeg: externalRotate,\n        prevSnapDeg: 0,\n        startDist: 0\n      };\n      datas.afterInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin\n      });\n      datas.absoluteInfo = __assign(__assign({}, datas.beforeInfo), {\n        origin: rect.origin,\n        startValue: externalRotate\n      });\n    } else {\n      var inputTarget = (_b = e.inputEvent) === null || _b === void 0 ? void 0 : _b.target;\n      if (inputTarget) {\n        var regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n        var controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n        if (controlDirection) {\n          datas.isControl = true;\n          datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n          datas.controlDirection = controlDirection;\n          var resolve = inputTarget.getAttribute(\"data-resolve\");\n          if (resolve) {\n            datas.resolveAble = resolve;\n          }\n          var clientPoses = calculateMoveableClientPositions(state.rootMatrix, state.renderPoses, moveableClientRect);\n          _a = getPosByDirection(clientPoses, controlDirection), startClientX = _a[0], startClientY = _a[1];\n        }\n      }\n      datas.beforeInfo = {\n        origin: rect.beforeOrigin\n      };\n      datas.afterInfo = {\n        origin: rect.origin\n      };\n      datas.absoluteInfo = {\n        origin: rect.origin,\n        startValue: rect.rotation\n      };\n      var originalFixedPosition_1 = setFixedPosition;\n      setFixedPosition = function (fixedPosition) {\n        var n = state.is3d ? 4 : 3;\n        var _a = plus(getOrigin(targetMatrix, n), fixedPosition),\n          originX = _a[0],\n          originY = _a[1];\n        var fixedBeforeOrigin = calculate(offsetMatrix, convertPositionMatrix([originX, originY], n));\n        var fixedAfterOrigin = calculate(allMatrix, convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n));\n        originalFixedPosition_1(fixedPosition);\n        var posDelta = state.posDelta;\n        datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n        datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n        datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n        setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n        setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n        setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n      };\n      setFixedDirection = function (fixedDirection) {\n        var fixedPosition = getPosByDirection([[0, 0], [width, 0], [0, height], [width, height]], fixedDirection);\n        setFixedPosition(fixedPosition);\n      };\n    }\n    datas.startClientX = startClientX;\n    datas.startClientY = startClientY;\n    datas.direction = direction;\n    datas.beforeDirection = beforeDirection;\n    datas.startValue = 0;\n    datas.datas = {};\n    setDefaultTransformIndex(e, \"rotate\");\n    var dragStart = false;\n    var resizeStart = false;\n    if (datas.isControl && datas.resolveAble) {\n      var resolveAble = datas.resolveAble;\n      if (resolveAble === \"resizable\") {\n        resizeStart = Resizable.dragControlStart(moveable, __assign(__assign({}, new CustomGesto(\"resizable\").dragStart([0, 0], e)), {\n          parentPosition: datas.controlPosition,\n          parentFixedPosition: datas.fixedPosition\n        }));\n      }\n    }\n    if (!resizeStart) {\n      dragStart = Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e));\n    }\n    setFixedPosition(state.transformOrigin);\n    var params = fillParams(moveable, e, __assign(__assign({\n      set: function (rotatation) {\n        datas.startValue = rotatation * Math.PI / 180;\n      },\n      setFixedDirection: setFixedDirection,\n      setFixedPosition: setFixedPosition\n    }, fillTransformStartEvent(e)), {\n      dragStart: dragStart,\n      resizeStart: resizeStart\n    }));\n    var result = triggerEvent(moveable, \"onRotateStart\", params);\n    datas.isRotate = result !== false;\n    state.snapRenderInfo = {\n      request: e.isRequest\n    };\n    return datas.isRotate ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    var _a, _b, _c;\n    var datas = e.datas,\n      clientDistX = e.clientDistX,\n      clientDistY = e.clientDistY,\n      parentRotate = e.parentRotate,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      groupDelta = e.groupDelta;\n    var beforeDirection = datas.beforeDirection,\n      beforeInfo = datas.beforeInfo,\n      afterInfo = datas.afterInfo,\n      absoluteInfo = datas.absoluteInfo,\n      isRotate = datas.isRotate,\n      startValue = datas.startValue,\n      rect = datas.rect,\n      startClientX = datas.startClientX,\n      startClientY = datas.startClientY;\n    if (!isRotate) {\n      return;\n    }\n    resolveTransformEvent(e, \"rotate\");\n    var targetDirection = getTransformDirection(e);\n    var direction = beforeDirection * targetDirection;\n    var parentMoveable = moveable.props.parentMoveable;\n    var beforeDelta = 0;\n    var beforeDist;\n    var beforeRotation;\n    var delta = 0;\n    var dist;\n    var rotation;\n    var absoluteDelta = 0;\n    var absoluteDist;\n    var absoluteRotation;\n    var startRotation = 180 / Math.PI * startValue;\n    var absoluteStartRotation = absoluteInfo.startValue;\n    var isSnap = false;\n    var nextClientX = startClientX + clientDistX;\n    var nextClientY = startClientY + clientDistY;\n    if (!parentFlag && \"parentDist\" in e) {\n      var parentDist = e.parentDist;\n      beforeDist = parentDist;\n      dist = parentDist;\n      absoluteDist = parentDist;\n    } else if (isPinch || parentFlag) {\n      beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n      dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n      absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n    } else {\n      beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n      dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n      absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n      isSnap = true;\n    }\n    beforeRotation = startRotation + beforeDist;\n    rotation = startRotation + dist;\n    absoluteRotation = absoluteStartRotation + absoluteDist;\n    triggerEvent(moveable, \"onBeforeRotate\", fillParams(moveable, e, {\n      beforeRotation: beforeRotation,\n      rotation: rotation,\n      absoluteRotation: absoluteRotation,\n      setRotation: function (nextRotation) {\n        dist = nextRotation - startRotation;\n        beforeDist = dist;\n        absoluteDist = dist;\n      }\n    }, true));\n    _a = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap), beforeDelta = _a[0], beforeDist = _a[1], beforeRotation = _a[2];\n    _b = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap), delta = _b[0], dist = _b[1], rotation = _b[2];\n    _c = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap), absoluteDelta = _c[0], absoluteDist = _c[1], absoluteRotation = _c[2];\n    if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n      return;\n    }\n    var nextTransform = convertTransformFormat(datas, \"rotate(\".concat(rotation, \"deg)\"), \"rotate(\".concat(dist, \"deg)\"));\n    var inverseDist = getRotateDist(moveable, dist, datas);\n    var inverseDelta = minus(plus(groupDelta || [0, 0], inverseDist), datas.prevInverseDist || [0, 0]);\n    datas.prevInverseDist = inverseDist;\n    datas.requestValue = null;\n    var dragEvent = fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e);\n    var transformEvent = dragEvent;\n    var parentDistance = getDist$1([nextClientX, nextClientY], absoluteInfo.startAbsoluteOrigin) - absoluteInfo.startDist;\n    var resize = undefined;\n    if (datas.resolveAble === \"resizable\") {\n      var resizeEvent = Resizable.dragControl(moveable, __assign(__assign({}, setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\")), {\n        resolveMatrix: true,\n        parentDistance: parentDistance\n      }));\n      if (resizeEvent) {\n        resize = resizeEvent;\n        transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n      }\n    }\n    var params = fillParams(moveable, e, __assign(__assign({\n      delta: delta,\n      dist: dist,\n      rotate: rotation,\n      rotation: rotation,\n      beforeDist: beforeDist,\n      beforeDelta: beforeDelta,\n      beforeRotate: beforeRotation,\n      beforeRotation: beforeRotation,\n      absoluteDist: absoluteDist,\n      absoluteDelta: absoluteDelta,\n      absoluteRotate: absoluteRotation,\n      absoluteRotation: absoluteRotation,\n      isPinch: !!isPinch,\n      resize: resize\n    }, dragEvent), transformEvent));\n    triggerEvent(moveable, \"onRotate\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    datas.isRotate = false;\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onRotateEnd\", params);\n    return params;\n  },\n  dragGroupControlCondition: dragControlCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var _a = moveable.state,\n      parentLeft = _a.left,\n      parentTop = _a.top,\n      parentBeforeOrigin = _a.beforeOrigin;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    params.set(datas.beforeDirection * moveable.rotation);\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      var _a = child.state,\n        left = _a.left,\n        top = _a.top,\n        beforeOrigin = _a.beforeOrigin;\n      var childClient = plus(minus([left, top], [parentLeft, parentTop]), minus(beforeOrigin, parentBeforeOrigin));\n      ev.datas.startGroupClient = childClient;\n      ev.datas.groupClient = childClient;\n      return __assign(__assign({}, ev), {\n        parentRotate: 0\n      });\n    });\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events\n    });\n    var result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n    datas.isRotate = result !== false;\n    return datas.isRotate ? params : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeRotate\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var direction = datas.beforeDirection;\n    var parentRotate = params.beforeDist;\n    var rad = parentRotate / 180 * Math.PI;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var startGroupClient = ev.datas.startGroupClient;\n      var _a = ev.datas.groupClient,\n        prevClientX = _a[0],\n        prevClientY = _a[1];\n      var _b = rotate(startGroupClient, rad * direction),\n        clientX = _b[0],\n        clientY = _b[1];\n      var delta = [clientX - prevClientX, clientY - prevClientY];\n      ev.datas.groupClient = [clientX, clientY];\n      return __assign(__assign({}, ev), {\n        parentRotate: parentRotate,\n        groupDelta: delta\n      });\n    });\n    moveable.rotation = direction * params.beforeRotation;\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events,\n      set: function (rotation) {\n        moveable.rotation = rotation;\n      },\n      setGroupRotation: function (rotation) {\n        moveable.rotation = rotation;\n      }\n    }, params);\n    triggerEvent(moveable, \"onRotateGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isRotate) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Rotatable#request\n   * @param {object} [e] - the Resizable's request parameter\n   * @param {number} [e.deltaRotate=0] -  delta number of rotation\n   * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n   *\n   * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"rotatable\");\n   *\n   * // request\n   * requester.request({ deltaRotate: 10 });\n   * requester.request({ deltaRotate: 10 });\n   * requester.request({ deltaRotate: 10 });\n   *\n   * requester.request({ rotate: 10 });\n   * requester.request({ rotate: 20 });\n   * requester.request({ rotate: 30 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function (moveable) {\n    var datas = {};\n    var distRotate = 0;\n    var startRotation = moveable.getRotation();\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaRotate\" in e) {\n          distRotate += e.deltaRotate;\n        } else if (\"rotate\" in e) {\n          distRotate = e.rotate - startRotation;\n        }\n        return {\n          datas: datas,\n          parentDist: distRotate\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n\nvar directionCondition = getDirectionCondition(\"scalable\");\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\n\nvar Scalable = {\n  name: \"scalable\",\n  ableGroup: \"size\",\n  canPinch: true,\n  props: {\n    scalable: Boolean,\n    throttleScale: Number,\n    renderDirections: String,\n    keepRatio: Boolean,\n    edge: Boolean\n  },\n  events: {\n    onScaleStart: \"scaleStart\",\n    onBeforeScale: \"beforeScale\",\n    onScale: \"scale\",\n    onScaleEnd: \"scaleEnd\",\n    onScaleGroupStart: \"scaleGroupStart\",\n    onBeforeScaleGroup: \"beforeScaleGroup\",\n    onScaleGroup: \"scaleGroup\",\n    onScaleGroupEnd: \"scaleGroupEnd\"\n  },\n  render: getRenderDirections(\"scalable\"),\n  dragControlCondition: directionCondition,\n  viewClassName: getDirectionViewClassName(\"scalable\"),\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      inputEvent = e.inputEvent,\n      parentDirection = e.parentDirection;\n    var direction = getTotalDirection(parentDirection, isPinch, inputEvent, datas);\n    var _a = moveable.state,\n      width = _a.width,\n      height = _a.height,\n      targetTransform = _a.targetTransform,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos4 = _a.pos4;\n    if (!direction || !target) {\n      return false;\n    }\n    if (!isPinch) {\n      setDragStart(moveable, e);\n    }\n    datas.datas = {};\n    datas.transform = targetTransform;\n    datas.prevDist = [1, 1];\n    datas.direction = direction;\n    datas.startOffsetWidth = width;\n    datas.startOffsetHeight = height;\n    datas.startValue = [1, 1];\n    var scaleWidth = getDist$1(pos1, pos2);\n    var scaleHeight = getDist$1(pos2, pos4);\n    var isWidth = !direction[0] && !direction[1] || direction[0] || !direction[1];\n    datas.scaleWidth = scaleWidth;\n    datas.scaleHeight = scaleHeight;\n    datas.scaleXRatio = scaleWidth / width;\n    datas.scaleYRatio = scaleHeight / height;\n    setDefaultTransformIndex(e, \"scale\");\n    datas.isWidth = isWidth;\n    function setRatio(ratio) {\n      datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n    }\n    datas.startPositions = getAbsolutePosesByState(moveable.state);\n    function setFixedDirection(fixedDirection) {\n      datas.fixedDirection = fixedDirection;\n      datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n    }\n    datas.setFixedDirection = setFixedDirection;\n    setRatio(getDist$1(pos1, pos2) / getDist$1(pos2, pos4));\n    setFixedDirection([-direction[0], -direction[1]]);\n    var params = fillParams(moveable, e, __assign(__assign({\n      direction: direction,\n      set: function (scale) {\n        datas.startValue = scale;\n      },\n      setRatio: setRatio,\n      setFixedDirection: setFixedDirection\n    }, fillTransformStartEvent(e)), {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    }));\n    var result = triggerEvent(moveable, \"onScaleStart\", params);\n    datas.startFixedDirection = datas.fixedDirection;\n    if (result !== false) {\n      datas.isScale = true;\n      moveable.state.snapRenderInfo = {\n        request: e.isRequest,\n        direction: direction\n      };\n    }\n    return datas.isScale ? params : false;\n  },\n  dragControl: function (moveable, e) {\n    resolveTransformEvent(e, \"scale\");\n    var datas = e.datas,\n      parentKeepRatio = e.parentKeepRatio,\n      parentFlag = e.parentFlag,\n      isPinch = e.isPinch,\n      dragClient = e.dragClient,\n      isRequest = e.isRequest;\n    var prevDist = datas.prevDist,\n      direction = datas.direction,\n      startOffsetWidth = datas.startOffsetWidth,\n      startOffsetHeight = datas.startOffsetHeight,\n      isScale = datas.isScale,\n      startValue = datas.startValue,\n      isWidth = datas.isWidth,\n      ratio = datas.ratio;\n    if (!isScale) {\n      return false;\n    }\n    var props = moveable.props;\n    var throttleScale = props.throttleScale,\n      parentMoveable = props.parentMoveable;\n    var sizeDirection = direction;\n    if (!direction[0] && !direction[1]) {\n      sizeDirection = [1, 1];\n    }\n    var keepRatio = ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio) || false;\n    var state = moveable.state;\n    function getNextScale() {\n      var _a = getOffsetSizeDist(sizeDirection, keepRatio, datas, e),\n        distWidth = _a.distWidth,\n        distHeight = _a.distHeight;\n      var scaleX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n      var scaleY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n      scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n      scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n      if (scaleX === 0) {\n        scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n      }\n      if (scaleY === 0) {\n        scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n      }\n      return [scaleX, scaleY];\n    }\n    var scale = getNextScale();\n    if (!isPinch && moveable.props.groupable) {\n      var snapRenderInfo = state.snapRenderInfo || {};\n      var stateDirection = snapRenderInfo.direction;\n      if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n        state.snapRenderInfo = {\n          direction: direction,\n          request: e.isRequest\n        };\n      }\n    }\n    triggerEvent(moveable, \"onBeforeScale\", fillParams(moveable, e, {\n      scale: scale,\n      setFixedDirection: function (nextFixedDirection) {\n        datas.setFixedDirection(nextFixedDirection);\n        scale = getNextScale();\n        return scale;\n      },\n      startFixedDirection: datas.startFixedDirection,\n      setScale: function (nextScale) {\n        scale = nextScale;\n      }\n    }, true));\n    var dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n    var fixedPosition = dragClient;\n    var snapDist = [0, 0];\n    if (!dragClient) {\n      if (!parentFlag && isPinch) {\n        fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n      } else {\n        fixedPosition = datas.fixedPosition;\n      }\n    }\n    if (!isPinch) {\n      snapDist = checkSnapScale(moveable, dist, direction, isRequest, datas);\n    }\n    if (keepRatio) {\n      if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n        if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n          snapDist[1] = 0;\n        } else {\n          snapDist[0] = 0;\n        }\n      }\n      var isNoSnap = !snapDist[0] && !snapDist[1];\n      if (isNoSnap) {\n        if (isWidth) {\n          dist[0] = throttle(dist[0] * startValue[0], throttleScale) / startValue[0];\n        } else {\n          dist[1] = throttle(dist[1] * startValue[1], throttleScale) / startValue[1];\n        }\n      }\n      if (sizeDirection[0] && !sizeDirection[1] || snapDist[0] && !snapDist[1] || isNoSnap && isWidth) {\n        dist[0] += snapDist[0];\n        var snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n        dist[1] = snapHeight / startOffsetHeight / startValue[1];\n      } else if (!sizeDirection[0] && sizeDirection[1] || !snapDist[0] && snapDist[1] || isNoSnap && !isWidth) {\n        dist[1] += snapDist[1];\n        var snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n        dist[0] = snapWidth / startOffsetWidth / startValue[0];\n      }\n    } else {\n      dist[0] += snapDist[0];\n      dist[1] += snapDist[1];\n      if (!snapDist[0]) {\n        dist[0] = throttle(dist[0] * startValue[0], throttleScale) / startValue[0];\n      }\n      if (!snapDist[1]) {\n        dist[1] = throttle(dist[1] * startValue[1], throttleScale) / startValue[1];\n      }\n    }\n    if (dist[0] === 0) {\n      dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n    }\n    if (dist[1] === 0) {\n      dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n    }\n    var delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n    scale = multiply2(dist, startValue);\n    var inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n    var inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n    datas.prevDist = dist;\n    datas.prevInverseDist = inverseDist;\n    if (scale[0] === prevDist[0] && scale[1] === prevDist[1] && inverseDelta.every(function (num) {\n      return !num;\n    }) && !parentMoveable) {\n      return false;\n    }\n    var nextTransform = convertTransformFormat(datas, \"scale(\".concat(scale.join(\", \"), \")\"), \"scale(\".concat(dist.join(\", \"), \")\"));\n    var params = fillParams(moveable, e, __assign({\n      offsetWidth: startOffsetWidth,\n      offsetHeight: startOffsetHeight,\n      direction: direction,\n      scale: scale,\n      dist: dist,\n      delta: delta,\n      isPinch: !!isPinch\n    }, fillTransformEvent(moveable, nextTransform, inverseDelta, isPinch, e)));\n    triggerEvent(moveable, \"onScale\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isScale) {\n      return false;\n    }\n    datas.isScale = false;\n    var scaleEndParam = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n    return scaleEndParam;\n  },\n  dragGroupControlCondition: directionCondition,\n  dragGroupControlStart: function (moveable, e) {\n    var datas = e.datas;\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    var originalEvents = fillChildEvents(moveable, \"resizable\", e);\n    function setDist(child, ev) {\n      var fixedDirection = datas.fixedDirection;\n      var fixedPosition = datas.fixedPosition;\n      var startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n      var pos = getPosByDirection(startPositions, fixedDirection);\n      var _a = calculate(createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3), [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1], 3),\n        originalX = _a[0],\n        originalY = _a[1];\n      ev.datas.originalX = originalX;\n      ev.datas.originalY = originalY;\n      return ev;\n    }\n    datas.moveableScale = moveable.scale;\n    var events = triggerChildAbles(moveable, this, \"dragControlStart\", e, function (child, ev) {\n      return setDist(child, ev);\n    });\n    var setFixedDirection = function (fixedDirection) {\n      params.setFixedDirection(fixedDirection);\n      events.forEach(function (ev, i) {\n        ev.setFixedDirection(fixedDirection);\n        setDist(ev.moveable, originalEvents[i]);\n      });\n    };\n    datas.setFixedDirection = setFixedDirection;\n    var nextParams = __assign(__assign({}, params), {\n      targets: moveable.props.targets,\n      events: events,\n      setFixedDirection: setFixedDirection\n    });\n    var result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n    datas.isScale = result !== false;\n    return datas.isScale ? nextParams : false;\n  },\n  dragGroupControl: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    catchEvent(moveable, \"onBeforeScale\", function (parentEvent) {\n      triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams(moveable, e, __assign(__assign({}, parentEvent), {\n        targets: moveable.props.targets\n      }), true));\n    });\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return;\n    }\n    var moveableScale = datas.moveableScale;\n    moveable.scale = [params.scale[0] * moveableScale[0], params.scale[1] * moveableScale[1]];\n    var keepRatio = moveable.props.keepRatio;\n    var dist = params.dist,\n      scale = params.scale;\n    var fixedPosition = datas.fixedPosition;\n    var events = triggerChildAbles(moveable, this, \"dragControl\", e, function (_, ev) {\n      var _a = calculate(createRotateMatrix(moveable.rotation / 180 * Math.PI, 3), [ev.datas.originalX * dist[0], ev.datas.originalY * dist[1], 1], 3),\n        clientX = _a[0],\n        clientY = _a[1];\n      return __assign(__assign({}, ev), {\n        parentDist: null,\n        parentScale: scale,\n        parentKeepRatio: keepRatio,\n        dragClient: plus(fixedPosition, [clientX, clientY])\n      });\n    });\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events\n    }, params);\n    triggerEvent(moveable, \"onScaleGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var isDrag = e.isDrag,\n      datas = e.datas;\n    if (!datas.isScale) {\n      return;\n    }\n    this.dragControlEnd(moveable, e);\n    var events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n    var nextParams = fillEndParams(moveable, e, {\n      targets: moveable.props.targets,\n      events: events\n    });\n    triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n    return isDrag;\n  },\n  /**\n   * @method Moveable.Scalable#request\n   * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n   * @return {Moveable.Requester} Moveable Requester\n   * @example\n    * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n   *\n   * // requestStart\n   * const requester = moveable.request(\"scalable\");\n   *\n   * // request\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n   *\n   * // requestEnd\n   * requester.requestEnd();\n   */\n  request: function () {\n    var datas = {};\n    var distWidth = 0;\n    var distHeight = 0;\n    return {\n      isControl: true,\n      requestStart: function (e) {\n        return {\n          datas: datas,\n          parentDirection: e.direction || [1, 1]\n        };\n      },\n      request: function (e) {\n        distWidth += e.deltaWidth;\n        distHeight += e.deltaHeight;\n        return {\n          datas: datas,\n          parentDist: [distWidth, distHeight],\n          parentKeepRatio: e.keepRatio\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n\nfunction getMiddleLinePos(pos1, pos2) {\n  return pos1.map(function (pos, i) {\n    return dot(pos, pos2[i], 1, 2);\n  });\n}\nfunction getTriangleRad(pos1, pos2, pos3) {\n  // pos1 Rad\n  var rad1 = getRad(pos1, pos2);\n  var rad2 = getRad(pos1, pos3);\n  var rad = rad2 - rad1;\n  return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\nfunction isValidPos(poses1, poses2) {\n  var rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n  var rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n  var pi = Math.PI;\n  if (rad1 >= pi && rad2 <= pi || rad1 <= pi && rad2 >= pi) {\n    return false;\n  }\n  return true;\n}\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\n\nvar Warpable = {\n  name: \"warpable\",\n  ableGroup: \"size\",\n  props: {\n    warpable: Boolean,\n    renderDirections: Array,\n    edge: Boolean\n  },\n  events: {\n    onWarpStart: \"warpStart\",\n    onWarp: \"warp\",\n    onWarpEnd: \"warpEnd\"\n  },\n  viewClassName: getDirectionViewClassName(\"warpable\"),\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      resizable = _a.resizable,\n      scalable = _a.scalable,\n      warpable = _a.warpable,\n      zoom = _a.zoom;\n    if (resizable || scalable || !warpable) {\n      return [];\n    }\n    var _b = moveable.state,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4;\n    var linePosFrom1 = getMiddleLinePos(pos1, pos2);\n    var linePosFrom2 = getMiddleLinePos(pos2, pos1);\n    var linePosFrom3 = getMiddleLinePos(pos1, pos3);\n    var linePosFrom4 = getMiddleLinePos(pos3, pos1);\n    var linePosTo1 = getMiddleLinePos(pos3, pos4);\n    var linePosTo2 = getMiddleLinePos(pos4, pos3);\n    var linePosTo3 = getMiddleLinePos(pos2, pos4);\n    var linePosTo4 = getMiddleLinePos(pos4, pos2);\n    return __spreadArray([React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine1\",\n      style: getLineStyle(linePosFrom1, linePosTo1, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine2\",\n      style: getLineStyle(linePosFrom2, linePosTo2, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine3\",\n      style: getLineStyle(linePosFrom3, linePosTo3, zoom)\n    }), React.createElement(\"div\", {\n      className: prefix(\"line\"),\n      key: \"middeLine4\",\n      style: getLineStyle(linePosFrom4, linePosTo4, zoom)\n    })], renderAllDirections(moveable, \"warpable\", React), true);\n  },\n  dragControlCondition: function (moveable, e) {\n    if (e.isRequest) {\n      return false;\n    }\n    var target = e.inputEvent.target;\n    return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas,\n      inputEvent = e.inputEvent;\n    var target = moveable.props.target;\n    var inputTarget = inputEvent.target;\n    var direction = getDirection(inputTarget, datas);\n    if (!direction || !target) {\n      return false;\n    }\n    var state = moveable.state;\n    var transformOrigin = state.transformOrigin,\n      is3d = state.is3d,\n      targetTransform = state.targetTransform,\n      targetMatrix = state.targetMatrix,\n      width = state.width,\n      height = state.height,\n      left = state.left,\n      top = state.top;\n    datas.datas = {};\n    datas.targetTransform = targetTransform;\n    datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n    datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n    datas.direction = direction;\n    datas.left = left;\n    datas.top = top;\n    datas.poses = [[0, 0], [width, 0], [0, height], [width, height]].map(function (p) {\n      return minus(p, transformOrigin);\n    });\n    datas.nextPoses = datas.poses.map(function (_a) {\n      var x = _a[0],\n        y = _a[1];\n      return calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4);\n    });\n    datas.startValue = createIdentityMatrix(4);\n    datas.prevMatrix = createIdentityMatrix(4);\n    datas.absolutePoses = getAbsolutePosesByState(state);\n    datas.posIndexes = getPosIndexesByDirection(direction);\n    setDragStart(moveable, e);\n    setDefaultTransformIndex(e, \"matrix3d\");\n    state.snapRenderInfo = {\n      request: e.isRequest,\n      direction: direction\n    };\n    var params = fillParams(moveable, e, __assign({\n      set: function (matrix) {\n        datas.startValue = matrix;\n      }\n    }, fillTransformStartEvent(e)));\n    var result = triggerEvent(moveable, \"onWarpStart\", params);\n    if (result !== false) {\n      datas.isWarp = true;\n    }\n    return datas.isWarp;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isRequest = e.isRequest;\n    var distX = e.distX,\n      distY = e.distY;\n    var targetInverseMatrix = datas.targetInverseMatrix,\n      prevMatrix = datas.prevMatrix,\n      isWarp = datas.isWarp,\n      startValue = datas.startValue,\n      poses = datas.poses,\n      posIndexes = datas.posIndexes,\n      absolutePoses = datas.absolutePoses;\n    if (!isWarp) {\n      return false;\n    }\n    resolveTransformEvent(e, \"matrix3d\");\n    if (hasGuidelines(moveable, \"warpable\")) {\n      var selectedPoses = posIndexes.map(function (index) {\n        return absolutePoses[index];\n      });\n      if (selectedPoses.length > 1) {\n        selectedPoses.push([(selectedPoses[0][0] + selectedPoses[1][0]) / 2, (selectedPoses[0][1] + selectedPoses[1][1]) / 2]);\n      }\n      var _a = checkMoveableSnapBounds(moveable, isRequest, {\n          horizontal: selectedPoses.map(function (pos) {\n            return pos[1] + distY;\n          }),\n          vertical: selectedPoses.map(function (pos) {\n            return pos[0] + distX;\n          })\n        }),\n        horizontalSnapInfo = _a.horizontal,\n        verticalSnapInfo = _a.vertical;\n      distY -= horizontalSnapInfo.offset;\n      distX -= verticalSnapInfo.offset;\n    }\n    var dist = getDragDist({\n      datas: datas,\n      distX: distX,\n      distY: distY\n    }, true);\n    var nextPoses = datas.nextPoses.slice();\n    posIndexes.forEach(function (index) {\n      nextPoses[index] = plus(nextPoses[index], dist);\n    });\n    if (!NEARBY_POS.every(function (nearByPoses) {\n      return isValidPos(nearByPoses.map(function (i) {\n        return poses[i];\n      }), nearByPoses.map(function (i) {\n        return nextPoses[i];\n      }));\n    })) {\n      return false;\n    }\n    var h = createWarpMatrix(poses[0], poses[2], poses[1], poses[3], nextPoses[0], nextPoses[2], nextPoses[1], nextPoses[3]);\n    if (!h.length) {\n      return false;\n    } // B * A * M\n\n    var afterMatrix = multiply(targetInverseMatrix, h, 4); // B * M * A\n\n    var matrix = getTransfromMatrix(datas, afterMatrix, true);\n    var delta = multiply(invert(prevMatrix, 4), matrix, 4);\n    datas.prevMatrix = matrix;\n    var totalMatrix = multiply(startValue, matrix, 4);\n    var nextTransform = convertTransformFormat(datas, \"matrix3d(\".concat(totalMatrix.join(\", \"), \")\"), \"matrix3d(\".concat(matrix.join(\", \"), \")\"));\n    fillOriginalTransform(e, nextTransform);\n    triggerEvent(moveable, \"onWarp\", fillParams(moveable, e, __assign({\n      delta: delta,\n      matrix: totalMatrix,\n      dist: matrix,\n      multiply: multiply,\n      transform: nextTransform\n    }, fillCSSObject({\n      transform: nextTransform\n    }, e))));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas,\n      isDrag = e.isDrag;\n    if (!datas.isWarp) {\n      return false;\n    }\n    datas.isWarp = false;\n    triggerEvent(moveable, \"onWarpEnd\", fillEndParams(moveable, e, {}));\n    return isDrag;\n  }\n};\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\nvar AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nvar AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nvar AVOID = /*#__PURE__*/prefix(\"avoid\");\nvar VIEW_DRAGGING = prefix(\"view-dragging\");\nfunction restoreStyle(moveable) {\n  var el = moveable.areaElement;\n  if (!el) {\n    return;\n  }\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  removeClass(el, AVOID);\n  el.style.cssText += \"left: 0px; top: 0px; width: \".concat(width, \"px; height: \").concat(height, \"px\");\n}\nfunction renderPieces(React) {\n  return React.createElement(\"div\", {\n    key: \"area_pieces\",\n    className: AREA_PIECES\n  }, React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }), React.createElement(\"div\", {\n    className: AREA_PIECE\n  }));\n}\nvar DragArea = {\n  name: \"dragArea\",\n  props: {\n    dragArea: Boolean,\n    passDragArea: Boolean\n  },\n  events: {\n    onClick: \"click\",\n    onClickGroup: \"clickGroup\"\n  },\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      target = _a.target,\n      dragArea = _a.dragArea,\n      groupable = _a.groupable,\n      passDragArea = _a.passDragArea;\n    var _b = moveable.getState(),\n      width = _b.width,\n      height = _b.height,\n      renderPoses = _b.renderPoses;\n    var className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n    if (groupable) {\n      return [React.createElement(\"div\", {\n        key: \"area\",\n        ref: ref(moveable, \"areaElement\"),\n        className: className\n      }), renderPieces(React)];\n    }\n    if (!target || !dragArea) {\n      return [];\n    }\n    var h = createWarpMatrix([0, 0], [width, 0], [0, height], [width, height], renderPoses[0], renderPoses[1], renderPoses[2], renderPoses[3]);\n    var transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n    return [React.createElement(\"div\", {\n      key: \"area\",\n      ref: ref(moveable, \"areaElement\"),\n      className: className,\n      style: {\n        top: \"0px\",\n        left: \"0px\",\n        width: \"\".concat(width, \"px\"),\n        height: \"\".concat(height, \"px\"),\n        transformOrigin: \"0 0\",\n        transform: transform\n      }\n    }), renderPieces(React)];\n  },\n  dragStart: function (moveable, _a) {\n    var datas = _a.datas,\n      clientX = _a.clientX,\n      clientY = _a.clientY,\n      inputEvent = _a.inputEvent;\n    if (!inputEvent) {\n      return false;\n    }\n    datas.isDragArea = false;\n    var areaElement = moveable.areaElement;\n    var state = moveable.state;\n    var moveableClientRect = state.moveableClientRect,\n      renderPoses = state.renderPoses,\n      rootMatrix = state.rootMatrix,\n      is3d = state.is3d;\n    var left = moveableClientRect.left,\n      top = moveableClientRect.top;\n    var _b = getRect(renderPoses),\n      relativeLeft = _b.left,\n      relativeTop = _b.top,\n      width = _b.width,\n      height = _b.height;\n    var n = is3d ? 4 : 3;\n    var _c = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n),\n      posX = _c[0],\n      posY = _c[1];\n    posX -= relativeLeft;\n    posY -= relativeTop;\n    var rects = [{\n      left: relativeLeft,\n      top: relativeTop,\n      width: width,\n      height: posY - 10\n    }, {\n      left: relativeLeft,\n      top: relativeTop,\n      width: posX - 10,\n      height: height\n    }, {\n      left: relativeLeft,\n      top: relativeTop + posY + 10,\n      width: width,\n      height: height - posY - 10\n    }, {\n      left: relativeLeft + posX + 10,\n      top: relativeTop,\n      width: width - posX - 10,\n      height: height\n    }];\n    var children = [].slice.call(areaElement.nextElementSibling.children);\n    rects.forEach(function (rect, i) {\n      children[i].style.cssText = \"left: \".concat(rect.left, \"px;top: \").concat(rect.top, \"px; width: \").concat(rect.width, \"px; height: \").concat(rect.height, \"px;\");\n    });\n    addClass(areaElement, AVOID);\n    state.disableNativeEvent = true;\n    return;\n  },\n  drag: function (moveable, _a) {\n    var datas = _a.datas,\n      inputEvent = _a.inputEvent;\n    this.enableNativeEvent(moveable);\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      datas.isDragArea = true;\n      restoreStyle(moveable);\n    }\n  },\n  dragEnd: function (moveable, e) {\n    this.enableNativeEvent(moveable);\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    if (!inputEvent) {\n      return false;\n    }\n    if (!datas.isDragArea) {\n      restoreStyle(moveable);\n    }\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  unset: function (moveable) {\n    restoreStyle(moveable);\n    moveable.state.disableNativeEvent = false;\n  },\n  enableNativeEvent: function (moveable) {\n    var state = moveable.state;\n    if (state.disableNativeEvent) {\n      requestAnimationFrame(function () {\n        state.disableNativeEvent = false;\n      });\n    }\n  }\n};\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n\nvar Origin = makeAble(\"origin\", {\n  render: function (moveable, React) {\n    var zoom = moveable.props.zoom;\n    var _a = moveable.getState(),\n      beforeOrigin = _a.beforeOrigin,\n      rotation = _a.rotation;\n    return [React.createElement(\"div\", {\n      className: prefix(\"control\", \"origin\"),\n      style: getControlTransform(rotation, zoom, beforeOrigin),\n      key: \"beforeOrigin\"\n    })];\n  }\n});\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n\nfunction getDefaultScrollPosition(e) {\n  var scrollContainer = e.scrollContainer;\n  return [scrollContainer.scrollLeft, scrollContainer.scrollTop];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\n\nvar Scrollable = {\n  name: \"scrollable\",\n  canPinch: true,\n  props: {\n    scrollable: Boolean,\n    scrollContainer: Object,\n    scrollThreshold: Number,\n    scrollThrottleTime: Number,\n    getScrollPosition: Function\n  },\n  events: {\n    onScroll: \"scroll\",\n    onScrollGroup: \"scrollGroup\"\n  },\n  dragRelation: \"strong\",\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.scrollContainer,\n      scrollContainer = _a === void 0 ? moveable.getContainer() : _a;\n    var dragScroll = new DragScroll();\n    var scrollContainerElement = getRefTarget(scrollContainer, true);\n    e.datas.dragScroll = dragScroll;\n    var gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n    var targets = e.targets;\n    dragScroll.on(\"scroll\", function (_a) {\n      var container = _a.container,\n        direction = _a.direction;\n      var params = fillParams(moveable, e, {\n        scrollContainer: container,\n        direction: direction\n      });\n      var eventName = targets ? \"onScrollGroup\" : \"onScroll\";\n      if (targets) {\n        params.targets = targets;\n      }\n      triggerEvent(moveable, eventName, params);\n    }).on(\"move\", function (_a) {\n      var offsetX = _a.offsetX,\n        offsetY = _a.offsetY,\n        inputEvent = _a.inputEvent;\n      moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n    });\n    dragScroll.dragStart(e, {\n      container: scrollContainerElement\n    });\n  },\n  checkScroll: function (moveable, e) {\n    var dragScroll = e.datas.dragScroll;\n    if (!dragScroll) {\n      return;\n    }\n    var _a = moveable.props,\n      _b = _a.scrollContainer,\n      scrollContainer = _b === void 0 ? moveable.getContainer() : _b,\n      _c = _a.scrollThreshold,\n      scrollThreshold = _c === void 0 ? 0 : _c,\n      _d = _a.scrollThrottleTime,\n      scrollThrottleTime = _d === void 0 ? 0 : _d,\n      _e = _a.getScrollPosition,\n      getScrollPosition = _e === void 0 ? getDefaultScrollPosition : _e;\n    dragScroll.drag(e, {\n      container: scrollContainer,\n      threshold: scrollThreshold,\n      throttleTime: scrollThrottleTime,\n      getScrollPosition: function (ev) {\n        return getScrollPosition({\n          scrollContainer: ev.container,\n          direction: ev.direction\n        });\n      }\n    });\n    return true;\n  },\n  drag: function (moveable, e) {\n    return this.checkScroll(moveable, e);\n  },\n  dragEnd: function (moveable, e) {\n    e.datas.dragScroll.dragEnd();\n    e.datas.dragScroll = null;\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      isControl: true\n    }));\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragStart(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets,\n      isControl: true\n    }));\n  },\n  dragGroupContro: function (moveable, e) {\n    return this.drag(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroupControEnd: function (moveable, e) {\n    return this.dragEnd(moveable, __assign(__assign({}, e), {\n      targets: moveable.props.targets\n    }));\n  }\n};\n/**\n * Whether or not target can be scrolled to the scroll container\n * @name Moveable.Scrollable#scrollable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied\n * @name Moveable.Scrollable#scrollContainer\n * @default container\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Expand the range of the scroll check area.\n * @name Moveable.Scrollable#scrollThreshold\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Time interval that occurs when scrolling occurs when dragging is maintained\n * If set to 0, it does not occur.\n * @name Moveable.Scrollable#scrollThreshold\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position.\n * @name Moveable.Scrollable#getScrollPosition\n * @default container's scroll pos array\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\nvar Default = {\n  name: \"\",\n  props: {\n    target: Object,\n    dragTarget: Object,\n    container: Object,\n    portalContainer: Object,\n    rootContainer: Object,\n    useResizeObserver: Boolean,\n    zoom: Number,\n    transformOrigin: Array,\n    edge: Object,\n    ables: Array,\n    className: String,\n    pinchThreshold: Number,\n    pinchOutside: Boolean,\n    triggerAblesSimultaneously: Boolean,\n    checkInput: Boolean,\n    cspNonce: String,\n    translateZ: Number,\n    hideDefaultLines: Boolean,\n    props: Object,\n    flushSync: Function,\n    stopPropagation: Boolean,\n    preventClickEventOnDrag: Boolean,\n    preventClickDefault: Boolean,\n    viewContainer: Object,\n    persistData: Object,\n    useAccuratePosition: Boolean,\n    firstRenderState: Object\n  },\n  events: {\n    onChangeTargets: \"changeTargets\"\n  }\n};\nvar Padding = makeAble(\"padding\", {\n  render: function (moveable, React) {\n    var props = moveable.props;\n    if (props.dragArea) {\n      return [];\n    }\n    var padding = props.padding || {};\n    var _a = padding.left,\n      left = _a === void 0 ? 0 : _a,\n      _b = padding.top,\n      top = _b === void 0 ? 0 : _b,\n      _c = padding.right,\n      right = _c === void 0 ? 0 : _c,\n      _d = padding.bottom,\n      bottom = _d === void 0 ? 0 : _d;\n    var _e = moveable.getState(),\n      renderPoses = _e.renderPoses,\n      pos1 = _e.pos1,\n      pos2 = _e.pos2,\n      pos3 = _e.pos3,\n      pos4 = _e.pos4;\n    var poses = [pos1, pos2, pos3, pos4];\n    var paddingDirections = [];\n    if (left > 0) {\n      paddingDirections.push([0, 2]);\n    }\n    if (top > 0) {\n      paddingDirections.push([0, 1]);\n    }\n    if (right > 0) {\n      paddingDirections.push([1, 3]);\n    }\n    if (bottom > 0) {\n      paddingDirections.push([2, 3]);\n    }\n    return paddingDirections.map(function (_a, i) {\n      var dir1 = _a[0],\n        dir2 = _a[1];\n      var paddingPos1 = poses[dir1];\n      var paddingPos2 = poses[dir2];\n      var paddingPos3 = renderPoses[dir1];\n      var paddingPos4 = renderPoses[dir2];\n      var h = createWarpMatrix([0, 0], [100, 0], [0, 100], [100, 100], paddingPos1, paddingPos2, paddingPos3, paddingPos4);\n      if (!h.length) {\n        return undefined;\n      }\n      return React.createElement(\"div\", {\n        key: \"padding\".concat(i),\n        className: prefix(\"padding\"),\n        style: {\n          transform: makeMatrixCSS(h, true)\n        }\n      });\n    });\n  }\n});\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n\nvar RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"];\nfunction calculateRatio(values, size) {\n  var sumSize = values[0] + values[1];\n  var sumRatio = sumSize > size ? size / sumSize : 1;\n  values[0] *= sumRatio;\n  values[1] = size - values[1] * sumRatio;\n  return values;\n}\nvar HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nvar VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nvar HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1];\nvar VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1];\nfunction getRadiusStyles(nextPoses, isRelative, width, height, left, top, right, bottom) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  if (right === void 0) {\n    right = width;\n  }\n  if (bottom === void 0) {\n    bottom = height;\n  }\n  var clipStyles = [];\n  var isVertical = false;\n  var radiusPoses = nextPoses.filter(function (pos) {\n    return !pos.virtual;\n  });\n  var raws = radiusPoses.map(function (posInfo) {\n    var horizontal = posInfo.horizontal,\n      vertical = posInfo.vertical,\n      pos = posInfo.pos;\n    if (vertical && !isVertical) {\n      isVertical = true;\n      clipStyles.push(\"/\");\n    }\n    if (isVertical) {\n      var rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n      clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n      return rawPos;\n    } else {\n      var rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n      clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n      return rawPos;\n    }\n  });\n  return {\n    radiusPoses: radiusPoses,\n    styles: clipStyles,\n    raws: raws\n  };\n}\nfunction getRadiusRange(controlPoses) {\n  // [start, length]\n  var horizontalRange = [0, 0];\n  var verticalRange = [0, 0];\n  var length = controlPoses.length;\n  for (var i = 0; i < length; ++i) {\n    var clipPose = controlPoses[i];\n    if (!clipPose.sub) {\n      continue;\n    }\n    if (clipPose.horizontal) {\n      if (horizontalRange[1] === 0) {\n        horizontalRange[0] = i;\n      }\n      horizontalRange[1] = i - horizontalRange[0] + 1;\n      verticalRange[0] = i + 1;\n    }\n    if (clipPose.vertical) {\n      if (verticalRange[1] === 0) {\n        verticalRange[0] = i;\n      }\n      verticalRange[1] = i - verticalRange[0] + 1;\n    }\n  }\n  return {\n    horizontalRange: horizontalRange,\n    verticalRange: verticalRange\n  };\n}\nfunction getRadiusValues(values, width, height, left, top, minCounts, full) {\n  var _a, _b, _c, _d;\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  if (full === void 0) {\n    full = false;\n  }\n  var splitIndex = values.indexOf(\"/\");\n  var splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n  var horizontalValues = values.slice(0, splitLength);\n  var verticalValues = values.slice(splitLength + 1);\n  var horizontalValuesLength = horizontalValues.length;\n  var verticalValuesLength = verticalValues.length;\n  var hasVerticalValues = verticalValuesLength > 0;\n  var _e = horizontalValues[0],\n    nwValue = _e === void 0 ? \"0px\" : _e,\n    _f = horizontalValues[1],\n    neValue = _f === void 0 ? nwValue : _f,\n    _g = horizontalValues[2],\n    seValue = _g === void 0 ? nwValue : _g,\n    _h = horizontalValues[3],\n    swValue = _h === void 0 ? neValue : _h;\n  var _j = verticalValues[0],\n    wnValue = _j === void 0 ? nwValue : _j,\n    _k = verticalValues[1],\n    enValue = _k === void 0 ? hasVerticalValues ? wnValue : neValue : _k,\n    _l = verticalValues[2],\n    esValue = _l === void 0 ? hasVerticalValues ? wnValue : seValue : _l,\n    _m = verticalValues[3],\n    wsValue = _m === void 0 ? hasVerticalValues ? enValue : swValue : _m;\n  var horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(function (pos) {\n    return convertUnitSize(pos, width);\n  });\n  var verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(function (pos) {\n    return convertUnitSize(pos, height);\n  });\n  var horizontalPoses = horizontalRawPoses.slice();\n  var verticalPoses = verticalRawPoses.slice();\n  _a = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width), horizontalPoses[0] = _a[0], horizontalPoses[1] = _a[1];\n  _b = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width), horizontalPoses[3] = _b[0], horizontalPoses[2] = _b[1];\n  _c = calculateRatio([verticalPoses[0], verticalPoses[3]], height), verticalPoses[0] = _c[0], verticalPoses[3] = _c[1];\n  _d = calculateRatio([verticalPoses[1], verticalPoses[2]], height), verticalPoses[1] = _d[0], verticalPoses[2] = _d[1];\n  var nextHorizontalPoses = full ? horizontalPoses : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n  var nextVerticalPoses = full ? verticalPoses : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n  return __spreadArray(__spreadArray([], nextHorizontalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      virtual: i >= horizontalValuesLength,\n      horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n      vertical: 0,\n      pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n      sub: true,\n      raw: horizontalRawPoses[i],\n      direction: direction\n    };\n  }), true), nextVerticalPoses.map(function (pos, i) {\n    var direction = RADIUS_DIRECTIONS[i];\n    return {\n      virtual: i >= verticalValuesLength,\n      horizontal: 0,\n      vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n      pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n      sub: true,\n      raw: verticalRawPoses[i],\n      direction: direction\n    };\n  }), true);\n}\nfunction removeRadiusPos(controlPoses, poses, index, startIndex, length) {\n  if (length === void 0) {\n    length = poses.length;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  var radiuslIndex = index - startIndex;\n  var deleteCount = 0;\n  if (radiuslIndex === 0) {\n    deleteCount = length;\n  } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n    deleteCount = horizontalRange[1] - radiuslIndex;\n  } else if (radiuslIndex >= verticalRange[0]) {\n    deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n  } else {\n    return;\n  }\n  controlPoses.splice(index, deleteCount);\n  poses.splice(index, deleteCount);\n}\nfunction addRadiusPos(controlPoses, poses, startIndex, horizontalIndex, verticalIndex, distX, distY, right, bottom, left, top) {\n  if (left === void 0) {\n    left = 0;\n  }\n  if (top === void 0) {\n    top = 0;\n  }\n  var _a = getRadiusRange(controlPoses.slice(startIndex)),\n    horizontalRange = _a.horizontalRange,\n    verticalRange = _a.verticalRange;\n  if (horizontalIndex > -1) {\n    var radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1 ? distX - left : right - distX;\n    for (var i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n      var y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n      var x = 0;\n      if (horizontalIndex === i) {\n        x = distX;\n      } else if (i === 0) {\n        x = left + radiusX;\n      } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n        x = right - (poses[startIndex][0] - left);\n      }\n      controlPoses.splice(startIndex + i, 0, {\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n        vertical: 0,\n        pos: [x, y]\n      });\n      poses.splice(startIndex + i, 0, [x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  } else if (verticalIndex > -1) {\n    var radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1 ? distY - top : bottom - distY;\n    if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n      var pos = [left + radiusY, top];\n      controlPoses.push({\n        horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n        vertical: 0,\n        pos: pos\n      });\n      poses.push(pos);\n    }\n    var startVerticalIndex = verticalRange[0];\n    for (var i = verticalRange[1]; i <= verticalIndex; ++i) {\n      var x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n      var y = 0;\n      if (verticalIndex === i) {\n        y = distY;\n      } else if (i === 0) {\n        y = top + radiusY;\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n        y = poses[startIndex + startVerticalIndex][1];\n      } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n        y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n      }\n      controlPoses.push({\n        horizontal: 0,\n        vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n        pos: [x, y]\n      });\n      poses.push([x, y]);\n      if (i === 0) {\n        break;\n      }\n    }\n  }\n}\nfunction splitRadiusPoses(controlPoses, raws) {\n  if (raws === void 0) {\n    raws = controlPoses.map(function (pos) {\n      return pos.raw;\n    });\n  }\n  var horizontals = controlPoses.map(function (pos, i) {\n    return pos.horizontal ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  var verticals = controlPoses.map(function (pos, i) {\n    return pos.vertical ? raws[i] : null;\n  }).filter(function (pos) {\n    return pos != null;\n  });\n  return {\n    horizontals: horizontals,\n    verticals: verticals\n  };\n}\nvar CLIP_DIRECTIONS = [[0, -1, \"n\"], [1, 0, \"e\"]];\nvar CLIP_RECT_DIRECTIONS = [[-1, -1, \"nw\"], [0, -1, \"n\"], [1, -1, \"ne\"], [1, 0, \"e\"], [1, 1, \"se\"], [0, 1, \"s\"], [-1, 1, \"sw\"], [-1, 0, \"w\"]]; // 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(moveable, clipPath, poses) {\n  var clipRelative = moveable.props.clipRelative;\n  var _a = moveable.state,\n    width = _a.width,\n    height = _a.height;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses;\n  var isRect = clipType === \"rect\";\n  var isCircle = clipType === \"circle\";\n  if (clipType === \"polygon\") {\n    return poses.map(function (pos) {\n      return \"\".concat(convertCSSSize(pos[0], width, clipRelative), \" \").concat(convertCSSSize(pos[1], height, clipRelative));\n    });\n  } else if (isRect || clipType === \"inset\") {\n    var top = poses[1][1];\n    var right = poses[3][0];\n    var left = poses[7][0];\n    var bottom = poses[5][1];\n    if (isRect) {\n      return [top, right, bottom, left].map(function (pos) {\n        return \"\".concat(pos, \"px\");\n      });\n    }\n    var clipStyles = [top, width - right, height - bottom, left].map(function (pos, i) {\n      return convertCSSSize(pos, i % 2 ? width : height, clipRelative);\n    });\n    if (poses.length > 8) {\n      var _c = minus(poses[4], poses[0]),\n        subWidth = _c[0],\n        subHeight = _c[1];\n      clipStyles.push.apply(clipStyles, __spreadArray([\"round\"], getRadiusStyles(clipPoses.slice(8).map(function (info, i) {\n        return __assign(__assign({}, info), {\n          pos: poses[i]\n        });\n      }), clipRelative, subWidth, subHeight, left, top, right, bottom).styles, false));\n    }\n    return clipStyles;\n  } else if (isCircle || clipType === \"ellipse\") {\n    var center = poses[0];\n    var ry = convertCSSSize(Math.abs(poses[1][1] - center[1]), isCircle ? Math.sqrt((width * width + height * height) / 2) : height, clipRelative);\n    var clipStyles = isCircle ? [ry] : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n    clipStyles.push(\"at\", convertCSSSize(center[0], width, clipRelative), convertCSSSize(center[1], height, clipRelative));\n    return clipStyles;\n  }\n}\nfunction getRectPoses(top, right, bottom, left) {\n  var xs = [left, (left + right) / 2, right];\n  var ys = [top, (top + bottom) / 2, bottom];\n  return CLIP_RECT_DIRECTIONS.map(function (_a) {\n    var dirx = _a[0],\n      diry = _a[1],\n      dir = _a[2];\n    var x = xs[dirx + 1];\n    var y = ys[diry + 1];\n    return {\n      vertical: Math.abs(diry),\n      horizontal: Math.abs(dirx),\n      direction: dir,\n      pos: [x, y]\n    };\n  });\n}\nfunction getControlSize(controlPoses) {\n  var xRange = [Infinity, -Infinity];\n  var yRange = [Infinity, -Infinity];\n  controlPoses.forEach(function (_a) {\n    var pos = _a.pos;\n    xRange[0] = Math.min(xRange[0], pos[0]);\n    xRange[1] = Math.max(xRange[1], pos[0]);\n    yRange[0] = Math.min(yRange[0], pos[1]);\n    yRange[1] = Math.max(yRange[1], pos[1]);\n  });\n  return [Math.abs(xRange[1] - xRange[0]), Math.abs(yRange[1] - yRange[0])];\n}\nfunction getClipPath(target, width, height, defaultClip, customClip) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  if (!target) {\n    return;\n  }\n  var clipText = customClip;\n  if (!clipText) {\n    var style = getComputedStyle(target);\n    var clipPath = style.clipPath;\n    clipText = clipPath !== \"none\" ? clipPath : style.clip;\n  }\n  if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n    clipText = defaultClip;\n    if (!clipText) {\n      return;\n    }\n  }\n  var _h = splitBracket(clipText),\n    _j = _h.prefix,\n    clipPrefix = _j === void 0 ? clipText : _j,\n    _k = _h.value,\n    value = _k === void 0 ? \"\" : _k;\n  var isCircle = clipPrefix === \"circle\";\n  var splitter = \" \";\n  if (clipPrefix === \"polygon\") {\n    var values = splitComma(value || \"0% 0%, 100% 0%, 100% 100%, 0% 100%\");\n    splitter = \",\";\n    var poses = values.map(function (pos) {\n      var _a = pos.split(\" \"),\n        xPos = _a[0],\n        yPos = _a[1];\n      return {\n        vertical: 1,\n        horizontal: 1,\n        pos: [convertUnitSize(xPos, width), convertUnitSize(yPos, height)]\n      };\n    });\n    var minMaxs = getMinMaxs(poses.map(function (pos) {\n      return pos.pos;\n    }));\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      poses: poses,\n      splitter: splitter,\n      left: minMaxs.minX,\n      right: minMaxs.maxX,\n      top: minMaxs.minY,\n      bottom: minMaxs.maxY\n    };\n  } else if (isCircle || clipPrefix === \"ellipse\") {\n    var xPos = \"\";\n    var yPos = \"\";\n    var radiusX_1 = 0;\n    var radiusY_1 = 0;\n    var values = splitSpace(value);\n    if (isCircle) {\n      var radius = \"\";\n      _a = values[0], radius = _a === void 0 ? \"50%\" : _a, _b = values[2], xPos = _b === void 0 ? \"50%\" : _b, _c = values[3], yPos = _c === void 0 ? \"50%\" : _c;\n      radiusX_1 = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n      radiusY_1 = radiusX_1;\n    } else {\n      var xRadius = \"\";\n      var yRadius = \"\";\n      _d = values[0], xRadius = _d === void 0 ? \"50%\" : _d, _e = values[1], yRadius = _e === void 0 ? \"50%\" : _e, _f = values[3], xPos = _f === void 0 ? \"50%\" : _f, _g = values[4], yPos = _g === void 0 ? \"50%\" : _g;\n      radiusX_1 = convertUnitSize(xRadius, width);\n      radiusY_1 = convertUnitSize(yRadius, height);\n    }\n    var centerPos_1 = [convertUnitSize(xPos, width), convertUnitSize(yPos, height)];\n    var poses = __spreadArray([{\n      vertical: 1,\n      horizontal: 1,\n      pos: centerPos_1,\n      direction: \"nesw\"\n    }], CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(function (dir) {\n      return {\n        vertical: Math.abs(dir[1]),\n        horizontal: dir[0],\n        direction: dir[2],\n        sub: true,\n        pos: [centerPos_1[0] + dir[0] * radiusX_1, centerPos_1[1] + dir[1] * radiusY_1]\n      };\n    }), true);\n    return {\n      type: clipPrefix,\n      clipText: clipText,\n      radiusX: radiusX_1,\n      radiusY: radiusY_1,\n      left: centerPos_1[0] - radiusX_1,\n      top: centerPos_1[1] - radiusY_1,\n      right: centerPos_1[0] + radiusX_1,\n      bottom: centerPos_1[1] + radiusY_1,\n      poses: poses,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"inset\") {\n    var values = splitSpace(value || \"0 0 0 0\");\n    var roundIndex = values.indexOf(\"round\");\n    var rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n    var radiusValues = values.slice(rectLength + 1);\n    var _l = values.slice(0, rectLength),\n      topValue = _l[0],\n      _m = _l[1],\n      rightValue = _m === void 0 ? topValue : _m,\n      _o = _l[2],\n      bottomValue = _o === void 0 ? topValue : _o,\n      _p = _l[3],\n      leftValue = _p === void 0 ? rightValue : _p;\n    var _q = [topValue, bottomValue].map(function (pos) {\n        return convertUnitSize(pos, height);\n      }),\n      top = _q[0],\n      bottom = _q[1];\n    var _r = [leftValue, rightValue].map(function (pos) {\n        return convertUnitSize(pos, width);\n      }),\n      left = _r[0],\n      right = _r[1];\n    var nextRight = width - right;\n    var nextBottom = height - bottom;\n    var radiusPoses = getRadiusValues(radiusValues, nextRight - left, nextBottom - top, left, top);\n    var poses = __spreadArray(__spreadArray([], getRectPoses(top, nextRight, nextBottom, left), true), radiusPoses, true);\n    return {\n      type: \"inset\",\n      clipText: clipText,\n      poses: poses,\n      top: top,\n      left: left,\n      right: nextRight,\n      bottom: nextBottom,\n      radius: radiusValues,\n      splitter: splitter\n    };\n  } else if (clipPrefix === \"rect\") {\n    // top right bottom left\n    var values = splitComma(value || \"0px, \".concat(width, \"px, \").concat(height, \"px, 0px\"));\n    splitter = \",\";\n    var _s = values.map(function (pos) {\n        var posValue = splitUnit(pos).value;\n        return posValue;\n      }),\n      top = _s[0],\n      right = _s[1],\n      bottom = _s[2],\n      left = _s[3];\n    var poses = getRectPoses(top, right, bottom, left);\n    return {\n      type: \"rect\",\n      clipText: clipText,\n      poses: poses,\n      top: top,\n      right: right,\n      bottom: bottom,\n      left: left,\n      values: values,\n      splitter: splitter\n    };\n  }\n  return;\n}\nfunction moveControlPos(controlPoses, index, dist, isRect, keepRatio) {\n  var _a = controlPoses[index],\n    direction = _a.direction,\n    sub = _a.sub;\n  var dists = controlPoses.map(function () {\n    return [0, 0];\n  });\n  var directions = direction ? direction.split(\"\") : [];\n  if (isRect && index < 8) {\n    var verticalDirections = directions.filter(function (dir) {\n      return dir === \"w\" || dir === \"e\";\n    });\n    var horizontalDirections = directions.filter(function (dir) {\n      return dir === \"n\" || dir === \"s\";\n    });\n    var verticalDirection_1 = verticalDirections[0];\n    var horizontalDirection_1 = horizontalDirections[0];\n    dists[index] = dist;\n    var _b = getControlSize(controlPoses),\n      width = _b[0],\n      height = _b[1];\n    var ratio = width && height ? width / height : 0;\n    if (ratio && keepRatio) {\n      // 0 1 2\n      // 7   3\n      // 6 5 4\n      var fixedIndex = (index + 4) % 8;\n      var fixedPosition = controlPoses[fixedIndex].pos;\n      var sizeDirection = [0, 0];\n      if (direction.indexOf(\"w\") > -1) {\n        sizeDirection[0] = -1;\n      } else if (direction.indexOf(\"e\") > -1) {\n        sizeDirection[0] = 1;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        sizeDirection[1] = -1;\n      } else if (direction.indexOf(\"s\") > -1) {\n        sizeDirection[1] = 1;\n      }\n      var nextDist = getSizeDistByDist([width, height], dist, ratio, sizeDirection, true);\n      var nextWidth = width + nextDist[0];\n      var nextHeight = height + nextDist[1];\n      var top = fixedPosition[1];\n      var bottom = fixedPosition[1];\n      var left = fixedPosition[0];\n      var right = fixedPosition[0];\n      if (sizeDirection[0] === -1) {\n        left = right - nextWidth;\n      } else if (sizeDirection[0] === 1) {\n        right = left + nextWidth;\n      } else {\n        left = left - nextWidth / 2;\n        right = right + nextWidth / 2;\n      }\n      if (sizeDirection[1] === -1) {\n        top = bottom - nextHeight;\n      } else if (sizeDirection[1] === 1) {\n        bottom = top + nextHeight;\n      } else {\n        top = bottom - nextHeight / 2;\n        bottom = top + nextHeight;\n      }\n      var nextControlPoses_1 = getRectPoses(top, right, bottom, left);\n      controlPoses.forEach(function (controlPose, i) {\n        dists[i][0] = nextControlPoses_1[i].pos[0] - controlPose.pos[0];\n        dists[i][1] = nextControlPoses_1[i].pos[1] - controlPose.pos[1];\n      });\n    } else {\n      controlPoses.forEach(function (controlPose, i) {\n        var controlDir = controlPose.direction;\n        if (!controlDir) {\n          return;\n        }\n        if (controlDir.indexOf(verticalDirection_1) > -1) {\n          dists[i][0] = dist[0];\n        }\n        if (controlDir.indexOf(horizontalDirection_1) > -1) {\n          dists[i][1] = dist[1];\n        }\n      });\n      if (verticalDirection_1) {\n        dists[1][0] = dist[0] / 2;\n        dists[5][0] = dist[0] / 2;\n      }\n      if (horizontalDirection_1) {\n        dists[3][1] = dist[1] / 2;\n        dists[7][1] = dist[1] / 2;\n      }\n    }\n  } else if (direction && !sub) {\n    directions.forEach(function (dir) {\n      var isVertical = dir === \"n\" || dir === \"s\";\n      controlPoses.forEach(function (controlPose, i) {\n        var dirDir = controlPose.direction,\n          dirHorizontal = controlPose.horizontal,\n          dirVertical = controlPose.vertical;\n        if (!dirDir || dirDir.indexOf(dir) === -1) {\n          return;\n        }\n        dists[i] = [isVertical || !dirHorizontal ? 0 : dist[0], !isVertical || !dirVertical ? 0 : dist[1]];\n      });\n    });\n  } else {\n    dists[index] = dist;\n  }\n  return dists;\n}\nfunction addClipPath(moveable, e) {\n  var _a = calculatePointerDist(moveable, e),\n    distX = _a[0],\n    distY = _a[1];\n  var _b = e.datas,\n    clipPath = _b.clipPath,\n    clipIndex = _b.clipIndex;\n  var _c = clipPath,\n    clipType = _c.type,\n    clipPoses = _c.poses,\n    splitter = _c.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  if (clipType === \"polygon\") {\n    poses.splice(clipIndex, 0, [distX, distY]);\n  } else if (clipType === \"inset\") {\n    var horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n    var verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n    var length = clipPoses.length;\n    addRadiusPos(clipPoses, poses, 8, horizontalIndex, verticalIndex, distX, distY, poses[4][0], poses[4][1], poses[0][0], poses[0][1]);\n    if (length === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  var clipStyle = \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\");\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n    clipEventType: \"added\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: clipStyle,\n    distX: 0,\n    distY: 0\n  }, fillCSSObject({\n    clipPath: clipStyle\n  }, e))));\n}\nfunction removeClipPath(moveable, e) {\n  var _a = e.datas,\n    clipPath = _a.clipPath,\n    clipIndex = _a.clipIndex;\n  var _b = clipPath,\n    clipType = _b.type,\n    clipPoses = _b.poses,\n    splitter = _b.splitter;\n  var poses = clipPoses.map(function (pos) {\n    return pos.pos;\n  });\n  var length = poses.length;\n  if (clipType === \"polygon\") {\n    clipPoses.splice(clipIndex, 1);\n    poses.splice(clipIndex, 1);\n  } else if (clipType === \"inset\") {\n    if (clipIndex < 8) {\n      return;\n    }\n    removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n    if (length === clipPoses.length) {\n      return;\n    }\n  } else {\n    return;\n  }\n  var clipStyles = getClipStyles(moveable, clipPath, poses);\n  var clipStyle = \"\".concat(clipType, \"(\").concat(clipStyles.join(splitter), \")\");\n  triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n    clipEventType: \"removed\",\n    clipType: clipType,\n    poses: poses,\n    clipStyles: clipStyles,\n    clipStyle: clipStyle,\n    distX: 0,\n    distY: 0\n  }, fillCSSObject({\n    clipPath: clipStyle\n  }, e))));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nvar Clippable = {\n  name: \"clippable\",\n  props: {\n    clippable: Boolean,\n    defaultClipPath: String,\n    customClipPath: String,\n    keepRatio: Boolean,\n    clipRelative: Boolean,\n    clipArea: Boolean,\n    dragWithClip: Boolean,\n    clipTargetBounds: Boolean,\n    clipVerticalGuidelines: Array,\n    clipHorizontalGuidelines: Array,\n    clipSnapThreshold: Boolean\n  },\n  events: {\n    onClipStart: \"clipStart\",\n    onClip: \"clip\",\n    onClipEnd: \"clipEnd\"\n  },\n  css: [\".control.clip-control {\\n    background: #6d6;\\n    cursor: pointer;\\n}\\n.control.clip-control.clip-radius {\\n    background: #d66;\\n}\\n.line.clip-line {\\n    background: #6e6;\\n    cursor: move;\\n    z-index: 1;\\n}\\n.clip-area {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.clip-ellipse {\\n    position: absolute;\\n    cursor: move;\\n    border: 1px solid #6d6;\\n    border: var(--zoompx) solid #6d6;\\n    border-radius: 50%;\\n    transform-origin: 0px 0px;\\n}\", \":host {\\n    --bounds-color: #d66;\\n}\", \".guideline {\\n    pointer-events: none;\\n    z-index: 2;\\n}\", \".line.guideline.bounds {\\n    background: #d66;\\n    background: var(--bounds-color);\\n}\"],\n  render: function (moveable, React) {\n    var _a = moveable.props,\n      customClipPath = _a.customClipPath,\n      defaultClipPath = _a.defaultClipPath,\n      clipArea = _a.clipArea,\n      zoom = _a.zoom,\n      groupable = _a.groupable;\n    var _b = moveable.getState(),\n      target = _b.target,\n      width = _b.width,\n      height = _b.height,\n      allMatrix = _b.allMatrix,\n      is3d = _b.is3d,\n      left = _b.left,\n      top = _b.top,\n      pos1 = _b.pos1,\n      pos2 = _b.pos2,\n      pos3 = _b.pos3,\n      pos4 = _b.pos4,\n      clipPathState = _b.clipPathState,\n      snapBoundInfos = _b.snapBoundInfos,\n      rotationRad = _b.rotation;\n    if (!target || groupable) {\n      return [];\n    }\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n    if (!clipPath) {\n      return [];\n    }\n    var n = is3d ? 4 : 3;\n    var type = clipPath.type;\n    var clipPoses = clipPath.poses;\n    var poses = clipPoses.map(function (pos) {\n      // return [x, y];\n      var calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n      return [calculatedPos[0] - left, calculatedPos[1] - top];\n    });\n    var controls = [];\n    var lines = [];\n    var isRect = type === \"rect\";\n    var isInset = type === \"inset\";\n    var isPolygon = type === \"polygon\";\n    if (isRect || isInset || isPolygon) {\n      var linePoses_1 = isInset ? poses.slice(0, 8) : poses;\n      lines = linePoses_1.map(function (to, i) {\n        var from = i === 0 ? linePoses_1[linePoses_1.length - 1] : linePoses_1[i - 1];\n        var rad = getRad(from, to);\n        var dist = getDiagonalSize(from, to);\n        return React.createElement(\"div\", {\n          key: \"clipLine\".concat(i),\n          className: prefix(\"line\", \"clip-line\", \"snap-control\"),\n          \"data-clip-index\": i,\n          style: {\n            width: \"\".concat(dist, \"px\"),\n            transform: \"translate(\".concat(from[0], \"px, \").concat(from[1], \"px) rotate(\").concat(rad, \"rad) scaleY(\").concat(zoom, \")\")\n          }\n        });\n      });\n    }\n    controls = poses.map(function (pos, i) {\n      return React.createElement(\"div\", {\n        key: \"clipControl\".concat(i),\n        className: prefix(\"control\", \"clip-control\", \"snap-control\"),\n        \"data-clip-index\": i,\n        style: {\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n    if (isInset) {\n      controls.push.apply(controls, poses.slice(8).map(function (pos, i) {\n        return React.createElement(\"div\", {\n          key: \"clipRadiusControl\".concat(i),\n          className: prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\"),\n          \"data-clip-index\": 8 + i,\n          style: {\n            transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) rotate(\").concat(rotationRad, \"rad) scale(\").concat(zoom, \")\")\n          }\n        });\n      }));\n    }\n    if (type === \"circle\" || type === \"ellipse\") {\n      var clipLeft = clipPath.left,\n        clipTop = clipPath.top,\n        radiusX = clipPath.radiusX,\n        radiusY = clipPath.radiusY;\n      var _c = minus(calculatePosition(allMatrix, [clipLeft, clipTop], n), calculatePosition(allMatrix, [0, 0], n)),\n        distLeft = _c[0],\n        distTop = _c[1];\n      var ellipseClipPath = \"none\";\n      if (!clipArea) {\n        var piece = Math.max(10, radiusX / 5, radiusY / 5);\n        var areaPoses = [];\n        for (var i = 0; i <= piece; ++i) {\n          var rad = Math.PI * 2 / piece * i;\n          areaPoses.push([radiusX + (radiusX - zoom) * Math.cos(rad), radiusY + (radiusY - zoom) * Math.sin(rad)]);\n        }\n        areaPoses.push([radiusX, -2]);\n        areaPoses.push([-2, -2]);\n        areaPoses.push([-2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, radiusY * 2 + 2]);\n        areaPoses.push([radiusX * 2 + 2, -2]);\n        areaPoses.push([radiusX, -2]);\n        ellipseClipPath = \"polygon(\".concat(areaPoses.map(function (pos) {\n          return \"\".concat(pos[0], \"px \").concat(pos[1], \"px\");\n        }).join(\", \"), \")\");\n      }\n      controls.push(React.createElement(\"div\", {\n        key: \"clipEllipse\",\n        className: prefix(\"clip-ellipse\", \"snap-control\"),\n        style: {\n          width: \"\".concat(radiusX * 2, \"px\"),\n          height: \"\".concat(radiusY * 2, \"px\"),\n          clipPath: ellipseClipPath,\n          transform: \"translate(\".concat(-left + distLeft, \"px, \").concat(-top + distTop, \"px) \").concat(makeMatrixCSS(allMatrix))\n        }\n      }));\n    }\n    if (clipArea) {\n      var _d = getRect(__spreadArray([pos1, pos2, pos3, pos4], poses, true)),\n        allWidth = _d.width,\n        allHeight = _d.height,\n        allLeft_1 = _d.left,\n        allTop_1 = _d.top;\n      if (isPolygon || isRect || isInset) {\n        var areaPoses = isInset ? poses.slice(0, 8) : poses;\n        controls.push(React.createElement(\"div\", {\n          key: \"clipArea\",\n          className: prefix(\"clip-area\", \"snap-control\"),\n          style: {\n            width: \"\".concat(allWidth, \"px\"),\n            height: \"\".concat(allHeight, \"px\"),\n            transform: \"translate(\".concat(allLeft_1, \"px, \").concat(allTop_1, \"px)\"),\n            clipPath: \"polygon(\".concat(areaPoses.map(function (pos) {\n              return \"\".concat(pos[0] - allLeft_1, \"px \").concat(pos[1] - allTop_1, \"px\");\n            }).join(\", \"), \")\")\n          }\n        }));\n      }\n    }\n    if (snapBoundInfos) {\n      [\"vertical\", \"horizontal\"].forEach(function (directionType) {\n        var info = snapBoundInfos[directionType];\n        var isHorizontal = directionType === \"horizontal\";\n        if (info.isSnap) {\n          lines.push.apply(lines, info.snap.posInfos.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"snap\").concat(i), \"guideline\");\n          }));\n        }\n        if (info.isBound) {\n          lines.push.apply(lines, info.bounds.map(function (_a, i) {\n            var pos = _a.pos;\n            var snapPos1 = minus(calculatePosition(allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n            var snapPos2 = minus(calculatePosition(allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n            return renderLine(React, \"\", snapPos1, snapPos2, zoom, \"clip\".concat(directionType, \"bounds\").concat(i), \"guideline\", \"bounds\", \"bold\");\n          }));\n        }\n      });\n    }\n    return __spreadArray(__spreadArray([], controls, true), lines, true);\n  },\n  dragControlCondition: function (moveable, e) {\n    return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n  },\n  dragStart: function (moveable, e) {\n    var props = moveable.props;\n    var _a = props.dragWithClip,\n      dragWithClip = _a === void 0 ? true : _a;\n    if (dragWithClip) {\n      return false;\n    }\n    return this.dragControlStart(moveable, e);\n  },\n  drag: function (moveable, e) {\n    return this.dragControl(moveable, __assign(__assign({}, e), {\n      isDragTarget: true\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    return this.dragControlEnd(moveable, e);\n  },\n  dragControlStart: function (moveable, e) {\n    var state = moveable.state;\n    var _a = moveable.props,\n      defaultClipPath = _a.defaultClipPath,\n      customClipPath = _a.customClipPath;\n    var target = state.target,\n      width = state.width,\n      height = state.height;\n    var inputTarget = e.inputEvent ? e.inputEvent.target : null;\n    var className = inputTarget && inputTarget.getAttribute(\"class\") || \"\";\n    var datas = e.datas;\n    var clipPath = getClipPath(target, width, height, defaultClipPath || \"inset\", customClipPath);\n    if (!clipPath) {\n      return false;\n    }\n    var clipText = clipPath.clipText,\n      type = clipPath.type,\n      poses = clipPath.poses;\n    var result = triggerEvent(moveable, \"onClipStart\", fillParams(moveable, e, {\n      clipType: type,\n      clipStyle: clipText,\n      poses: poses.map(function (pos) {\n        return pos.pos;\n      })\n    }));\n    if (result === false) {\n      datas.isClipStart = false;\n      return false;\n    }\n    datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n    datas.isLine = className.indexOf(\"clip-line\") > -1;\n    datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n    datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n    datas.clipPath = clipPath;\n    datas.isClipStart = true;\n    state.clipPathState = clipText;\n    setDragStart(moveable, e);\n    return true;\n  },\n  dragControl: function (moveable, e) {\n    var _a, _b;\n    var datas = e.datas,\n      originalDatas = e.originalDatas,\n      isDragTarget = e.isDragTarget;\n    if (!datas.isClipStart) {\n      return false;\n    }\n    var _c = datas,\n      isControl = _c.isControl,\n      isLine = _c.isLine,\n      isArea = _c.isArea,\n      clipIndex = _c.clipIndex,\n      clipPath = _c.clipPath;\n    if (!clipPath) {\n      return false;\n    }\n    var props = getProps(moveable.props, \"clippable\");\n    var keepRatio = props.keepRatio;\n    var distX = 0;\n    var distY = 0;\n    var originalDraggable = originalDatas.draggable;\n    var originalDist = getDragDist(e);\n    if (isDragTarget && originalDraggable) {\n      _a = originalDraggable.prevBeforeDist, distX = _a[0], distY = _a[1];\n    } else {\n      distX = originalDist[0], distY = originalDist[1];\n    }\n    var firstDist = [distX, distY];\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height;\n    var isDragWithTarget = !isArea && !isControl && !isLine;\n    var clipType = clipPath.type,\n      clipPoses = clipPath.poses,\n      splitter = clipPath.splitter;\n    var poses = clipPoses.map(function (pos) {\n      return pos.pos;\n    });\n    if (isDragWithTarget) {\n      distX = -distX;\n      distY = -distY;\n    }\n    var isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n    var isRect = clipType === \"inset\" || clipType === \"rect\";\n    var dists = clipPoses.map(function () {\n      return [0, 0];\n    });\n    if (isControl && !isAll) {\n      var _d = clipPoses[clipIndex],\n        horizontal = _d.horizontal,\n        vertical = _d.vertical;\n      var dist = [distX * Math.abs(horizontal), distY * Math.abs(vertical)];\n      dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n    } else if (isAll) {\n      dists = poses.map(function () {\n        return [distX, distY];\n      });\n    }\n    var nextPoses = poses.map(function (pos, i) {\n      return plus(pos, dists[i]);\n    });\n    var guidePoses = __spreadArray([], nextPoses, true);\n    state.snapBoundInfos = null;\n    var isCircle = clipPath.type === \"circle\";\n    var isEllipse = clipPath.type === \"ellipse\";\n    if (isCircle || isEllipse) {\n      var guideRect = getRect(nextPoses);\n      var ry = Math.abs(guideRect.bottom - guideRect.top);\n      var rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n      var bottom = nextPoses[0][1] + ry;\n      var left = nextPoses[0][0] - rx;\n      var right = nextPoses[0][0] + rx; // right\n\n      if (isCircle) {\n        guidePoses.push([right, guideRect.bottom]);\n        dists.push([1, 0]);\n      } // bottom\n\n      guidePoses.push([guideRect.left, bottom]);\n      dists.push([0, 1]); // left\n\n      guidePoses.push([left, guideRect.bottom]);\n      dists.push([1, 0]);\n    }\n    var guidelines = getDefaultGuidelines((props.clipHorizontalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), height);\n    }), (props.clipVerticalGuidelines || []).map(function (v) {\n      return convertUnitSize(\"\".concat(v), width);\n    }), width, height);\n    var guideXPoses = [];\n    var guideYPoses = [];\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      var rectDists_1 = [dists[0], dists[2], dists[4], dists[6]];\n      guideXPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.filter(function (_, i) {\n        return rectDists_1[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.filter(function (_, i) {\n        return dists[i][0];\n      }).map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.filter(function (_, i) {\n        return dists[i][1];\n      }).map(function (pos) {\n        return pos[1];\n      });\n    }\n    var boundDelta = [0, 0];\n    var _e = checkSnapBounds(guidelines, props.clipTargetBounds && {\n        left: 0,\n        top: 0,\n        right: width,\n        bottom: height\n      }, guideXPoses, guideYPoses, 5),\n      horizontalSnapInfo = _e.horizontal,\n      verticalSnapInfo = _e.vertical;\n    var snapOffsetY = horizontalSnapInfo.offset;\n    var snapOffsetX = verticalSnapInfo.offset;\n    if (horizontalSnapInfo.isBound) {\n      boundDelta[1] += snapOffsetY;\n    }\n    if (verticalSnapInfo.isBound) {\n      boundDelta[0] += snapOffsetX;\n    }\n    if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n      var guideRect = getRect(nextPoses);\n      var cy = guideRect.bottom - guideRect.top;\n      var cx = isEllipse ? guideRect.right - guideRect.left : cy;\n      var distSnapX = verticalSnapInfo.isBound ? Math.abs(snapOffsetX) : verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX;\n      var distSnapY = horizontalSnapInfo.isBound ? Math.abs(snapOffsetY) : horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY;\n      cx -= distSnapX;\n      cy -= distSnapY;\n      if (isCircle) {\n        cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n        cx = cy;\n      }\n      var center = guidePoses[0];\n      guidePoses[1][1] = center[1] - cy;\n      guidePoses[2][0] = center[0] + cx;\n      guidePoses[3][1] = center[1] + cy;\n      guidePoses[4][0] = center[0] - cx;\n    } else if (isRect && keepRatio && isControl) {\n      var _f = getControlSize(clipPoses),\n        width_1 = _f[0],\n        height_1 = _f[1];\n      var ratio = width_1 && height_1 ? width_1 / height_1 : 0;\n      var clipPose = clipPoses[clipIndex];\n      var direction = clipPose.direction || \"\";\n      var top = guidePoses[1][1];\n      var bottom = guidePoses[5][1];\n      var left = guidePoses[7][0];\n      var right = guidePoses[3][0];\n      if (snapOffsetY <= snapOffsetX) {\n        snapOffsetY = snapOffsetX / ratio;\n      } else {\n        snapOffsetX = snapOffsetY * ratio;\n      }\n      if (direction.indexOf(\"w\") > -1) {\n        left -= snapOffsetX;\n      } else if (direction.indexOf(\"e\") > -1) {\n        right -= snapOffsetX;\n      } else {\n        left += snapOffsetX / 2;\n        right -= snapOffsetX / 2;\n      }\n      if (direction.indexOf(\"n\") > -1) {\n        top -= snapOffsetY;\n      } else if (direction.indexOf(\"s\") > -1) {\n        bottom -= snapOffsetY;\n      } else {\n        top += snapOffsetY / 2;\n        bottom -= snapOffsetY / 2;\n      }\n      var nextControlPoses_2 = getRectPoses(top, right, bottom, left);\n      guidePoses.forEach(function (pos, i) {\n        var _a;\n        _a = nextControlPoses_2[i].pos, pos[0] = _a[0], pos[1] = _a[1];\n      });\n    } else {\n      guidePoses.forEach(function (pos, j) {\n        var dist = dists[j];\n        if (dist[0]) {\n          pos[0] -= snapOffsetX;\n        }\n        if (dist[1]) {\n          pos[1] -= snapOffsetY;\n        }\n      });\n    }\n    var nextClipStyles = getClipStyles(moveable, clipPath, nextPoses);\n    var clipStyle = \"\".concat(clipType, \"(\").concat(nextClipStyles.join(splitter), \")\");\n    state.clipPathState = clipStyle;\n    if (isCircle || isEllipse) {\n      guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n      guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n    } else if (isRect) {\n      var rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n      guideXPoses = rectPoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = rectPoses.map(function (pos) {\n        return pos[1];\n      });\n    } else {\n      guideXPoses = guidePoses.map(function (pos) {\n        return pos[0];\n      });\n      guideYPoses = guidePoses.map(function (pos) {\n        return pos[1];\n      });\n    }\n    state.snapBoundInfos = checkSnapBounds(guidelines, props.clipTargetBounds && {\n      left: 0,\n      top: 0,\n      right: width,\n      bottom: height\n    }, guideXPoses, guideYPoses, 1);\n    if (originalDraggable) {\n      var is3d = state.is3d,\n        allMatrix = state.allMatrix;\n      var n = is3d ? 4 : 3;\n      var dragDist = boundDelta;\n      if (isDragTarget) {\n        dragDist = [firstDist[0] + boundDelta[0] - originalDist[0], firstDist[1] + boundDelta[1] - originalDist[1]];\n      }\n      originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n    }\n    triggerEvent(moveable, \"onClip\", fillParams(moveable, e, __assign({\n      clipEventType: \"changed\",\n      clipType: clipType,\n      poses: nextPoses,\n      clipStyle: clipStyle,\n      clipStyles: nextClipStyles,\n      distX: distX,\n      distY: distY\n    }, fillCSSObject((_b = {}, _b[clipType === \"rect\" ? \"clip\" : \"clipPath\"] = clipStyle, _b), e))));\n    return true;\n  },\n  dragControlEnd: function (moveable, e) {\n    this.unset(moveable);\n    var isDrag = e.isDrag,\n      datas = e.datas,\n      isDouble = e.isDouble;\n    var isLine = datas.isLine,\n      isClipStart = datas.isClipStart,\n      isControl = datas.isControl;\n    if (!isClipStart) {\n      return false;\n    }\n    triggerEvent(moveable, \"onClipEnd\", fillEndParams(moveable, e, {}));\n    if (isDouble) {\n      if (isControl) {\n        removeClipPath(moveable, e);\n      } else if (isLine) {\n        // add\n        addClipPath(moveable, e);\n      }\n    }\n    return isDouble || isDrag;\n  },\n  unset: function (moveable) {\n    moveable.state.clipPathState = \"\";\n    moveable.state.snapBoundInfos = null;\n  }\n};\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\n\nvar OriginDraggable = {\n  name: \"originDraggable\",\n  props: {\n    originDraggable: Boolean,\n    originRelative: Boolean\n  },\n  events: {\n    onDragOriginStart: \"dragOriginStart\",\n    onDragOrigin: \"dragOrigin\",\n    onDragOriginEnd: \"dragOriginEnd\"\n  },\n  css: [\":host[data-able-origindraggable] .control.origin {\\n    pointer-events: auto;\\n}\"],\n  dragControlCondition: function (_, e) {\n    if (e.isRequest) {\n      return e.requestAble === \"originDraggable\";\n    }\n    return hasClass(e.inputEvent.target, prefix(\"origin\"));\n  },\n  dragControlStart: function (moveable, e) {\n    var datas = e.datas;\n    setDragStart(moveable, e);\n    var params = fillParams(moveable, e, {\n      dragStart: Draggable.dragStart(moveable, new CustomGesto().dragStart([0, 0], e))\n    });\n    var result = triggerEvent(moveable, \"onDragOriginStart\", params);\n    datas.startOrigin = moveable.state.transformOrigin;\n    datas.startTargetOrigin = moveable.state.targetOrigin;\n    datas.prevOrigin = [0, 0];\n    datas.isDragOrigin = true;\n    if (result === false) {\n      datas.isDragOrigin = false;\n      return false;\n    }\n    return params;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas,\n      isPinch = e.isPinch,\n      isRequest = e.isRequest;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    var _a = getDragDist(e),\n      distX = _a[0],\n      distY = _a[1];\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height,\n      offsetMatrix = state.offsetMatrix,\n      targetMatrix = state.targetMatrix,\n      is3d = state.is3d;\n    var _b = moveable.props.originRelative,\n      originRelative = _b === void 0 ? true : _b;\n    var n = is3d ? 4 : 3;\n    var dist = [distX, distY];\n    if (isRequest) {\n      var distOrigin = e.distOrigin;\n      if (distOrigin[0] || distOrigin[1]) {\n        dist = distOrigin;\n      }\n    }\n    var origin = plus(datas.startOrigin, dist);\n    var targetOrigin = plus(datas.startTargetOrigin, dist);\n    var delta = minus(dist, datas.prevOrigin);\n    var nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, origin, n);\n    var rect = moveable.getRect();\n    var nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n    var dragDelta = [rect.left - nextRect.left, rect.top - nextRect.top];\n    datas.prevOrigin = dist;\n    var transformOrigin = [convertCSSSize(targetOrigin[0], width, originRelative), convertCSSSize(targetOrigin[1], height, originRelative)].join(\" \");\n    var result = Draggable.drag(moveable, setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false));\n    var params = fillParams(moveable, e, __assign(__assign({\n      width: width,\n      height: height,\n      origin: origin,\n      dist: dist,\n      delta: delta,\n      transformOrigin: transformOrigin,\n      drag: result\n    }, fillCSSObject({\n      transformOrigin: transformOrigin,\n      transform: result.transform\n    }, e)), {\n      afterTransform: result.transform\n    }));\n    triggerEvent(moveable, \"onDragOrigin\", params);\n    return params;\n  },\n  dragControlEnd: function (moveable, e) {\n    var datas = e.datas;\n    if (!datas.isDragOrigin) {\n      return false;\n    }\n    triggerEvent(moveable, \"onDragOriginEnd\", fillEndParams(moveable, e, {}));\n    return true;\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    return this.dragControlCondition(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    var params = this.dragControlStart(moveable, e);\n    if (!params) {\n      return false;\n    }\n    return true;\n  },\n  dragGroupControl: function (moveable, e) {\n    var params = this.dragControl(moveable, e);\n    if (!params) {\n      return false;\n    }\n    moveable.transformOrigin = params.transformOrigin;\n    return true;\n  },\n  /**\n  * @method Moveable.OriginDraggable#request\n  * @param {object} e - the OriginDraggable's request parameter\n  * @param {number} [e.x] - x position\n  * @param {number} [e.y] - y position\n  * @param {number} [e.deltaX] - x number to move\n  * @param {number} [e.deltaY] - y number to move\n  * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n  * @param {array} [e.origin] - transform-origin position\n  * @param {number} [e.isInstant] - Whether to execute the request instantly\n  * @return {Moveable.Requester} Moveable Requester\n  * @example\n   * // Instantly Request (requestStart - request - requestEnd)\n  * // Use Relative Value\n  * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n  * // Use Absolute Value\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n  * // Use Transform Value\n  * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n  * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n  * // requestStart\n  * const requester = moveable.request(\"originDraggable\");\n  *\n  * // request\n  * // Use Relative Value\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * requester.request({ deltaX: 10, deltaY: 10 });\n  * // Use Absolute Value\n  * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n  * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n  * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n  *\n  * // requestEnd\n  * requester.requestEnd();\n  */\n  request: function (moveable) {\n    var datas = {};\n    var rect = moveable.getRect();\n    var distX = 0;\n    var distY = 0;\n    var transformOrigin = rect.transformOrigin;\n    var distOrigin = [0, 0];\n    return {\n      isControl: true,\n      requestStart: function () {\n        return {\n          datas: datas\n        };\n      },\n      request: function (e) {\n        if (\"deltaOrigin\" in e) {\n          distOrigin[0] += e.deltaOrigin[0];\n          distOrigin[1] += e.deltaOrigin[1];\n        } else if (\"origin\" in e) {\n          distOrigin[0] = e.origin[0] - transformOrigin[0];\n          distOrigin[1] = e.origin[1] - transformOrigin[1];\n        } else {\n          if (\"x\" in e) {\n            distX = e.x - rect.left;\n          } else if (\"deltaX\" in e) {\n            distX += e.deltaX;\n          }\n          if (\"y\" in e) {\n            distY = e.y - rect.top;\n          } else if (\"deltaY\" in e) {\n            distY += e.deltaY;\n          }\n        }\n        return {\n          datas: datas,\n          distX: distX,\n          distY: distY,\n          distOrigin: distOrigin\n        };\n      },\n      requestEnd: function () {\n        return {\n          datas: datas,\n          isDrag: true\n        };\n      }\n    };\n  }\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\nfunction addBorderRadiusByLine(controlPoses, lineIndex, distX, distY) {\n  // lineIndex\n  // 0 top\n  // 1 right\n  // 2 bottom\n  // 3 left\n  var horizontalsLength = controlPoses.filter(function (_a) {\n    var virtual = _a.virtual,\n      horizontal = _a.horizontal;\n    return horizontal && !virtual;\n  }).length;\n  var verticalsLength = controlPoses.filter(function (_a) {\n    var virtual = _a.virtual,\n      vertical = _a.vertical;\n    return vertical && !virtual;\n  }).length;\n  var controlIndex = -1; //top\n\n  if (lineIndex === 0) {\n    if (horizontalsLength === 0) {\n      controlIndex = 0;\n    } else if (horizontalsLength === 1) {\n      controlIndex = 1;\n    }\n  } // bottom\n\n  if (lineIndex === 2) {\n    if (horizontalsLength <= 2) {\n      controlIndex = 2;\n    } else if (horizontalsLength <= 3) {\n      controlIndex = 3;\n    }\n  } // left\n\n  if (lineIndex === 3) {\n    if (verticalsLength === 0) {\n      controlIndex = 4;\n    } else if (verticalsLength < 4) {\n      controlIndex = 7;\n    }\n  } // right\n\n  if (lineIndex === 1) {\n    if (verticalsLength <= 1) {\n      controlIndex = 5;\n    } else if (verticalsLength <= 2) {\n      controlIndex = 6;\n    }\n  }\n  if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n    return;\n  }\n  var controlPoseInfo = controlPoses[controlIndex];\n  addBorderRadius(controlPoses, controlIndex);\n  if (controlIndex < 4) {\n    controlPoseInfo.pos[0] = distX;\n  } else {\n    controlPoseInfo.pos[1] = distY;\n  }\n}\nfunction addBorderRadius(controlPoses, index) {\n  if (index < 4) {\n    controlPoses.slice(0, index + 1).forEach(function (info) {\n      info.virtual = false;\n    });\n  } else {\n    if (controlPoses[0].virtual) {\n      controlPoses[0].virtual = false;\n    }\n    controlPoses.slice(4, index + 1).forEach(function (info) {\n      info.virtual = false;\n    });\n  }\n}\nfunction removeBorderRadius(controlPoses, index) {\n  if (index < 4) {\n    controlPoses.slice(index, 4).forEach(function (info) {\n      info.virtual = true;\n    });\n  } else {\n    controlPoses.slice(index).forEach(function (info) {\n      info.virtual = true;\n    });\n  }\n}\nfunction getBorderRadius(borderRadius, width, height, minCounts, full) {\n  if (minCounts === void 0) {\n    minCounts = [0, 0];\n  }\n  var values = [];\n  if (!borderRadius || borderRadius === \"0px\") {\n    values = [];\n  } else {\n    values = splitSpace(borderRadius);\n  }\n  return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\nfunction triggerRoundEvent(moveable, e, dist, delta, nextPoses) {\n  var state = moveable.state;\n  var width = state.width,\n    height = state.height;\n  var _a = getRadiusStyles(nextPoses, moveable.props.roundRelative, width, height),\n    raws = _a.raws,\n    styles = _a.styles,\n    radiusPoses = _a.radiusPoses;\n  var _b = splitRadiusPoses(radiusPoses, raws),\n    horizontals = _b.horizontals,\n    verticals = _b.verticals;\n  var borderRadius = styles.join(\" \");\n  state.borderRadiusState = borderRadius;\n  var params = fillParams(moveable, e, __assign({\n    horizontals: horizontals,\n    verticals: verticals,\n    borderRadius: borderRadius,\n    width: width,\n    height: height,\n    delta: delta,\n    dist: dist\n  }, fillCSSObject({\n    borderRadius: borderRadius\n  }, e)));\n  triggerEvent(moveable, \"onRound\", params);\n  return params;\n}\nfunction getStyleBorderRadius(moveable) {\n  var style = moveable.getState().style;\n  var borderRadius = style.borderRadius || \"\";\n  if (!borderRadius && moveable.props.groupable) {\n    var firstTarget = moveable.getTargets()[0];\n    if (firstTarget) {\n      borderRadius = getComputedStyle(firstTarget).borderRadius;\n      style.borderRadius = borderRadius;\n    }\n  }\n  return borderRadius;\n}\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nvar Roundable = {\n  name: \"roundable\",\n  props: {\n    roundable: Boolean,\n    roundRelative: Boolean,\n    minRoundControls: Array,\n    maxRoundControls: Array,\n    roundClickable: Boolean,\n    roundPadding: Number,\n    isDisplayShadowRoundControls: Boolean\n  },\n  events: {\n    onRoundStart: \"roundStart\",\n    onRound: \"round\",\n    onRoundEnd: \"roundEnd\",\n    onRoundGroupStart: \"roundGroupStart\",\n    onRoundGroup: \"roundGroup\",\n    onRoundGroupEnd: \"roundGroupEnd\"\n  },\n  css: [\".control.border-radius {\\n    background: #d66;\\n    cursor: pointer;\\n    z-index: 3;\\n}\", \".control.border-radius.vertical {\\n    background: #d6d;\\n    z-index: 2;\\n}\", \".control.border-radius.virtual {\\n    opacity: 0.5;\\n    z-index: 1;\\n}\", \":host.round-line-clickable .line.direction {\\n    cursor: pointer;\\n}\"],\n  className: function (moveable) {\n    var roundClickable = moveable.props.roundClickable;\n    return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n  },\n  requestStyle: function () {\n    return [\"borderRadius\"];\n  },\n  render: function (moveable, React) {\n    var _a = moveable.getState(),\n      target = _a.target,\n      width = _a.width,\n      height = _a.height,\n      allMatrix = _a.allMatrix,\n      is3d = _a.is3d,\n      left = _a.left,\n      top = _a.top,\n      borderRadiusState = _a.borderRadiusState;\n    var _b = moveable.props,\n      _c = _b.minRoundControls,\n      minRoundControls = _c === void 0 ? [0, 0] : _c,\n      _d = _b.maxRoundControls,\n      maxRoundControls = _d === void 0 ? [4, 4] : _d,\n      zoom = _b.zoom,\n      _e = _b.roundPadding,\n      roundPadding = _e === void 0 ? 0 : _e,\n      isDisplayShadowRoundControls = _b.isDisplayShadowRoundControls,\n      groupable = _b.groupable;\n    if (!target) {\n      return null;\n    }\n    var borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n    var n = is3d ? 4 : 3;\n    var radiusValues = getBorderRadius(borderRadius, width, height, minRoundControls, true);\n    if (!radiusValues) {\n      return null;\n    }\n    var verticalCount = 0;\n    var horizontalCount = 0;\n    var basePos = groupable ? [0, 0] : [left, top];\n    return radiusValues.map(function (v, i) {\n      var horizontal = v.horizontal;\n      var vertical = v.vertical;\n      var direction = v.direction || \"\";\n      var originalPos = __spreadArray([], v.pos, true);\n      horizontalCount += Math.abs(horizontal);\n      verticalCount += Math.abs(vertical);\n      if (horizontal && direction.indexOf(\"n\") > -1) {\n        originalPos[1] -= roundPadding;\n      }\n      if (vertical && direction.indexOf(\"w\") > -1) {\n        originalPos[0] -= roundPadding;\n      }\n      if (horizontal && direction.indexOf(\"s\") > -1) {\n        originalPos[1] += roundPadding;\n      }\n      if (vertical && direction.indexOf(\"e\") > -1) {\n        originalPos[0] += roundPadding;\n      }\n      var pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n      var isDisplay = v.vertical ? verticalCount <= maxRoundControls[1] && (isDisplayShadowRoundControls || !v.virtual) : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n      return React.createElement(\"div\", {\n        key: \"borderRadiusControl\".concat(i),\n        className: prefix(\"control\", \"border-radius\", v.vertical ? \"vertical\" : \"\", v.virtual ? \"virtual\" : \"\"),\n        \"data-radius-index\": i,\n        style: {\n          display: isDisplay ? \"block\" : \"none\",\n          transform: \"translate(\".concat(pos[0], \"px, \").concat(pos[1], \"px) scale(\").concat(zoom, \")\")\n        }\n      });\n    });\n  },\n  dragControlCondition: function (moveable, e) {\n    if (!e.inputEvent || e.isRequest) {\n      return false;\n    }\n    var className = e.inputEvent.target.getAttribute(\"class\") || \"\";\n    return className.indexOf(\"border-radius\") > -1 || className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n  },\n  dragGroupControlCondition: function (moveable, e) {\n    return this.dragControlCondition(moveable, e);\n  },\n  dragControlStart: function (moveable, e) {\n    var inputEvent = e.inputEvent,\n      datas = e.datas;\n    var inputTarget = inputEvent.target;\n    var className = inputTarget.getAttribute(\"class\") || \"\";\n    var isControl = className.indexOf(\"border-radius\") > -1;\n    var isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n    var controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n    var lineIndex = -1;\n    if (isLine) {\n      var indexAttr = inputTarget.getAttribute(\"data-line-key\") || \"\";\n      if (indexAttr) {\n        lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n        if (isNaN(lineIndex)) {\n          lineIndex = -1;\n        }\n      }\n    }\n    if (!isControl && !isLine) {\n      return false;\n    }\n    var params = fillParams(moveable, e, {});\n    var result = triggerEvent(moveable, \"onRoundStart\", params);\n    if (result === false) {\n      return false;\n    }\n    datas.lineIndex = lineIndex;\n    datas.controlIndex = controlIndex;\n    datas.isControl = isControl;\n    datas.isLine = isLine;\n    setDragStart(moveable, e);\n    var _a = moveable.props,\n      roundRelative = _a.roundRelative,\n      _b = _a.minRoundControls,\n      minRoundControls = _b === void 0 ? [0, 0] : _b;\n    var state = moveable.state;\n    var width = state.width,\n      height = state.height;\n    datas.isRound = true;\n    datas.prevDist = [0, 0];\n    var borderRadius = getStyleBorderRadius(moveable);\n    var controlPoses = getBorderRadius(borderRadius || \"\", width, height, minRoundControls, true) || [];\n    datas.controlPoses = controlPoses;\n    state.borderRadiusState = getRadiusStyles(controlPoses, roundRelative, width, height).styles.join(\" \");\n    return params;\n  },\n  dragControl: function (moveable, e) {\n    var datas = e.datas;\n    var controlPoses = datas.controlPoses;\n    if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n      return false;\n    }\n    var index = datas.controlIndex;\n    var _a = getDragDist(e),\n      distX = _a[0],\n      distY = _a[1];\n    var dist = [distX, distY];\n    var delta = minus(dist, datas.prevDist);\n    var _b = moveable.props.maxRoundControls,\n      maxRoundControls = _b === void 0 ? [4, 4] : _b;\n    var _c = moveable.state,\n      width = _c.width,\n      height = _c.height;\n    var selectedControlPose = controlPoses[index];\n    var selectedVertical = selectedControlPose.vertical;\n    var selectedHorizontal = selectedControlPose.horizontal; // 0: [0, 1, 2, 3] maxCount === 1\n    // 0: [0, 2] maxCount === 2\n    // 1: [1, 3] maxCount === 2\n    // 0: [0] maxCount === 3\n    // 1: [1, 3] maxCount === 3\n\n    var dists = controlPoses.map(function (pose) {\n      var horizontal = pose.horizontal,\n        vertical = pose.vertical;\n      var poseDist = [horizontal * selectedHorizontal * dist[0], vertical * selectedVertical * dist[1]];\n      if (horizontal) {\n        if (maxRoundControls[0] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n          return poseDist;\n        }\n      } else if (maxRoundControls[1] === 0) {\n        poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n        return poseDist;\n      } else if (selectedVertical) {\n        if (maxRoundControls[1] === 1) {\n          return poseDist;\n        } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n          return poseDist;\n        }\n      }\n      return [0, 0];\n    });\n    dists[index] = dist;\n    var nextPoses = controlPoses.map(function (info, i) {\n      return __assign(__assign({}, info), {\n        pos: plus(info.pos, dists[i])\n      });\n    });\n    if (index < 4) {\n      nextPoses.slice(0, index + 1).forEach(function (info) {\n        info.virtual = false;\n      });\n    } else {\n      nextPoses.slice(4, index + 1).forEach(function (info) {\n        info.virtual = false;\n      });\n    }\n    datas.prevDist = [distX, distY];\n    return triggerRoundEvent(moveable, e, dist, delta, nextPoses);\n  },\n  dragControlEnd: function (moveable, e) {\n    var state = moveable.state;\n    state.borderRadiusState = \"\";\n    var datas = e.datas,\n      isDouble = e.isDouble;\n    if (!datas.isRound) {\n      return false;\n    }\n    var isControl = datas.isControl,\n      controlIndex = datas.controlIndex,\n      isLine = datas.isLine,\n      lineIndex = datas.lineIndex;\n    var controlPoses = datas.controlPoses;\n    var length = controlPoses.filter(function (_a) {\n      var virtual = _a.virtual;\n      return virtual;\n    }).length;\n    var _a = moveable.props.roundClickable,\n      roundClickable = _a === void 0 ? true : _a;\n    if (isDouble && roundClickable) {\n      if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n        removeBorderRadius(controlPoses, controlIndex);\n      } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n        var _b = calculatePointerDist(moveable, e),\n          distX = _b[0],\n          distY = _b[1];\n        addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n      }\n      if (length !== controlPoses.filter(function (_a) {\n        var virtual = _a.virtual;\n        return virtual;\n      }).length) {\n        triggerRoundEvent(moveable, e, [0, 0], [0, 0], controlPoses);\n      }\n    }\n    var params = fillEndParams(moveable, e, {});\n    triggerEvent(moveable, \"onRoundEnd\", params);\n    state.borderRadiusState = \"\";\n    return params;\n  },\n  dragGroupControlStart: function (moveable, e) {\n    var result = this.dragControlStart(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        return __assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i]\n        });\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n    return result;\n  },\n  dragGroupControl: function (moveable, e) {\n    var result = this.dragControl(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        return __assign(__assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i]\n        }), fillCSSObject({\n          borderRadius: result.borderRadius\n        }, ev));\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroup\", nextParams);\n    return nextParams;\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    var moveables = moveable.moveables;\n    var targets = moveable.props.targets;\n    var events = fillChildEvents(moveable, \"roundable\", e);\n    catchEvent(moveable, \"onRound\", function (parentEvent) {\n      var nextParams = __assign({\n        targets: moveable.props.targets,\n        events: events.map(function (ev, i) {\n          return __assign(__assign(__assign({}, ev), {\n            target: targets[i],\n            moveable: moveables[i],\n            currentTarget: moveables[i]\n          }), fillCSSObject({\n            borderRadius: parentEvent.borderRadius\n          }, ev));\n        })\n      }, parentEvent);\n      triggerEvent(moveable, \"onRoundGroup\", nextParams);\n    });\n    var result = this.dragControlEnd(moveable, e);\n    if (!result) {\n      return false;\n    }\n    var nextParams = __assign({\n      targets: moveable.props.targets,\n      events: events.map(function (ev, i) {\n        var _a;\n        return __assign(__assign({}, ev), {\n          target: targets[i],\n          moveable: moveables[i],\n          currentTarget: moveables[i],\n          lastEvent: (_a = ev.datas) === null || _a === void 0 ? void 0 : _a.lastEvent\n        });\n      })\n    }, result);\n    triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n    return nextParams;\n  },\n  unset: function (moveable) {\n    moveable.state.borderRadiusState = \"\";\n  }\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupStart\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag or double click the border area or controls, the `roundGroup` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroup\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupEnd\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *     e.events.forEach(ev => {\n *         ev.target.style.cssText += ev.cssText;\n *     });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\nfunction isIdentityMatrix(matrix, is3d) {\n  var n = is3d ? 4 : 3;\n  var identityMatrix = createIdentityMatrix(n);\n  var value = \"matrix\".concat(is3d ? \"3d\" : \"\", \"(\").concat(identityMatrix.join(\",\"), \")\");\n  return matrix === value || matrix === \"matrix(1,0,0,1,0,0)\";\n}\nvar BeforeRenderable = {\n  isPinch: true,\n  name: \"beforeRenderable\",\n  props: {},\n  events: {\n    onBeforeRenderStart: \"beforeRenderStart\",\n    onBeforeRender: \"beforeRender\",\n    onBeforeRenderEnd: \"beforeRenderEnd\",\n    onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n    onBeforeRenderGroup: \"beforeRenderGroup\",\n    onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\"\n  },\n  dragRelation: \"weak\",\n  setTransform: function (moveable, e) {\n    var _a = moveable.state,\n      is3d = _a.is3d,\n      target = _a.target,\n      targetMatrix = _a.targetMatrix;\n    var transform = target === null || target === void 0 ? void 0 : target.style.transform;\n    var cssMatrix = is3d ? \"matrix3d(\".concat(targetMatrix.join(\",\"), \")\") : \"matrix(\".concat(convertMatrixtoCSS(targetMatrix, true), \")\");\n    var startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n    e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n  },\n  resetStyle: function (e) {\n    var datas = e.datas;\n    datas.nextStyle = {};\n    datas.nextTransforms = e.datas.startTransforms;\n    datas.nextTransformAppendedIndexes = [];\n  },\n  fillDragStartParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      setTransform: function (transform) {\n        e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n      },\n      isPinch: !!e.isPinch\n    });\n  },\n  fillDragParams: function (moveable, e) {\n    return fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    });\n  },\n  dragStart: function (moveable, e) {\n    this.setTransform(moveable, e);\n    this.resetStyle(e);\n    triggerEvent(moveable, \"onBeforeRenderStart\", this.fillDragStartParams(moveable, e));\n  },\n  drag: function (moveable, e) {\n    this.resetStyle(e);\n    triggerEvent(moveable, \"onBeforeRender\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  dragEnd: function (moveable, e) {\n    triggerEvent(moveable, \"onBeforeRenderEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag\n    }));\n  },\n  dragGroupStart: function (moveable, e) {\n    var _this = this;\n    this.dragStart(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.setTransform(childMoveable, childEvent);\n      _this.resetStyle(childEvent);\n      return _this.fillDragStartParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      setTransform: function () {},\n      events: params\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    this.drag(moveable, e);\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      _this.resetStyle(childEvent);\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onBeforeRenderGroup\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      events: params\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n    triggerEvent(moveable, \"onBeforeRenderGroupEnd\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets\n    }));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  }\n};\nvar Renderable = {\n  name: \"renderable\",\n  props: {},\n  events: {\n    onRenderStart: \"renderStart\",\n    onRender: \"render\",\n    onRenderEnd: \"renderEnd\",\n    onRenderGroupStart: \"renderGroupStart\",\n    onRenderGroup: \"renderGroup\",\n    onRenderGroupEnd: \"renderGroupEnd\"\n  },\n  dragRelation: \"weak\",\n  dragStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch\n    }));\n  },\n  drag: function (moveable, e) {\n    triggerEvent(moveable, \"onRender\", this.fillDragParams(moveable, e));\n  },\n  dragAfter: function (moveable, e) {\n    if (e.resultCount) {\n      return this.drag(moveable, e);\n    }\n  },\n  dragEnd: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderEnd\", this.fillDragEndParams(moveable, e));\n  },\n  dragGroupStart: function (moveable, e) {\n    triggerEvent(moveable, \"onRenderGroupStart\", fillParams(moveable, e, {\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets\n    }));\n  },\n  dragGroup: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroup\", fillParams(moveable, e, __assign(__assign({\n      isPinch: !!e.isPinch,\n      targets: moveable.props.targets,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))), {\n      events: params\n    })));\n  },\n  dragGroupEnd: function (moveable, e) {\n    var _this = this;\n    var events = fillChildEvents(moveable, \"beforeRenderable\", e);\n    var moveables = moveable.moveables;\n    var params = events.map(function (childEvent, i) {\n      var childMoveable = moveables[i];\n      return _this.fillDragEndParams(childMoveable, childEvent);\n    });\n    triggerEvent(moveable, \"onRenderGroupEnd\", fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      targets: moveable.props.targets,\n      events: params,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e)))));\n  },\n  dragControlStart: function (moveable, e) {\n    return this.dragStart(moveable, e);\n  },\n  dragControl: function (moveable, e) {\n    return this.drag(moveable, e);\n  },\n  dragControlAfter: function (moveable, e) {\n    return this.dragAfter(moveable, e);\n  },\n  dragControlEnd: function (moveable, e) {\n    return this.dragEnd(moveable, e);\n  },\n  dragGroupControlStart: function (moveable, e) {\n    return this.dragGroupStart(moveable, e);\n  },\n  dragGroupControl: function (moveable, e) {\n    return this.dragGroup(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    return this.dragGroupEnd(moveable, e);\n  },\n  fillDragParams: function (moveable, e) {\n    return fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))));\n  },\n  fillDragEndParams: function (moveable, e) {\n    return fillParams(moveable, e, __assign({\n      isPinch: !!e.isPinch,\n      isDrag: e.isDrag,\n      transform: getNextTransformText(e)\n    }, fillCSSObject(getNextStyle(e))));\n  }\n};\nfunction triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e, requestInstant) {\n  var isStart = eventType === \"Start\";\n  var target = moveable.state.target;\n  var isRequest = e.isRequest;\n  if (!target || isStart && eventAffix.indexOf(\"Control\") > -1 && !isRequest && moveable.areaElement === e.inputEvent.target) {\n    return false;\n  } // \"drag\" \"Control\" \"After\"\n\n  var eventName = \"\".concat(eventOperation).concat(eventAffix).concat(eventType);\n  var conditionName = \"\".concat(eventOperation).concat(eventAffix, \"Condition\");\n  var isEnd = eventType === \"End\";\n  var isAfter = eventType === \"After\";\n  var isFirstStart = isStart && (!moveable.targetGesto || !moveable.controlGesto || !moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag());\n  if (isFirstStart) {\n    moveable.updateRect(eventType, true, false);\n  }\n  e.clientDistX = e.distX;\n  e.clientDistY = e.distY;\n  if (eventType === \"\" && !isRequest) {\n    // Convert distX, distY\n    convertDragDist(moveable.state, e);\n  } // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n\n  var ables = __spreadArray([], moveable[ableType], true);\n  if (isRequest) {\n    var requestAble_1 = e.requestAble;\n    if (!ables.some(function (able) {\n      return able.name === requestAble_1;\n    })) {\n      ables.push.apply(ables, moveable.props.ables.filter(function (able) {\n        return able.name === requestAble_1;\n      }));\n    }\n  }\n  if (!ables.length || ables.every(function (able) {\n    return able.dragRelation;\n  })) {\n    return false;\n  }\n  var eventAbles = __spreadArray(__spreadArray([BeforeRenderable], ables, true), [Renderable], false).filter(function (able) {\n    return able[eventName];\n  });\n  var datas = e.datas;\n  if (isFirstStart) {\n    eventAbles.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  var inputEvent = e.inputEvent;\n  var inputTarget;\n  if (isEnd && inputEvent) {\n    inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n  }\n  var resultCount = 0;\n  var isDragStop = false;\n  var stop = function () {\n    var _a;\n    isDragStop = true;\n    (_a = e.stop) === null || _a === void 0 ? void 0 : _a.call(e);\n  };\n  var results = eventAbles.filter(function (able) {\n    var ableName = able.name;\n    var nextDatas = datas[ableName] || (datas[ableName] = {});\n    if (isStart) {\n      nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n    }\n    if (nextDatas.isEventStart) {\n      var result = able[eventName](moveable, __assign(__assign({}, e), {\n        stop: stop,\n        resultCount: resultCount,\n        datas: nextDatas,\n        originalDatas: datas,\n        inputTarget: inputTarget\n      }));\n      moveable._emitter.off();\n      if (isStart && result === false) {\n        nextDatas.isEventStart = false;\n      }\n      resultCount += result || nextDatas.isEventStart ? 1 : 0;\n      return result;\n    }\n    return false;\n  });\n  var isUpdate = results.length;\n  var isForceEnd = false; // end ables\n\n  if (isDragStop) {\n    isForceEnd = true;\n  }\n  if (!isForceEnd && isStart && eventAbles.length && !isUpdate) {\n    isForceEnd = eventAbles.filter(function (able) {\n      var ableName = able.name;\n      var nextDatas = datas[ableName];\n      if (nextDatas.isEventStart) {\n        if (able.dragRelation === \"strong\") {\n          return false;\n        } // start drag\n\n        return true;\n      } // cancel event\n\n      return false;\n    }).length;\n  }\n  if (isEnd || isForceEnd) {\n    moveable.state.gestos = {};\n    if (moveable.moveables) {\n      moveable.moveables.forEach(function (childMoveable) {\n        childMoveable.state.gestos = {};\n      });\n    }\n    eventAbles.forEach(function (able) {\n      able.unset && able.unset(moveable);\n    });\n  }\n  if (isStart && !isForceEnd && !isRequest && isUpdate) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n  }\n  if (moveable.isUnmounted || isForceEnd) {\n    return false;\n  }\n  if (!isStart && isUpdate && !requestInstant || isEnd) {\n    var flushSync = moveable.props.flushSync || defaultSync;\n    flushSync(function () {\n      moveable.updateRect(isEnd ? eventType : \"\", true, false);\n      moveable.forceUpdate();\n    });\n  }\n  if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n    triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n  }\n  return true;\n}\nfunction checkMoveableTarget(moveable) {\n  return function (e) {\n    var dragTarget = moveable.props.dragTarget;\n    var eventTarget = e.inputEvent.target;\n    var areaElement = moveable.areaElement;\n    return dragTarget && (eventTarget === dragTarget || dragTarget.contains(eventTarget)) || eventTarget === areaElement || !moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget) || hasClass(eventTarget, \"moveable-area\") || hasClass(eventTarget, \"moveable-padding\") || hasClass(eventTarget, \"moveable-edgeDraggable\");\n  };\n}\nfunction getTargetAbleGesto(moveable, moveableTarget, eventAffix) {\n  var controlBox = moveable.controlBox.getElement();\n  var targets = [];\n  var dragTarget = moveable.props.dragTarget;\n  targets.push(controlBox);\n  if (!moveable.props.dragArea || dragTarget) {\n    targets.push(moveableTarget);\n  }\n  return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n    dragStart: checkMoveableTarget(moveable),\n    pinchStart: checkMoveableTarget(moveable)\n  });\n}\nfunction getAbleGesto(moveable, target, ableType, eventAffix, conditionFunctions) {\n  if (conditionFunctions === void 0) {\n    conditionFunctions = {};\n  }\n  var isTargetAbles = ableType === \"targetAbles\";\n  var _a = moveable.props,\n    pinchOutside = _a.pinchOutside,\n    pinchThreshold = _a.pinchThreshold,\n    preventClickEventOnDrag = _a.preventClickEventOnDrag,\n    preventClickDefault = _a.preventClickDefault,\n    checkInput = _a.checkInput;\n  var options = {\n    preventDefault: true,\n    preventRightClick: true,\n    preventWheelClick: true,\n    container: window,\n    pinchThreshold: pinchThreshold,\n    pinchOutside: pinchOutside,\n    preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n    preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n    preventClickEventByCondition: isTargetAbles ? null : function (e) {\n      return moveable.controlBox.getElement().contains(e.target);\n    },\n    checkInput: isTargetAbles ? checkInput : false\n  };\n  var gesto = new Gesto(target, options);\n  var isControl = eventAffix === \"Control\";\n  [\"drag\", \"pinch\"].forEach(function (eventOperation) {\n    [\"Start\", \"\", \"End\"].forEach(function (eventType) {\n      gesto.on(\"\".concat(eventOperation).concat(eventType), function (e) {\n        var _a;\n        var eventName = e.eventType;\n        if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n          e.stop();\n          return;\n        }\n        var result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n        if (!result) {\n          e.stop();\n        } else if (moveable.props.stopPropagation || eventType === \"Start\" && isControl) {\n          (_a = e === null || e === void 0 ? void 0 : e.inputEvent) === null || _a === void 0 ? void 0 : _a.stopPropagation();\n        }\n      });\n    });\n  });\n  return gesto;\n}\nvar EventManager = /*#__PURE__*/\nfunction () {\n  function EventManager(target, moveable, eventName) {\n    var _this = this;\n    this.target = target;\n    this.moveable = moveable;\n    this.eventName = eventName;\n    this.ables = [];\n    this._onEvent = function (e) {\n      var eventName = _this.eventName;\n      var moveable = _this.moveable;\n      if (moveable.state.disableNativeEvent) {\n        return;\n      }\n      _this.ables.forEach(function (able) {\n        able[eventName](moveable, {\n          inputEvent: e\n        });\n      });\n    };\n    target.addEventListener(eventName.toLowerCase(), this._onEvent);\n  }\n  var __proto = EventManager.prototype;\n  __proto.setAbles = function (ables) {\n    this.ables = ables;\n  };\n  __proto.destroy = function () {\n    this.target.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n    this.target = null;\n    this.moveable = null;\n  };\n  return EventManager;\n}();\nfunction getShadowRoot(parentElement) {\n  if (parentElement && parentElement.getRootNode) {\n    var rootNode = parentElement.getRootNode();\n    if (rootNode.nodeType === 11) {\n      return rootNode;\n    }\n  }\n  return;\n}\nfunction getMatrixStackInfo(target, container, checkContainer) {\n  var el = target;\n  var matrixes = [];\n  var documentElement = document.documentElement || document.body;\n  var requestEnd = !checkContainer && target === container || target === documentElement;\n  var isEnd = requestEnd;\n  var is3d = false;\n  var n = 3;\n  var transformOrigin;\n  var targetTransformOrigin;\n  var targetMatrix;\n  var hasFixed = false;\n  var offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n  var zoom = 1;\n  while (el && !isEnd) {\n    isEnd = requestEnd;\n    var style = getComputedStyle(el);\n    var position = style.position;\n    var transform = getElementTransform(el, style);\n    var matrix = convertCSStoMatrix(getTransformMatrix(transform));\n    var isFixed = position === \"fixed\";\n    var fixedInfo = {\n      hasTransform: false,\n      fixedContainer: null\n    };\n    if (isFixed) {\n      hasFixed = true;\n      fixedInfo = getPositionFixedInfo(el);\n      offsetContainer = fixedInfo.fixedContainer;\n    } // convert 3 to 4\n\n    var length = matrix.length;\n    if (!is3d && length === 16) {\n      is3d = true;\n      n = 4;\n      convert3DMatrixes(matrixes);\n      if (targetMatrix) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n      }\n    }\n    if (is3d && length === 9) {\n      matrix = convertDimension(matrix, 3, 4);\n    }\n    var _a = getOffsetPosInfo(el, target, style),\n      tagName = _a.tagName,\n      hasOffset = _a.hasOffset,\n      isSVG = _a.isSVG,\n      origin = _a.origin,\n      targetOrigin = _a.targetOrigin,\n      offsetPos = _a.offset;\n    var offsetLeft = offsetPos[0],\n      offsetTop = offsetPos[1];\n    if (tagName === \"svg\" && targetMatrix) {\n      // scale matrix for svg's SVGElements.\n      matrixes.push({\n        type: \"target\",\n        target: el,\n        matrix: getSVGMatrix(el, n)\n      });\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createIdentityMatrix(n)\n      });\n    }\n    var offsetParent = void 0;\n    var isOffsetEnd = false;\n    var isStatic = false;\n    var targetZoom = parseFloat(style.zoom) || 1;\n    if (isFixed) {\n      offsetParent = fixedInfo.fixedContainer;\n      isOffsetEnd = true;\n    } else {\n      var offsetInfo = getOffsetInfo(el, container, false, true, style);\n      var offsetZoom = offsetInfo.offsetZoom;\n      offsetParent = offsetInfo.offsetParent;\n      isOffsetEnd = offsetInfo.isEnd;\n      isStatic = offsetInfo.isStatic;\n      zoom *= offsetZoom;\n      if (offsetZoom !== 1 && isStatic) {\n        offsetLeft -= offsetParent.offsetLeft;\n        offsetTop -= offsetParent.offsetTop;\n      } else if (IS_FIREFOX) {\n        var parentSlotElement = offsetInfo.parentSlotElement;\n        if (parentSlotElement) {\n          var customOffsetParent = offsetParent;\n          var customOffsetLeft = 0;\n          var customOffsetTop = 0;\n          while (customOffsetParent) {\n            if (!getShadowRoot(customOffsetParent)) {\n              break;\n            }\n            customOffsetLeft += customOffsetParent.offsetLeft;\n            customOffsetTop += customOffsetParent.offsetTop;\n            customOffsetParent = customOffsetParent.offsetParent;\n          }\n          offsetLeft -= customOffsetLeft;\n          offsetTop -= customOffsetTop;\n        }\n      }\n    }\n    if (IS_WEBKIT && !IS_SAFARI_ABOVE15 && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n      offsetLeft -= offsetParent.offsetLeft;\n      offsetTop -= offsetParent.offsetTop;\n      requestEnd = requestEnd || isOffsetEnd;\n    }\n    var parentClientLeft = 0;\n    var parentClientTop = 0;\n    var fixedClientLeft = 0;\n    var fixedClientTop = 0;\n    if (isFixed) {\n      if (hasOffset && fixedInfo.hasTransform) {\n        // border\n        fixedClientLeft = offsetParent.clientLeft;\n        fixedClientTop = offsetParent.clientTop;\n      }\n    } else {\n      if (hasOffset && offsetContainer !== offsetParent) {\n        // border\n        parentClientLeft = offsetParent.clientLeft;\n        parentClientTop = offsetParent.clientTop;\n      }\n      if (hasOffset && offsetParent === documentElement) {\n        var margin = getBodyOffset(el, false, style);\n        offsetLeft += margin[0];\n        offsetTop += margin[1];\n      }\n    }\n    matrixes.push({\n      type: \"target\",\n      target: el,\n      matrix: getAbsoluteMatrix(matrix, n, origin)\n    });\n    if (hasOffset) {\n      var isElementTarget = el === target;\n      var scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n      var scrollTop = isElementTarget ? 0 : el.scrollTop;\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        matrix: createOriginMatrix([offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft, offsetTop - scrollTop + parentClientTop - fixedClientTop], n)\n      });\n    } else {\n      // svg\n      matrixes.push({\n        type: \"offset\",\n        target: el,\n        origin: origin\n      });\n    } // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n\n    if (targetZoom !== 1) {\n      matrixes.push({\n        type: \"zoom\",\n        target: el,\n        matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0])\n      });\n    }\n    if (!targetMatrix) {\n      targetMatrix = matrix;\n    }\n    if (!transformOrigin) {\n      transformOrigin = origin;\n    }\n    if (!targetTransformOrigin) {\n      targetTransformOrigin = targetOrigin;\n    }\n    if (isEnd || isFixed) {\n      break;\n    } else {\n      el = offsetParent;\n      requestEnd = isOffsetEnd;\n    }\n    if (!checkContainer || el === documentElement) {\n      isEnd = requestEnd;\n    }\n  }\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(n);\n  }\n  if (!transformOrigin) {\n    transformOrigin = [0, 0];\n  }\n  if (!targetTransformOrigin) {\n    targetTransformOrigin = [0, 0];\n  }\n  return {\n    zoom: zoom,\n    offsetContainer: offsetContainer,\n    matrixes: matrixes,\n    targetMatrix: targetMatrix,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetTransformOrigin,\n    is3d: is3d,\n    hasFixed: hasFixed\n  };\n}\nfunction calculateMatrixStack(target, container, rootContainer, isAbsolute3d) {\n  var _a;\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var _b = getMatrixStackInfo(target, container),\n    matrixes = _b.matrixes,\n    is3d = _b.is3d,\n    prevTargetMatrix = _b.targetMatrix,\n    transformOrigin = _b.transformOrigin,\n    targetOrigin = _b.targetOrigin,\n    offsetContainer = _b.offsetContainer,\n    hasFixed = _b.hasFixed,\n    containerZoom = _b.zoom; // prevMatrix\n\n  var _c = getMatrixStackInfo(offsetContainer, rootContainer, true),\n    rootMatrixes = _c.matrixes,\n    isRoot3d = _c.is3d,\n    offsetRootContainer = _c.offsetContainer,\n    rootZoom = _c.zoom; // prevRootMatrix\n  // if (rootContainer === document.body) {\n  //     console.log(offsetContainer, rootContainer, rootMatrixes);\n  // }\n\n  var isNext3d = isAbsolute3d || isRoot3d || is3d;\n  var n = isNext3d ? 4 : 3;\n  var isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n  var targetMatrix = prevTargetMatrix; // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n  // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n\n  var allMatrix = createIdentityMatrix(n);\n  var rootMatrix = createIdentityMatrix(n);\n  var beforeMatrix = createIdentityMatrix(n);\n  var offsetMatrix = createIdentityMatrix(n);\n  var length = matrixes.length;\n  rootMatrixes.reverse();\n  matrixes.reverse();\n  if (!is3d && isNext3d) {\n    targetMatrix = convertDimension(targetMatrix, 3, 4);\n    convert3DMatrixes(matrixes);\n  }\n  if (!isRoot3d && isNext3d) {\n    convert3DMatrixes(rootMatrixes);\n  } // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n  // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n  // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n  // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n  rootMatrixes.forEach(function (info) {\n    rootMatrix = multiply(rootMatrix, info.matrix, n);\n  });\n  var originalRootContainer = rootContainer || document.body;\n  var endContainer = ((_a = rootMatrixes[0]) === null || _a === void 0 ? void 0 : _a.target) || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n  var rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce(function (matrix, info) {\n    return multiply(matrix, info.matrix, n);\n  }, createIdentityMatrix(n));\n  matrixes.forEach(function (info, i) {\n    if (length - 2 === i) {\n      // length - 3\n      beforeMatrix = allMatrix.slice();\n    }\n    if (length - 1 === i) {\n      // length - 2\n      offsetMatrix = allMatrix.slice();\n    } // calculate for SVGElement\n\n    if (!info.matrix) {\n      var nextInfo = matrixes[i + 1];\n      var offset = getSVGOffset(info, nextInfo, endContainer, n, multiply(rootMatrixBeforeOffset, allMatrix, n));\n      info.matrix = createOriginMatrix(offset, n);\n    }\n    allMatrix = multiply(allMatrix, info.matrix, n);\n  });\n  var isMatrix3d = !isSVGGraphicElement && is3d;\n  if (!targetMatrix) {\n    targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n  }\n  var targetTransform = makeMatrixCSS(isSVGGraphicElement && targetMatrix.length === 16 ? convertDimension(targetMatrix, 4, 3) : targetMatrix, isMatrix3d);\n  var originalRootMatrix = rootMatrix;\n  rootMatrix = ignoreDimension(rootMatrix, n, n);\n  return {\n    hasZoom: containerZoom !== 1 || rootZoom !== 1,\n    hasFixed: hasFixed,\n    rootMatrix: rootMatrix,\n    originalRootMatrix: originalRootMatrix,\n    beforeMatrix: beforeMatrix,\n    offsetMatrix: offsetMatrix,\n    allMatrix: allMatrix,\n    targetMatrix: targetMatrix,\n    targetTransform: targetTransform,\n    transformOrigin: transformOrigin,\n    targetOrigin: targetOrigin,\n    is3d: isNext3d,\n    offsetContainer: offsetContainer,\n    offsetRootContainer: offsetRootContainer\n  };\n}\nfunction calculateElementInfo(target, container, rootContainer, isAbsolute3d) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  var width = 0;\n  var height = 0;\n  var rotation = 0;\n  var allResult = {};\n  var sizes = getSize(target);\n  if (target) {\n    width = sizes.offsetWidth;\n    height = sizes.offsetHeight;\n  }\n  if (target) {\n    var result = calculateMatrixStack(target, container, rootContainer, isAbsolute3d);\n    var position = calculateMoveablePosition(result.allMatrix, result.transformOrigin, width, height);\n    allResult = __assign(__assign({}, result), position);\n    var rotationPosition = calculateMoveablePosition(result.allMatrix, [50, 50], 100, 100);\n    rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n  }\n  var n = isAbsolute3d ? 4 : 3;\n  return __assign(__assign(__assign({\n    hasZoom: false,\n    width: width,\n    height: height,\n    rotation: rotation\n  }, sizes), {\n    originalRootMatrix: createIdentityMatrix(n),\n    rootMatrix: createIdentityMatrix(n),\n    beforeMatrix: createIdentityMatrix(n),\n    offsetMatrix: createIdentityMatrix(n),\n    allMatrix: createIdentityMatrix(n),\n    targetMatrix: createIdentityMatrix(n),\n    targetTransform: \"\",\n    transformOrigin: [0, 0],\n    targetOrigin: [0, 0],\n    is3d: !!isAbsolute3d,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    origin: [0, 0],\n    pos1: [0, 0],\n    pos2: [0, 0],\n    pos3: [0, 0],\n    pos4: [0, 0],\n    direction: 1,\n    hasFixed: false,\n    offsetContainer: null,\n    offsetRootContainer: null\n  }), allResult);\n}\nfunction getElementInfo(target, container, rootContainer) {\n  if (rootContainer === void 0) {\n    rootContainer = container;\n  }\n  return calculateElementInfo(target, container, rootContainer, true);\n}\nfunction getMoveableTargetInfo(moveableElement, target, container, parentContainer, rootContainer, requestStyle) {\n  if (requestStyle === void 0) {\n    requestStyle = [];\n  }\n  var beforeDirection = 1;\n  var beforeOrigin = [0, 0];\n  var targetClientRect = resetClientRect();\n  var moveableClientRect = resetClientRect();\n  var containerClientRect = resetClientRect();\n  var rootContainerClientRect = resetClientRect();\n  var offsetDelta = [0, 0];\n  var style = {};\n  var result = calculateElementInfo(target, container, rootContainer, true);\n  if (target) {\n    var computedStyle_1 = getComputedStyle(target);\n    requestStyle.forEach(function (name) {\n      style[name] = computedStyle_1[name];\n    });\n    var n = result.is3d ? 4 : 3;\n    var beforePosition = calculateMoveablePosition(result.offsetMatrix, plus(result.transformOrigin, getOrigin(result.targetMatrix, n)), result.width, result.height);\n    beforeDirection = beforePosition.direction;\n    beforeOrigin = plus(beforePosition.origin, [beforePosition.left - result.left, beforePosition.top - result.top]);\n    rootContainerClientRect = getClientRect(result.offsetRootContainer);\n    var offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent || result.offsetRootContainer;\n    if (result.hasZoom) {\n      var absoluteTargetPosition = calculateMoveablePosition(multiply(result.originalRootMatrix, result.allMatrix), result.transformOrigin, result.width, result.height);\n      var absoluteContainerPosition = calculateMoveablePosition(result.originalRootMatrix, getTransformOrigin(getComputedStyle(offsetContainer)).map(function (pos) {\n        return parseFloat(pos);\n      }), offsetContainer.offsetWidth, offsetContainer.offsetHeight);\n      targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n      containerClientRect = getClientRectByPosition(absoluteContainerPosition, rootContainerClientRect, offsetContainer, true);\n      if (moveableElement) {\n        var left = absoluteTargetPosition.left;\n        var top = absoluteTargetPosition.top;\n        moveableClientRect = getClientRectByPosition({\n          left: left,\n          top: top,\n          bottom: top,\n          right: top\n        }, rootContainerClientRect);\n      }\n    } else {\n      targetClientRect = getClientRect(target);\n      containerClientRect = getClientRect(offsetContainer, true);\n      if (moveableElement) {\n        moveableClientRect = getClientRect(moveableElement);\n      }\n      var containerClientRectLeft = containerClientRect.left,\n        containerClientRectTop = containerClientRect.top,\n        containterClientLeft = containerClientRect.clientLeft,\n        containerClientTop = containerClientRect.clientTop;\n      var clientDelta = [targetClientRect.left - containerClientRectLeft, targetClientRect.top - containerClientRectTop];\n      offsetDelta = minus(calculateInversePosition(result.rootMatrix, clientDelta, 4), [containterClientLeft + result.left, containerClientTop + result.top]);\n    }\n  }\n  return __assign({\n    targetClientRect: targetClientRect,\n    containerClientRect: containerClientRect,\n    moveableClientRect: moveableClientRect,\n    rootContainerClientRect: rootContainerClientRect,\n    beforeDirection: beforeDirection,\n    beforeOrigin: beforeOrigin,\n    originalBeforeOrigin: beforeOrigin,\n    target: target,\n    style: style,\n    offsetDelta: offsetDelta\n  }, result);\n}\nfunction getPersistState(rect) {\n  var pos1 = rect.pos1,\n    pos2 = rect.pos2,\n    pos3 = rect.pos3,\n    pos4 = rect.pos4;\n  if (!pos1 || !pos2 || !pos3 || !pos4) {\n    return null;\n  }\n  var minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n  var posDelta = [minPos.minX, minPos.minY];\n  var origin = minus(rect.origin, posDelta);\n  pos1 = minus(pos1, posDelta);\n  pos2 = minus(pos2, posDelta);\n  pos3 = minus(pos3, posDelta);\n  pos4 = minus(pos4, posDelta);\n  return __assign(__assign({}, rect), {\n    left: rect.left,\n    top: rect.top,\n    posDelta: posDelta,\n    pos1: pos1,\n    pos2: pos2,\n    pos3: pos3,\n    pos4: pos4,\n    origin: origin,\n    beforeOrigin: origin,\n    // originalBeforeOrigin: origin,\n    isPersisted: true\n  });\n}\nvar MoveableManager = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableManager, _super);\n  function MoveableManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = __assign({\n      container: null,\n      gestos: {},\n      renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n      disableNativeEvent: false,\n      posDelta: [0, 0]\n    }, getMoveableTargetInfo(null));\n    _this.renderState = {};\n    _this.enabledAbles = [];\n    _this.targetAbles = [];\n    _this.controlAbles = [];\n    _this.rotation = 0;\n    _this.scale = [1, 1];\n    _this.isMoveableMounted = false;\n    _this.isUnmounted = false;\n    _this.events = {\n      \"mouseEnter\": null,\n      \"mouseLeave\": null\n    };\n    _this._emitter = new EventEmitter();\n    _this._prevTarget = null;\n    _this._prevDragArea = false;\n    _this._isPropTargetChanged = false;\n    _this._hasFirstTarget = false;\n    _this._observer = null;\n    _this._observerId = 0;\n    _this._rootContainer = null;\n    _this._viewContainer = null;\n    _this._viewClassNames = [];\n    _this.checkUpdateRect = function () {\n      if (_this.isDragging()) {\n        return;\n      }\n      var parentMoveable = _this.props.parentMoveable;\n      if (parentMoveable) {\n        parentMoveable.checkUpdateRect();\n        return;\n      }\n      cancelAnimationFrame(_this._observerId);\n      _this._observerId = requestAnimationFrame(function () {\n        if (_this.isDragging()) {\n          return;\n        }\n        _this.updateRect();\n      });\n    };\n    _this._onPreventClick = function (e) {\n      e.stopPropagation();\n      e.preventDefault(); // removeEvent(window, \"click\", this._onPreventClick, true);\n    };\n\n    return _this;\n  }\n  var __proto = MoveableManager.prototype;\n  __proto.render = function () {\n    var props = this.props;\n    var state = this.getState();\n    var parentPosition = props.parentPosition,\n      className = props.className,\n      propsTarget = props.target,\n      zoom = props.zoom,\n      cspNonce = props.cspNonce,\n      translateZ = props.translateZ,\n      ControlBoxElement = props.cssStyled,\n      portalContainer = props.portalContainer,\n      groupable = props.groupable;\n    this._checkUpdateRootContainer();\n    this.checkUpdate();\n    this.updateRenderPoses();\n    var _a = parentPosition || [0, 0],\n      parentLeft = _a[0],\n      parentTop = _a[1];\n    var left = state.left,\n      top = state.top,\n      stateTarget = state.target,\n      direction = state.direction,\n      hasFixed = state.hasFixed,\n      offsetDelta = state.offsetDelta;\n    var groupTargets = props.targets;\n    var isDragging = this.isDragging();\n    var ableAttributes = {};\n    this.getEnabledAbles().forEach(function (able) {\n      ableAttributes[\"data-able-\".concat(able.name.toLowerCase())] = true;\n    });\n    var ableClassName = this._getAbleClassName();\n    var isDisplay = groupTargets && groupTargets.length && (stateTarget || groupable) || propsTarget || !this._hasFirstTarget && this.state.isPersisted;\n    var isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n    var translate = [left - parentLeft, top - parentTop];\n    if (!groupable && props.useAccuratePosition) {\n      translate[0] += offsetDelta[0];\n      translate[1] += offsetDelta[1];\n    }\n    return React.createElement(ControlBoxElement, __assign({\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: \"\".concat(prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\"), \" \").concat(ableClassName, \" \").concat(className)\n    }, ableAttributes, {\n      onClick: this._onPreventClick,\n      portalContainer: portalContainer,\n      style: {\n        \"position\": hasFixed ? \"fixed\" : \"absolute\",\n        \"display\": isDisplay ? \"block\" : \"none\",\n        \"visibility\": isVisible ? \"visible\" : \"hidden\",\n        \"transform\": \"translate3d(\".concat(translate[0], \"px, \").concat(translate[1], \"px, \").concat(translateZ, \")\"),\n        \"--zoom\": zoom,\n        \"--zoompx\": \"\".concat(zoom, \"px\")\n      }\n    }), this.renderAbles(), this._renderLines());\n  };\n  __proto.componentDidMount = function () {\n    this.isMoveableMounted = true;\n    this.isUnmounted = false;\n    this.controlBox.getElement();\n    var props = this.props;\n    var parentMoveable = props.parentMoveable,\n      container = props.container,\n      wrapperMoveable = props.wrapperMoveable;\n    this._checkUpdateRootContainer();\n    this._checkUpdateViewContainer();\n    this._updateTargets();\n    this._updateNativeEvents();\n    this._updateEvents();\n    this.updateCheckInput();\n    this._updateObserver(this.props);\n    if (!container && !parentMoveable && !wrapperMoveable && !this.state.isPersisted) {\n      this.updateRect(\"\", false, false);\n      this.forceUpdate();\n    }\n  };\n  __proto.componentDidUpdate = function (prevProps) {\n    this._checkUpdateRootContainer();\n    this._checkUpdateViewContainer();\n    this._updateNativeEvents();\n    this._updateEvents();\n    this._updateTargets();\n    this.updateCheckInput();\n    this._updateObserver(prevProps);\n  };\n  __proto.componentWillUnmount = function () {\n    this.isMoveableMounted = false;\n    this.isUnmounted = true;\n    this._emitter.off();\n    var viewContainer = this._viewContainer;\n    if (viewContainer) {\n      this._changeAbleViewClassNames([]);\n    }\n    unset(this, \"targetGesto\");\n    unset(this, \"controlGesto\");\n    var events = this.events;\n    for (var name in events) {\n      var manager = events[name];\n      manager && manager.destroy();\n    }\n  };\n  __proto.getTargets = function () {\n    var target = this.props.target;\n    return target ? [target] : [];\n  };\n  /**\n   * Get the able used in MoveableManager.\n   * @method Moveable#getAble\n   * @param - able name\n   */\n\n  __proto.getAble = function (ableName) {\n    var ables = this.props.ables || [];\n    return find(ables, function (able) {\n      return able.name === ableName;\n    });\n  };\n  __proto.getContainer = function () {\n    var _a = this.props,\n      parentMoveable = _a.parentMoveable,\n      wrapperMoveable = _a.wrapperMoveable,\n      container = _a.container;\n    return container || wrapperMoveable && wrapperMoveable.getContainer() || parentMoveable && parentMoveable.getContainer() || this.controlBox.getElement().parentElement;\n  };\n  /**\n   * Check if the target is an element included in the moveable.\n   * @method Moveable#isMoveableElement\n   * @param - the target\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * window.addEventListener(\"click\", e => {\n   *     if (!moveable.isMoveableElement(e.target)) {\n   *         moveable.target = e.target;\n   *     }\n   * });\n   */\n\n  __proto.isMoveableElement = function (target) {\n    var _a;\n    return target && (((_a = target.getAttribute) === null || _a === void 0 ? void 0 : _a.call(target, \"class\")) || \"\").indexOf(PREFIX) > -1;\n  };\n  /**\n   * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n   * @method Moveable#dragStart\n   * @param - external `MouseEvent`or `TouchEvent`\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (!moveable.isMoveableElement(e.target)) {\n   *          moveable.dragStart(e);\n   *     }\n   * });\n   */\n\n  __proto.dragStart = function (e) {\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    if (targetGesto && checkMoveableTarget(this)({\n      inputEvent: e\n    })) {\n      if (!targetGesto.isFlag()) {\n        targetGesto.triggerDragStart(e);\n      }\n    } else if (controlGesto && this.isMoveableElement(e.target)) {\n      if (!controlGesto.isFlag()) {\n        controlGesto.triggerDragStart(e);\n      }\n    }\n    return this;\n  };\n  /**\n   * Hit test an element or rect on a moveable target.\n   * (100% = 100)\n   * @method Moveable#hitTest\n   * @param - element or rect to test\n   * @return - Get hit test rate (rate > 0 is hitted)\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (moveable.hitTest(e.target) > 0) {\n   *          console.log(\"hiited\");\n   *     }\n   * });\n   */\n\n  __proto.hitTest = function (el) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return 0;\n    }\n    var rect;\n    if (el instanceof Element) {\n      var clientRect = el.getBoundingClientRect();\n      rect = {\n        left: clientRect.left,\n        top: clientRect.top,\n        width: clientRect.width,\n        height: clientRect.height\n      };\n    } else {\n      rect = __assign({\n        width: 0,\n        height: 0\n      }, el);\n    }\n    var rectLeft = rect.left,\n      rectTop = rect.top,\n      rectWidth = rect.width,\n      rectHeight = rect.height;\n    var points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n    var size = getOverlapSize(points, [[rectLeft, rectTop], [rectLeft + rectWidth, rectTop], [rectLeft + rectWidth, rectTop + rectHeight], [rectLeft, rectTop + rectHeight]]);\n    var totalSize = getAreaSize(points);\n    if (!size || !totalSize) {\n      return 0;\n    }\n    return Math.min(100, size / totalSize * 100);\n  };\n  /**\n   * Whether the coordinates are inside Moveable\n   * @method Moveable#isInside\n   * @param - x coordinate\n   * @param - y coordinate\n   * @return - True if the coordinate is in moveable or false\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.body.addEventListener(\"mousedown\", e => {\n   *     if (moveable.isInside(e.clientX, e.clientY)) {\n   *          console.log(\"inside\");\n   *     }\n   * });\n   */\n\n  __proto.isInside = function (clientX, clientY) {\n    var _a = this.state,\n      target = _a.target,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      pos3 = _a.pos3,\n      pos4 = _a.pos4,\n      targetClientRect = _a.targetClientRect;\n    if (!target) {\n      return false;\n    }\n    return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n  };\n  /**\n   * If the width, height, left, and top of all elements change, update the shape of the moveable.\n   * @method Moveable#updateRect\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * window.addEventListener(\"resize\", e => {\n   *     moveable.updateRect();\n   * });\n   */\n\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    var props = this.props;\n    var parentMoveable = props.parentMoveable;\n    var state = this.state;\n    var target = state.target || this.props.target;\n    var container = this.getContainer();\n    var rootContainer = parentMoveable ? parentMoveable._rootContainer : this._rootContainer;\n    var nextState = getMoveableTargetInfo(this.controlBox && this.controlBox.getElement(), target, container, container, rootContainer || container, this._getRequestStyles());\n    if (!target && this._hasFirstTarget && props.persistData) {\n      var persistState = getPersistState(props.persistData);\n      for (var name in persistState) {\n        nextState[name] = persistState[name];\n      }\n    }\n    this.updateState(nextState, parentMoveable ? false : isSetState);\n  };\n  /**\n   * Check if the moveable state is being dragged.\n   * @method Moveable#isDragging\n   * @param - If you want to check if able is dragging, specify ableName.\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * // false\n   * console.log(moveable.isDragging());\n   *\n   * moveable.on(\"drag\", () => {\n   *   // true\n   *   console.log(moveable.isDragging());\n   * });\n   */\n\n  __proto.isDragging = function (ableName) {\n    var _a, _b;\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    if (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) {\n      if (!ableName) {\n        return true;\n      }\n      var data = targetGesto.getEventData();\n      return !!((_a = data[ableName]) === null || _a === void 0 ? void 0 : _a.isEventStart);\n    }\n    if (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag()) {\n      if (!ableName) {\n        return true;\n      }\n      var data = controlGesto.getEventData();\n      return !!((_b = data[ableName]) === null || _b === void 0 ? void 0 : _b.isEventStart);\n    }\n    return false;\n  };\n  /**\n   * If the width, height, left, and top of the only target change, update the shape of the moveable.\n   * @method Moveable#updateTarget\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.updateTarget();\n   */\n\n  __proto.updateTarget = function (type) {\n    this.updateRect(type, true);\n  };\n  /**\n   * You can get the vertex information, position and offset size information of the target based on the container.\n   * @method Moveable#getRect\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * const rectInfo = moveable.getRect();\n   */\n\n  __proto.getRect = function () {\n    var state = this.state;\n    var poses = getAbsolutePosesByState(this.state);\n    var pos1 = poses[0],\n      pos2 = poses[1],\n      pos3 = poses[2],\n      pos4 = poses[3];\n    var rect = getRect(poses);\n    var offsetWidth = state.width,\n      offsetHeight = state.height;\n    var width = rect.width,\n      height = rect.height,\n      left = rect.left,\n      top = rect.top;\n    var statePos = [state.left, state.top];\n    var origin = plus(statePos, state.origin);\n    var beforeOrigin = plus(statePos, state.beforeOrigin);\n    var transformOrigin = state.transformOrigin;\n    return {\n      width: width,\n      height: height,\n      left: left,\n      top: top,\n      pos1: pos1,\n      pos2: pos2,\n      pos3: pos3,\n      pos4: pos4,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight,\n      beforeOrigin: beforeOrigin,\n      origin: origin,\n      transformOrigin: transformOrigin,\n      rotation: this.getRotation()\n    };\n  };\n  /**\n   * Get a manager that manages the moveable's state and props.\n   * @method Moveable#getManager\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * const manager = moveable.getManager(); // real moveable class instance\n   */\n\n  __proto.getManager = function () {\n    return this;\n  };\n  /**\n   * You can stop the dragging currently in progress through a method from outside.\n   * @method Moveable#stopDrag\n   * @return - The Rect Info\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.stopDrag();\n   */\n\n  __proto.stopDrag = function (type) {\n    var _a, _b;\n    if (!type || type === \"target\") {\n      (_a = this.targetGesto) === null || _a === void 0 ? void 0 : _a.stop();\n    }\n    if (!type || type === \"control\") {\n      (_b = this.controlGesto) === null || _b === void 0 ? void 0 : _b.stop();\n    }\n  };\n  __proto.getRotation = function () {\n    var _a = this.state,\n      pos1 = _a.pos1,\n      pos2 = _a.pos2,\n      direction = _a.direction;\n    return getAbsoluteRotation(pos1, pos2, direction);\n  };\n  /**\n   * Request able through a method rather than an event.\n   * At the moment of execution, requestStart is executed,\n   * and then request and requestEnd can be executed through Requester.\n   * @method Moveable#request\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n   * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n   * @param - ableName\n   * @param - request to be able params.\n   * @param - If isInstant is true, request and requestEnd are executed immediately.\n   * @return - Able Requester. If there is no request in able, nothing will work.\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * // Instantly Request (requestStart - request - requestEnd)\n   * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n   *\n   * // Start move\n   * const requester = moveable.request(\"draggable\");\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.request({ deltaX: 10, deltaY: 10 });\n   * requester.requestEnd();\n   */\n\n  __proto.request = function (ableName, param, isInstant) {\n    if (param === void 0) {\n      param = {};\n    }\n    var _a = this.props,\n      ables = _a.ables,\n      groupable = _a.groupable;\n    var requsetAble = ables.filter(function (able) {\n      return able.name === ableName;\n    })[0];\n    if (this.isDragging() || !requsetAble || !requsetAble.request) {\n      return {\n        request: function () {\n          return this;\n        },\n        requestEnd: function () {\n          return this;\n        }\n      };\n    }\n    var self = this;\n    var ableRequester = requsetAble.request(this);\n    var requestInstant = isInstant || param.isInstant;\n    var ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n    var eventAffix = \"\".concat(groupable ? \"Group\" : \"\").concat(ableRequester.isControl ? \"Control\" : \"\");\n    var requester = {\n      request: function (ableParam) {\n        triggerAble(self, ableType, \"drag\", eventAffix, \"\", __assign(__assign({}, ableRequester.request(ableParam)), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return this;\n      },\n      requestEnd: function () {\n        triggerAble(self, ableType, \"drag\", eventAffix, \"End\", __assign(__assign({}, ableRequester.requestEnd()), {\n          requestAble: ableName,\n          isRequest: true\n        }), requestInstant);\n        return this;\n      }\n    };\n    triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", __assign(__assign({}, ableRequester.requestStart(param)), {\n      requestAble: ableName,\n      isRequest: true\n    }), requestInstant);\n    return requestInstant ? requester.request(param).requestEnd() : requester;\n  };\n  /**\n   * Remove the Moveable object and the events.\n   * @method Moveable#destroy\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * moveable.destroy();\n   */\n\n  __proto.destroy = function () {\n    this.componentWillUnmount();\n  };\n  __proto.updateRenderPoses = function () {\n    var state = this.getState();\n    var props = this.props;\n    var originalBeforeOrigin = state.originalBeforeOrigin,\n      transformOrigin = state.transformOrigin,\n      allMatrix = state.allMatrix,\n      is3d = state.is3d,\n      pos1 = state.pos1,\n      pos2 = state.pos2,\n      pos3 = state.pos3,\n      pos4 = state.pos4,\n      stateLeft = state.left,\n      stateTop = state.top,\n      // offsetWidth,\n      // offsetHeight,\n      isPersisted = state.isPersisted;\n    var _a = props.padding || {},\n      _b = _a.left,\n      left = _b === void 0 ? 0 : _b,\n      _c = _a.top,\n      top = _c === void 0 ? 0 : _c,\n      _d = _a.bottom,\n      bottom = _d === void 0 ? 0 : _d,\n      _e = _a.right,\n      right = _e === void 0 ? 0 : _e;\n    var n = is3d ? 4 : 3; // const clipPathInfo = getClipPath(\n    //     props.target,\n    //     offsetWidth,\n    //     offsetHeight,\n    // );\n    // if (clipPathInfo) {\n    //     left -= Math.max(0, clipPathInfo.left);\n    //     top -= Math.max(0, clipPathInfo.top);\n    //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n    //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n    // }\n\n    var absoluteOrigin = [];\n    if (isPersisted) {\n      absoluteOrigin = transformOrigin;\n    } else if (this.controlBox && props.groupable) {\n      absoluteOrigin = originalBeforeOrigin;\n    } else {\n      absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n    }\n    state.renderPoses = [plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)), plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)), plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)), plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n))];\n  };\n  __proto.checkUpdate = function () {\n    this._isPropTargetChanged = false;\n    var _a = this.props,\n      target = _a.target,\n      container = _a.container,\n      parentMoveable = _a.parentMoveable;\n    var _b = this.state,\n      stateTarget = _b.target,\n      stateContainer = _b.container;\n    if (!stateTarget && !target) {\n      return;\n    }\n    this.updateAbles();\n    var isTargetChanged = !equals(stateTarget, target);\n    var isChanged = isTargetChanged || !equals(stateContainer, container);\n    if (!isChanged) {\n      return;\n    }\n    var moveableContainer = container || this.controlBox;\n    if (moveableContainer) {\n      this.unsetAbles();\n    }\n    this.updateState({\n      target: target,\n      container: container\n    });\n    if (!parentMoveable && moveableContainer) {\n      this.updateRect(\"End\", false, false);\n    }\n    this._isPropTargetChanged = isTargetChanged;\n  };\n  __proto.waitToChangeTarget = function () {\n    return new Promise(function () {});\n  };\n  __proto.triggerEvent = function (name, e) {\n    this._emitter.trigger(name, e);\n    var callback = this.props[name];\n    return callback && callback(e);\n  };\n  __proto.useCSS = function (tag, css) {\n    var customStyleMap = this.props.customStyledMap;\n    var key = tag + css;\n    if (!customStyleMap[key]) {\n      customStyleMap[key] = styled(tag, css);\n    }\n    return customStyleMap[key];\n  };\n  __proto.getState = function () {\n    var _a;\n    var props = this.props;\n    if (props.target || ((_a = props.targets) === null || _a === void 0 ? void 0 : _a.length)) {\n      this._hasFirstTarget = true;\n    }\n    var hasControlBox = this.controlBox;\n    var persistData = props.persistData;\n    var firstRenderState = props.firstRenderState;\n    if (firstRenderState && !hasControlBox) {\n      return firstRenderState;\n    }\n    if (!this._hasFirstTarget && persistData) {\n      var persistState = getPersistState(persistData);\n      if (persistState) {\n        this.updateState(persistState, false);\n        return this.state;\n      }\n    }\n    this.state.isPersisted = false;\n    return this.state;\n  };\n  __proto.updateSelectors = function () {};\n  __proto.unsetAbles = function () {\n    var _this = this;\n    this.targetAbles.forEach(function (able) {\n      if (able.unset) {\n        able.unset(_this);\n      }\n    });\n  };\n  __proto.updateAbles = function (ables, eventAffix) {\n    if (ables === void 0) {\n      ables = this.props.ables;\n    }\n    if (eventAffix === void 0) {\n      eventAffix = \"\";\n    }\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var enabledAbles = this.getEnabledAbles(ables);\n    var dragStart = \"drag\".concat(eventAffix, \"Start\");\n    var pinchStart = \"pinch\".concat(eventAffix, \"Start\");\n    var dragControlStart = \"drag\".concat(eventAffix, \"ControlStart\");\n    var targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n    var controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n    this.enabledAbles = enabledAbles;\n    this.targetAbles = targetAbles;\n    this.controlAbles = controlAbles;\n  };\n  __proto.updateState = function (nextState, isSetState) {\n    if (isSetState) {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState(nextState);\n    } else {\n      var state = this.state;\n      for (var name in nextState) {\n        state[name] = nextState[name];\n      }\n    }\n  };\n  __proto.getEnabledAbles = function (ables) {\n    if (ables === void 0) {\n      ables = this.props.ables;\n    }\n    var props = this.props;\n    return ables.filter(function (able) {\n      return able && (able.always && props[able.name] !== false || props[able.name]);\n    });\n  };\n  __proto.renderAbles = function () {\n    var _this = this;\n    var props = this.props;\n    var triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n    var Renderer = {\n      createElement: createElement\n    };\n    this.renderState = {};\n    return groupByMap(flat(filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(function (_a) {\n      var render = _a.render;\n      return render(_this, Renderer) || [];\n    })).filter(function (el) {\n      return el;\n    }), function (_a) {\n      var key = _a.key;\n      return key;\n    }).map(function (group) {\n      return group[0];\n    });\n  };\n  __proto.updateCheckInput = function () {\n    this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n  };\n  __proto._getRequestStyles = function () {\n    var styleNames = this.getEnabledAbles().reduce(function (names, able) {\n      var _a, _b;\n      var ableStyleNames = (_b = (_a = able.requestStyle) === null || _a === void 0 ? void 0 : _a.call(able)) !== null && _b !== void 0 ? _b : [];\n      return __spreadArray(__spreadArray([], names, true), ableStyleNames, true);\n    }, []);\n    return styleNames;\n  };\n  __proto._updateObserver = function (prevProps) {\n    var _a;\n    var props = this.props;\n    var target = props.target;\n    if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n      (_a = this._observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n      return;\n    }\n    if (prevProps.target === target && this._observer) {\n      return;\n    }\n    var observer = new ResizeObserver(this.checkUpdateRect);\n    observer.observe(target, {\n      box: \"border-box\"\n    });\n    this._observer = observer;\n    return;\n  };\n  __proto._updateEvents = function () {\n    var controlBoxElement = this.controlBox.getElement();\n    var hasTargetAble = this.targetAbles.length;\n    var hasControlAble = this.controlAbles.length;\n    var props = this.props;\n    var target = props.dragTarget || props.target;\n    var isUnset = !hasTargetAble && this.targetGesto || this._isTargetChanged(true);\n    if (isUnset) {\n      unset(this, \"targetGesto\");\n      this.updateState({\n        gesto: null\n      });\n    }\n    if (!hasControlAble) {\n      unset(this, \"controlGesto\");\n    }\n    if (target && hasTargetAble && !this.targetGesto) {\n      this.targetGesto = getTargetAbleGesto(this, target, \"\");\n    }\n    if (!this.controlGesto && hasControlAble) {\n      this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n    }\n  };\n  __proto._updateTargets = function () {\n    var props = this.props;\n    this._prevTarget = props.dragTarget || props.target;\n    this._prevDragArea = props.dragArea;\n  };\n  __proto._renderLines = function () {\n    var props = this.props;\n    var _a = props,\n      zoom = _a.zoom,\n      hideDefaultLines = _a.hideDefaultLines,\n      hideChildMoveableDefaultLines = _a.hideChildMoveableDefaultLines,\n      parentMoveable = _a.parentMoveable;\n    if (hideDefaultLines || parentMoveable && hideChildMoveableDefaultLines) {\n      return [];\n    }\n    var renderPoses = this.getState().renderPoses;\n    var Renderer = {\n      createElement: createElement\n    };\n    return [[0, 1], [1, 3], [3, 2], [2, 0]].map(function (_a, i) {\n      var from = _a[0],\n        to = _a[1];\n      return renderLine(Renderer, \"\", renderPoses[from], renderPoses[to], zoom, \"render-line-\".concat(i));\n    });\n  };\n  __proto._isTargetChanged = function (useDragArea) {\n    var props = this.props;\n    var target = props.dragTarget || props.target;\n    var prevTarget = this._prevTarget;\n    var prevDragArea = this._prevDragArea;\n    var dragArea = props.dragArea; // check target without dragArea\n\n    var isTargetChanged = !dragArea && prevTarget !== target;\n    var isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n    return isTargetChanged || isDragAreaChanged;\n  };\n  __proto._updateNativeEvents = function () {\n    var _this = this;\n    var props = this.props;\n    var target = props.dragArea ? this.areaElement : this.state.target;\n    var events = this.events;\n    var eventKeys = getKeys(events);\n    if (this._isTargetChanged()) {\n      for (var eventName in events) {\n        var manager = events[eventName];\n        manager && manager.destroy();\n        events[eventName] = null;\n      }\n    }\n    if (!target) {\n      return;\n    }\n    var enabledAbles = this.enabledAbles;\n    eventKeys.forEach(function (eventName) {\n      var ables = filterAbles(enabledAbles, [eventName]);\n      var hasAbles = ables.length > 0;\n      var manager = events[eventName];\n      if (!hasAbles) {\n        if (manager) {\n          manager.destroy();\n          events[eventName] = null;\n        }\n        return;\n      }\n      if (!manager) {\n        manager = new EventManager(target, _this, eventName);\n        events[eventName] = manager;\n      }\n      manager.setAbles(ables);\n    });\n  };\n  __proto._checkUpdateRootContainer = function () {\n    var rootContainer = this.props.rootContainer;\n    if (!this._rootContainer && rootContainer) {\n      this._rootContainer = getRefTarget(rootContainer, true);\n    }\n  };\n  __proto._checkUpdateViewContainer = function () {\n    var viewContainerOption = this.props.viewContainer;\n    if (!this._viewContainer && viewContainerOption) {\n      this._viewContainer = getRefTarget(viewContainerOption, true);\n    }\n    var viewContainer = this._viewContainer;\n    if (viewContainer) {\n      this._changeAbleViewClassNames(__spreadArray(__spreadArray([], this._getAbleViewClassNames(), true), [this.isDragging() ? VIEW_DRAGGING : \"\"], false));\n    }\n  };\n  __proto._changeAbleViewClassNames = function (classNames) {\n    var viewContainer = this._viewContainer;\n    var nextClassNames = groupBy(classNames.filter(Boolean), function (el) {\n      return el;\n    }).map(function (_a) {\n      var className = _a[0];\n      return className;\n    });\n    var prevClassNames = this._viewClassNames;\n    var _a = diff$1(prevClassNames, nextClassNames),\n      removed = _a.removed,\n      added = _a.added;\n    removed.forEach(function (index) {\n      removeClass(viewContainer, prevClassNames[index]);\n    });\n    added.forEach(function (index) {\n      addClass(viewContainer, nextClassNames[index]);\n    });\n    this._viewClassNames = nextClassNames;\n  };\n  __proto._getAbleViewClassNames = function () {\n    var _this = this;\n    return (this.getEnabledAbles().map(function (able) {\n      var _a;\n      return ((_a = able.viewClassName) === null || _a === void 0 ? void 0 : _a.call(able, _this)) || \"\";\n    }).join(\" \") + \" \".concat(this._getAbleClassName(\"-view\"))).split(/\\s+/g);\n  };\n  __proto._getAbleClassName = function (classPrefix) {\n    var _this = this;\n    if (classPrefix === void 0) {\n      classPrefix = \"\";\n    }\n    var ables = this.getEnabledAbles();\n    var targetGesto = this.targetGesto;\n    var controlGesto = this.controlGesto;\n    var targetGestoData = (targetGesto === null || targetGesto === void 0 ? void 0 : targetGesto.isFlag()) ? targetGesto.getEventData() : {};\n    var controlGestoData = (controlGesto === null || controlGesto === void 0 ? void 0 : controlGesto.isFlag()) ? controlGesto.getEventData() : {};\n    return ables.map(function (able) {\n      var _a, _b, _c;\n      var name = able.name;\n      var className = ((_a = able.className) === null || _a === void 0 ? void 0 : _a.call(able, _this)) || \"\";\n      if (((_b = targetGestoData[name]) === null || _b === void 0 ? void 0 : _b.isEventStart) || ((_c = controlGestoData[name]) === null || _c === void 0 ? void 0 : _c.isEventStart)) {\n        className += \" \".concat(prefix(\"\".concat(name).concat(classPrefix, \"-dragging\")));\n      }\n      return className.trim();\n    }).filter(Boolean).join(\" \");\n  };\n  MoveableManager.defaultProps = {\n    target: null,\n    dragTarget: null,\n    container: null,\n    rootContainer: null,\n    origin: true,\n    parentMoveable: null,\n    wrapperMoveable: null,\n    isWrapperMounted: false,\n    parentPosition: null,\n    portalContainer: null,\n    useResizeObserver: false,\n    ables: [],\n    pinchThreshold: 20,\n    dragArea: false,\n    passDragArea: false,\n    transformOrigin: \"\",\n    className: \"\",\n    zoom: 1,\n    triggerAblesSimultaneously: false,\n    padding: {},\n    pinchOutside: true,\n    checkInput: false,\n    groupable: false,\n    hideDefaultLines: false,\n    cspNonce: \"\",\n    translateZ: 0,\n    cssStyled: null,\n    customStyledMap: {},\n    props: {},\n    stopPropagation: false,\n    preventClickDefault: false,\n    preventClickEventOnDrag: true,\n    flushSync: defaultSync,\n    firstRenderState: null,\n    persistData: null,\n    viewContainer: null,\n    useAccuratePosition: false\n  };\n  return MoveableManager;\n}(React.PureComponent);\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n\nvar Groupable = {\n  name: \"groupable\",\n  props: {\n    defaultGroupRotate: Number,\n    defaultGroupOrigin: String,\n    groupable: Boolean,\n    groupableProps: Object,\n    targetGroups: Object,\n    hideChildMoveableDefaultLines: Boolean\n  },\n  events: {},\n  render: function (moveable, React) {\n    var _a;\n    var props = moveable.props;\n    var targets = props.targets || [];\n    moveable.moveables = [];\n    var _b = moveable.getState(),\n      left = _b.left,\n      top = _b.top,\n      isPersisted = _b.isPersisted;\n    var position = [left, top];\n    var zoom = props.zoom || 1;\n    var renderGroupRects = moveable.renderGroupRects;\n    var persistDatChildren = ((_a = props.persistData) === null || _a === void 0 ? void 0 : _a.children) || [];\n    if (isPersisted) {\n      targets = persistDatChildren.map(function () {\n        return null;\n      });\n    } else {\n      persistDatChildren = [];\n    }\n    return __spreadArray(__spreadArray([], targets.map(function (target, i) {\n      return React.createElement(MoveableManager, {\n        key: \"moveable\" + i,\n        ref: refs(moveable, \"moveables\", i),\n        target: target,\n        origin: false,\n        cssStyled: props.cssStyled,\n        customStyledMap: props.customStyledMap,\n        useResizeObserver: props.useResizeObserver,\n        hideChildMoveableDefaultLines: props.hideChildMoveableDefaultLines,\n        parentMoveable: moveable,\n        parentPosition: position,\n        persistData: persistDatChildren[i],\n        zoom: zoom\n      });\n    }), true), flat(renderGroupRects.map(function (_a, i) {\n      var pos1 = _a.pos1,\n        pos2 = _a.pos2,\n        pos3 = _a.pos3,\n        pos4 = _a.pos4;\n      var poses = [pos1, pos2, pos3, pos4];\n      return [[0, 1], [1, 3], [3, 2], [2, 0]].map(function (_a, j) {\n        var from = _a[0],\n          to = _a[1];\n        return renderLine(React, \"\", minus(poses[from], position), minus(poses[to], position), zoom, \"group-rect-\".concat(i, \"-\").concat(j));\n      });\n    })), true);\n  }\n};\nvar Clickable = makeAble(\"clickable\", {\n  props: {\n    clickable: Boolean\n  },\n  events: {\n    onClick: \"click\",\n    onClickGroup: \"clickGroup\"\n  },\n  always: true,\n  dragRelation: \"weak\",\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dragStart: function () {\n    return;\n  },\n  dragControlStart: function () {\n    return;\n  },\n  dragGroupStart: function (moveable, e) {\n    e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n  },\n  dragEnd: function (moveable, e) {\n    var target = moveable.props.target;\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    var isMoveableElement = moveable.isMoveableElement(inputTarget);\n    var containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget) || containsElement // External event duplicate target or dragAreaElement\n    ) {\n      return;\n    }\n    var containsTarget = target.contains(inputTarget);\n    triggerEvent(moveable, \"onClick\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      inputTarget: inputTarget,\n      isTarget: target === inputTarget,\n      moveableTarget: moveable.props.target,\n      containsTarget: containsTarget\n    }));\n  },\n  dragGroupEnd: function (moveable, e) {\n    var inputEvent = e.inputEvent;\n    var inputTarget = e.inputTarget;\n    if (!inputEvent || !inputTarget || e.isDrag || moveable.isMoveableElement(inputTarget) // External event duplicate target or dragAreaElement\n    || e.datas.inputTarget === inputTarget) {\n      return;\n    }\n    var targets = moveable.props.targets;\n    var targetIndex = targets.indexOf(inputTarget);\n    var isTarget = targetIndex > -1;\n    var containsTarget = false;\n    if (targetIndex === -1) {\n      targetIndex = findIndex(targets, function (parentTarget) {\n        return parentTarget.contains(inputTarget);\n      });\n      containsTarget = targetIndex > -1;\n    }\n    triggerEvent(moveable, \"onClickGroup\", fillParams(moveable, e, {\n      isDouble: e.isDouble,\n      targets: targets,\n      inputTarget: inputTarget,\n      targetIndex: targetIndex,\n      isTarget: isTarget,\n      containsTarget: containsTarget,\n      moveableTarget: targets[targetIndex]\n    }));\n  },\n  dragControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  },\n  dragGroupControlEnd: function (moveable, e) {\n    this.dragEnd(moveable, e);\n  }\n});\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n\nfunction getDraggableEvent(e) {\n  var datas = e.originalDatas.draggable;\n  if (!datas) {\n    e.originalDatas.draggable = {};\n    datas = e.originalDatas.draggable;\n  }\n  return __assign(__assign({}, e), {\n    datas: datas\n  });\n}\nvar edgeDraggable = makeAble(\"edgeDraggable\", {\n  css: [\".edge.edgeDraggable.line {\\n    cursor: move;\\n}\"],\n  render: function (moveable, React) {\n    var props = moveable.props;\n    var edge = props.edgeDraggable;\n    if (!edge) {\n      return [];\n    }\n    return renderEdgeLines(React, \"edgeDraggable\", edge, moveable.getState().renderPoses, props.zoom);\n  },\n  dragCondition: function (moveable, e) {\n    var _a;\n    var props = moveable.props;\n    var target = (_a = e.inputEvent) === null || _a === void 0 ? void 0 : _a.target;\n    if (!props.edgeDraggable || !target) {\n      return false;\n    }\n    return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"edge\")) && hasClass(target, prefix(\"edgeDraggable\"));\n  },\n  dragStart: function (moveable, e) {\n    return Draggable.dragStart(moveable, getDraggableEvent(e));\n  },\n  drag: function (moveable, e) {\n    return Draggable.drag(moveable, getDraggableEvent(e));\n  },\n  dragEnd: function (moveable, e) {\n    return Draggable.dragEnd(moveable, getDraggableEvent(e));\n  },\n  dragGroupCondition: function (moveable, e) {\n    var _a;\n    var props = moveable.props;\n    var target = (_a = e.inputEvent) === null || _a === void 0 ? void 0 : _a.target;\n    if (!props.edgeDraggable || !target) {\n      return false;\n    }\n    return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n  },\n  dragGroupStart: function (moveable, e) {\n    return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n  },\n  dragGroup: function (moveable, e) {\n    return Draggable.dragGroup(moveable, getDraggableEvent(e));\n  },\n  dragGroupEnd: function (moveable, e) {\n    return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n  },\n  unset: function (moveable) {\n    return Draggable.unset(moveable);\n  }\n});\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n\nvar IndividualGroupable = {\n  name: \"individualGroupable\",\n  props: {\n    individualGroupable: Boolean\n  },\n  events: {}\n};\nvar MOVEABLE_ABLES = [BeforeRenderable, Default, Snappable, Pinchable, Draggable, edgeDraggable, Resizable, Scalable, Warpable, Rotatable, Scrollable, Padding, Origin, OriginDraggable, Clippable, Roundable, Groupable, IndividualGroupable, Clickable, DragArea, Renderable];\nvar MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  return __assign(__assign({}, current), \"events\" in able ? able.events : {});\n}, {});\nvar MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce(function (current, able) {\n  return __assign(__assign({}, current), able.props);\n}, {});\nvar MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nvar MOVEABLE_EVENTS = Object.keys(MOVEABLE_EVENTS_MAP);\nvar MOVEABLE_PROPS = Object.keys(MOVEABLE_PROPS_MAP);\nfunction solveConstantsDistance(_a, pos) {\n  var a = _a[0],\n    b = _a[1],\n    c = _a[2];\n  return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\nfunction solveC(_a, pos) {\n  var a = _a[0],\n    b = _a[1]; // ax + by + c = 0\n  // -ax -by;\n\n  return -a * pos[0] - b * pos[1];\n}\nfunction getMaxPos(poses, index) {\n  return Math.max.apply(Math, poses.map(function (_a) {\n    var pos1 = _a[0],\n      pos2 = _a[1],\n      pos3 = _a[2],\n      pos4 = _a[3];\n    return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n  }));\n}\nfunction getMinPos(poses, index) {\n  return Math.min.apply(Math, poses.map(function (_a) {\n    var pos1 = _a[0],\n      pos2 = _a[1],\n      pos3 = _a[2],\n      pos4 = _a[3];\n    return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n  }));\n}\nfunction getGroupRect(parentPoses, rotation) {\n  var _a;\n  var pos1 = [0, 0];\n  var pos2 = [0, 0];\n  var pos3 = [0, 0];\n  var pos4 = [0, 0];\n  var width = 0;\n  var height = 0;\n  if (!parentPoses.length) {\n    return {\n      pos1: pos1,\n      pos2: pos2,\n      pos3: pos3,\n      pos4: pos4,\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n      width: width,\n      height: height,\n      rotation: rotation\n    };\n  }\n  var fixedRotation = throttle(rotation, TINY_NUM);\n  if (fixedRotation % 90) {\n    var rad = fixedRotation / 180 * Math.PI;\n    var a1_1 = Math.tan(rad);\n    var a2_1 = -1 / a1_1; // ax = y  // -ax + y = 0 // 0 => 1\n    // -ax = y // ax + y = 0  // 0 => 3\n\n    var a1MinMax_1 = [MAX_NUM, MIN_NUM];\n    var a1MinMaxPos_1 = [[0, 0], [0, 0]];\n    var a2MinMax_1 = [MAX_NUM, MIN_NUM];\n    var a2MinMaxPos_1 = [[0, 0], [0, 0]];\n    parentPoses.forEach(function (poses) {\n      poses.forEach(function (pos) {\n        // const b1 = pos[1] - a1 * pos[0];\n        // const b2 = pos[1] - a2 * pos[0];\n        var a1Dist = solveConstantsDistance([-a1_1, 1, 0], pos);\n        var a2Dist = solveConstantsDistance([-a2_1, 1, 0], pos);\n        if (a1MinMax_1[0] > a1Dist) {\n          a1MinMaxPos_1[0] = pos;\n          a1MinMax_1[0] = a1Dist;\n        }\n        if (a1MinMax_1[1] < a1Dist) {\n          a1MinMaxPos_1[1] = pos;\n          a1MinMax_1[1] = a1Dist;\n        }\n        if (a2MinMax_1[0] > a2Dist) {\n          a2MinMaxPos_1[0] = pos;\n          a2MinMax_1[0] = a2Dist;\n        }\n        if (a2MinMax_1[1] < a2Dist) {\n          a2MinMaxPos_1[1] = pos;\n          a2MinMax_1[1] = a2Dist;\n        }\n      });\n    });\n    var a1MinPos = a1MinMaxPos_1[0],\n      a1MaxPos = a1MinMaxPos_1[1];\n    var a2MinPos = a2MinMaxPos_1[0],\n      a2MaxPos = a2MinMaxPos_1[1];\n    var minHorizontalLine = [-a1_1, 1, solveC([-a1_1, 1], a1MinPos)];\n    var maxHorizontalLine = [-a1_1, 1, solveC([-a1_1, 1], a1MaxPos)];\n    var minVerticalLine = [-a2_1, 1, solveC([-a2_1, 1], a2MinPos)];\n    var maxVerticalLine = [-a2_1, 1, solveC([-a2_1, 1], a2MaxPos)];\n    _a = [[minHorizontalLine, minVerticalLine], [minHorizontalLine, maxVerticalLine], [maxHorizontalLine, minVerticalLine], [maxHorizontalLine, maxVerticalLine]].map(function (_a) {\n      var line1 = _a[0],\n        line2 = _a[1];\n      return getIntersectionPointsByConstants(line1, line2)[0];\n    }), pos1 = _a[0], pos2 = _a[1], pos3 = _a[2], pos4 = _a[3];\n    width = a2MinMax_1[1] - a2MinMax_1[0];\n    height = a1MinMax_1[1] - a1MinMax_1[0];\n  } else {\n    var minX_1 = getMinPos(parentPoses, 0);\n    var minY_1 = getMinPos(parentPoses, 1);\n    var maxX_1 = getMaxPos(parentPoses, 0);\n    var maxY_1 = getMaxPos(parentPoses, 1);\n    pos1 = [minX_1, minY_1];\n    pos2 = [maxX_1, minY_1];\n    pos3 = [minX_1, maxY_1];\n    pos4 = [maxX_1, maxY_1];\n    width = maxX_1 - minX_1;\n    height = maxY_1 - minY_1;\n    if (fixedRotation % 180) {\n      // 0\n      // 1 2\n      // 3 4\n      // 90\n      // 3 1\n      // 4 2\n      // 180\n      // 4 3\n      // 2 1\n      // 270\n      // 2 4\n      // 1 3\n      // 1, 2, 3,4 = 3 1 4 2\n      var changedX = [pos3, pos1, pos4, pos2];\n      pos1 = changedX[0], pos2 = changedX[1], pos3 = changedX[2], pos4 = changedX[3];\n      width = maxY_1 - minY_1;\n      height = maxX_1 - minX_1;\n    }\n  }\n  if (fixedRotation % 360 > 180) {\n    // 1 2   4 3\n    // 3 4   2 1\n    var changedX = [pos4, pos3, pos2, pos1];\n    pos1 = changedX[0], pos2 = changedX[1], pos3 = changedX[2], pos4 = changedX[3];\n  }\n  var _b = getMinMaxs([pos1, pos2, pos3, pos4]),\n    minX = _b.minX,\n    minY = _b.minY,\n    maxX = _b.maxX,\n    maxY = _b.maxY;\n  return {\n    pos1: pos1,\n    pos2: pos2,\n    pos3: pos3,\n    pos4: pos4,\n    width: width,\n    height: height,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    rotation: rotation\n  };\n}\nfunction findMoveableGroups(moveables, childTargetGroups) {\n  var groups = childTargetGroups.map(function (targetGroup) {\n    if (isArray(targetGroup)) {\n      var childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n      var length = childMoveableGroups.length;\n      if (length > 1) {\n        return childMoveableGroups;\n      } else if (length === 1) {\n        return childMoveableGroups[0];\n      } else {\n        return null;\n      }\n    } else {\n      var checked = find(moveables, function (_a) {\n        var manager = _a.manager;\n        return manager.props.target === targetGroup;\n      });\n      if (checked) {\n        checked.finded = true;\n        return checked.manager;\n      }\n      return null;\n    }\n  }).filter(Boolean);\n  if (groups.length === 1 && isArray(groups[0])) {\n    return groups[0];\n  }\n  return groups;\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\n\nvar MoveableGroup = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableGroup, _super);\n  function MoveableGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.differ = new ChildrenDiffer();\n    _this.moveables = [];\n    _this.transformOrigin = \"50% 50%\";\n    _this.renderGroupRects = [];\n    _this._targetGroups = [];\n    _this._hasFirstTargets = false;\n    return _this;\n  }\n  var __proto = MoveableGroup.prototype;\n  __proto.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n  };\n  __proto.checkUpdate = function () {\n    this._isPropTargetChanged = false;\n    this.updateAbles();\n  };\n  __proto.getTargets = function () {\n    return this.props.targets;\n  };\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    var _a;\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    var state = this.state;\n    if (!this.controlBox || state.isPersisted) {\n      return;\n    }\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, false, false);\n    });\n    var props = this.props;\n    var moveables = this.moveables;\n    var target = state.target || props.target;\n    var checkeds = moveables.map(function (moveable) {\n      return {\n        finded: false,\n        manager: moveable\n      };\n    });\n    var targetGroups = this.props.targetGroups || [];\n    var moveableGroups = findMoveableGroups(checkeds, targetGroups);\n    moveableGroups.push.apply(moveableGroups, checkeds.filter(function (_a) {\n      var finded = _a.finded;\n      return !finded;\n    }).map(function (_a) {\n      var manager = _a.manager;\n      return manager;\n    }));\n    var renderGroupRects = [];\n    var isReset = !isTarget || type !== \"\" && props.updateGroup;\n    var defaultGroupRotate = props.defaultGroupRotate || 0;\n    if (!this._hasFirstTargets) {\n      var persistedRoatation = (_a = this.props.persistData) === null || _a === void 0 ? void 0 : _a.rotation;\n      if (persistedRoatation != null) {\n        defaultGroupRotate = persistedRoatation;\n      }\n    }\n    function getMoveableGroupRect(group, parentRotation, isRoot) {\n      var posesRotations = group.map(function (moveable) {\n        if (isArray(moveable)) {\n          var rect = getMoveableGroupRect(moveable, parentRotation);\n          var poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n          renderGroupRects.push(rect);\n          return {\n            poses: poses,\n            rotation: rect.rotation\n          };\n        } else {\n          return {\n            poses: getAbsolutePosesByState(moveable.state),\n            rotation: moveable.getRotation()\n          };\n        }\n      });\n      var rotations = posesRotations.map(function (_a) {\n        var rotation = _a.rotation;\n        return rotation;\n      });\n      var groupRotation = 0;\n      var firstRotation = rotations[0];\n      var isSameRotation = rotations.every(function (nextRotation) {\n        return Math.abs(firstRotation - nextRotation) < 0.1;\n      });\n      if (isReset) {\n        groupRotation = isSameRotation ? firstRotation : defaultGroupRotate;\n      } else {\n        groupRotation = !isRoot && isSameRotation ? firstRotation : parentRotation;\n      }\n      var groupPoses = posesRotations.map(function (_a) {\n        var poses = _a.poses;\n        return poses;\n      });\n      var groupRect = getGroupRect(groupPoses, groupRotation);\n      return groupRect;\n    }\n    var rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n    if (isReset) {\n      // reset rotataion\n      this.rotation = rootGroupRect.rotation;\n      this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n      this.scale = [1, 1];\n    }\n    this._targetGroups = targetGroups;\n    this.renderGroupRects = renderGroupRects;\n    var transformOrigin = this.transformOrigin;\n    var rotation = this.rotation;\n    var scale = this.scale;\n    var width = rootGroupRect.width,\n      height = rootGroupRect.height,\n      minX = rootGroupRect.minX,\n      minY = rootGroupRect.minY;\n    var posesInfo = rotatePosesInfo([[0, 0], [width, 0], [0, height], [width, height]], convertTransformOriginArray(transformOrigin, width, height), this.rotation / 180 * Math.PI);\n    var _b = getMinMaxs(posesInfo.result),\n      deltaX = _b.minX,\n      deltaY = _b.minY;\n    var rotateScale = \" rotate(\".concat(rotation, \"deg)\") + \" scale(\".concat(scale[0] >= 0 ? 1 : -1, \", \").concat(scale[1] >= 0 ? 1 : -1, \")\");\n    var transform = \"translate(\".concat(-deltaX, \"px, \").concat(-deltaY, \"px)\").concat(rotateScale);\n    this.controlBox.getElement().style.transform = \"translate3d(\".concat(minX, \"px, \").concat(minY, \"px, \").concat(this.props.translateZ || 0, \")\");\n    target.style.cssText += \"left:0px;top:0px;\" + \"transform-origin:\".concat(transformOrigin, \";\") + \"width:\".concat(width, \"px;height:\").concat(height, \"px;\") + \"transform: \".concat(transform);\n    state.width = width;\n    state.height = height;\n    var container = this.getContainer();\n    var info = getMoveableTargetInfo(this.controlBox.getElement(), target, this.controlBox.getElement(), this.getContainer(), this._rootContainer || container, []);\n    var pos = [info.left, info.top];\n    var _c = getAbsolutePosesByState(info),\n      pos1 = _c[0],\n      pos2 = _c[1],\n      pos3 = _c[2],\n      pos4 = _c[3]; // info.left + info.pos(1 ~ 4)\n\n    var minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n    var delta = [minPos.minX, minPos.minY];\n    var direction = scale[0] * scale[1] > 0 ? 1 : -1;\n    info.pos1 = minus(pos1, delta);\n    info.pos2 = minus(pos2, delta);\n    info.pos3 = minus(pos3, delta);\n    info.pos4 = minus(pos4, delta); // info.left = info.left + delta[0];\n    // info.top = info.top + delta[1];\n\n    info.left = minX - info.left + delta[0];\n    info.top = minY - info.top + delta[1];\n    info.origin = minus(plus(pos, info.origin), delta);\n    info.beforeOrigin = minus(plus(pos, info.beforeOrigin), delta);\n    info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin);\n    info.transformOrigin = minus(plus(pos, info.transformOrigin), delta);\n    target.style.transform = \"translate(\".concat(-deltaX - delta[0], \"px, \").concat(-deltaY - delta[1], \"px)\") + rotateScale;\n    this.updateState(__assign(__assign({}, info), {\n      posDelta: delta,\n      direction: direction,\n      beforeDirection: direction\n    }), isSetState);\n  };\n  __proto.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  __proto.triggerEvent = function (name, e, isManager) {\n    if (isManager || name.indexOf(\"Group\") > -1) {\n      return _super.prototype.triggerEvent.call(this, name, e);\n    } else {\n      this._emitter.trigger(name, e);\n    }\n  };\n  __proto.updateAbles = function () {\n    _super.prototype.updateAbles.call(this, __spreadArray(__spreadArray([], this.props.ables, true), [Groupable], false), \"Group\");\n  };\n  __proto._updateTargets = function () {\n    _super.prototype._updateTargets.call(this);\n    this._prevTarget = this.props.dragTarget || this.areaElement;\n  };\n  __proto._updateEvents = function () {\n    var state = this.state;\n    var props = this.props;\n    var prevTarget = this._prevTarget;\n    var nextTarget = props.dragTarget || this.areaElement;\n    if (prevTarget !== nextTarget) {\n      unset(this, \"targetGesto\");\n      unset(this, \"controlGesto\");\n      state.target = null;\n    }\n    if (!state.target) {\n      state.target = this.areaElement;\n      this.controlBox.getElement().style.display = \"block\";\n    }\n    if (state.target) {\n      if (!this.targetGesto) {\n        this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n      }\n      if (!this.controlGesto) {\n        this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n      }\n    }\n    var isContainerChanged = !equals(state.container, props.container);\n    if (isContainerChanged) {\n      state.container = props.container;\n    }\n    var targets = props.targets;\n    var _a = this.differ.update(targets),\n      added = _a.added,\n      changed = _a.changed,\n      removed = _a.removed;\n    var isTargetChanged = added.length || removed.length;\n    if (isContainerChanged || isTargetChanged || changed.length || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])) {\n      this.updateRect();\n      this._hasFirstTargets = true;\n    }\n    this._isPropTargetChanged = !!isTargetChanged;\n  };\n  __proto._updateObserver = function () {};\n  MoveableGroup.defaultProps = __assign(__assign({}, MoveableManager.defaultProps), {\n    transformOrigin: [\"50%\", \"50%\"],\n    groupable: true,\n    dragArea: true,\n    keepRatio: true,\n    targets: [],\n    defaultGroupRotate: 0,\n    defaultGroupOrigin: \"50% 50%\"\n  });\n  return MoveableGroup;\n}(MoveableManager);\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\n\nvar MoveableIndividualGroup = /*#__PURE__*/\nfunction (_super) {\n  __extends(MoveableIndividualGroup, _super);\n  function MoveableIndividualGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.moveables = [];\n    return _this;\n  }\n  var __proto = MoveableIndividualGroup.prototype;\n  __proto.render = function () {\n    var _this = this;\n    var _a;\n    var props = this.props;\n    var cspNonce = props.cspNonce,\n      ControlBoxElement = props.cssStyled,\n      persistData = props.persistData;\n    var targets = props.targets || [];\n    var length = targets.length;\n    var canPersist = this.isUnmounted || !length;\n    var persistDatChildren = (_a = persistData === null || persistData === void 0 ? void 0 : persistData.children) !== null && _a !== void 0 ? _a : [];\n    if (canPersist && !length && persistDatChildren.length) {\n      targets = persistDatChildren.map(function () {\n        return null;\n      });\n    } else if (!canPersist) {\n      persistDatChildren = [];\n    }\n    return React.createElement(ControlBoxElement, {\n      cspNonce: cspNonce,\n      ref: ref(this, \"controlBox\"),\n      className: prefix(\"control-box\")\n    }, targets.map(function (target, i) {\n      return React.createElement(MoveableManager, __assign({\n        key: \"moveable\" + i,\n        ref: refs(_this, \"moveables\", i)\n      }, _this.props, {\n        target: target,\n        wrapperMoveable: _this,\n        isWrapperMounted: _this.isMoveableMounted,\n        persistData: persistDatChildren[i]\n      }));\n    }));\n  };\n  __proto.componentDidUpdate = function () {};\n  __proto.getTargets = function () {\n    return this.props.targets;\n  };\n  __proto.updateRect = function (type, isTarget, isSetState) {\n    if (isSetState === void 0) {\n      isSetState = true;\n    }\n    this.moveables.forEach(function (moveable) {\n      moveable.updateRect(type, isTarget, isSetState);\n    });\n  };\n  __proto.getRect = function () {\n    return __assign(__assign({}, _super.prototype.getRect.call(this)), {\n      children: this.moveables.map(function (child) {\n        return child.getRect();\n      })\n    });\n  };\n  __proto.request = function () {\n    return {\n      request: function () {\n        return this;\n      },\n      requestEnd: function () {\n        return this;\n      }\n    };\n  };\n  __proto.dragStart = function () {\n    return this;\n  };\n  __proto.hitTest = function () {\n    return 0;\n  };\n  __proto.isInside = function () {\n    return false;\n  };\n  __proto.isDragging = function () {\n    return false;\n  };\n  __proto.updateRenderPoses = function () {};\n  __proto.checkUpdate = function () {};\n  __proto.triggerEvent = function () {};\n  __proto.updateAbles = function () {};\n  __proto._updateEvents = function () {};\n  __proto._updateObserver = function () {};\n  return MoveableIndividualGroup;\n}(MoveableManager);\nfunction getElementTargets(refTargets, selectorMap) {\n  var elementTargets = [];\n  refTargets.forEach(function (target) {\n    if (!target) {\n      return;\n    }\n    if (isString(target)) {\n      if (selectorMap[target]) {\n        elementTargets.push.apply(elementTargets, selectorMap[target]);\n      }\n      return;\n    }\n    if (isArray(target)) {\n      elementTargets.push.apply(elementTargets, getElementTargets(target, selectorMap));\n    } else {\n      elementTargets.push(target);\n    }\n  });\n  return elementTargets;\n}\nfunction getTargetGroups(refTargets, selectorMap) {\n  var targetGroups = [];\n  refTargets.forEach(function (target) {\n    if (!target) {\n      return;\n    }\n    if (isString(target)) {\n      if (selectorMap[target]) {\n        targetGroups.push.apply(targetGroups, selectorMap[target]);\n      }\n      return;\n    }\n    if (isArray(target)) {\n      targetGroups.push(getTargetGroups(target, selectorMap));\n    } else {\n      targetGroups.push(target);\n    }\n  });\n  return targetGroups;\n}\nfunction compareRefTargets(prevRefTargets, nextRefTargets) {\n  return prevRefTargets.length !== nextRefTargets.length || prevRefTargets.some(function (target, i) {\n    var nextTarget = nextRefTargets[i];\n    if (!target && !nextTarget) {\n      return false;\n    } else if (target != nextTarget) {\n      if (isArray(target) && isArray(nextTarget)) {\n        return compareRefTargets(target, nextTarget);\n      }\n      return true;\n    }\n    return false;\n  });\n}\nvar InitialMoveable = /*#__PURE__*/\nfunction (_super) {\n  __extends(InitialMoveable, _super);\n  function InitialMoveable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.refTargets = [];\n    _this.selectorMap = {};\n    _this._differ = new ChildrenDiffer();\n    _this._elementTargets = [];\n    _this._onChangeTargets = null;\n    return _this;\n  }\n  var __proto = InitialMoveable.prototype;\n  InitialMoveable.makeStyled = function () {\n    var cssMap = {};\n    var ables = this.getTotalAbles();\n    ables.forEach(function (_a) {\n      var css = _a.css;\n      if (!css) {\n        return;\n      }\n      css.forEach(function (text) {\n        cssMap[text] = true;\n      });\n    });\n    var style = getKeys(cssMap).join(\"\\n\");\n    this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n  };\n  InitialMoveable.getTotalAbles = function () {\n    return __spreadArray([Default, Groupable, IndividualGroupable, DragArea], this.defaultAbles, true);\n  };\n  __proto.render = function () {\n    var _a;\n    var moveableContructor = this.constructor;\n    if (!moveableContructor.defaultStyled) {\n      moveableContructor.makeStyled();\n    }\n    var _b = this.props,\n      userAbles = _b.ables,\n      userProps = _b.props,\n      props = __rest(_b, [\"ables\", \"props\"]);\n    var refTargets = this._updateRefs(true);\n    var elementTargets = getElementTargets(refTargets, this.selectorMap);\n    var isGroup = elementTargets.length > 1;\n    var totalAbles = moveableContructor.getTotalAbles();\n    var ables = __spreadArray(__spreadArray([], totalAbles, true), userAbles || [], true);\n    var nextProps = __assign(__assign(__assign({}, props), userProps || {}), {\n      ables: ables,\n      cssStyled: moveableContructor.defaultStyled,\n      customStyledMap: moveableContructor.customStyledMap\n    });\n    this._elementTargets = elementTargets;\n    var firstRenderState = null;\n    var prevMoveable = this.moveable;\n    var persistData = props.persistData;\n    if (persistData === null || persistData === void 0 ? void 0 : persistData.children) {\n      isGroup = true;\n    }\n    if (isGroup) {\n      if (props.individualGroupable) {\n        return React.createElement(MoveableIndividualGroup, __assign({\n          key: \"individual-group\",\n          ref: ref(this, \"moveable\")\n        }, nextProps, {\n          target: null,\n          targets: elementTargets\n        }));\n      }\n      var targetGroups = getTargetGroups(refTargets, this.selectorMap); // manager\n\n      if (prevMoveable && !prevMoveable.props.groupable && !prevMoveable.props.individualGroupable) {\n        var target = prevMoveable.props.target;\n        if (target && elementTargets.indexOf(target) > -1) {\n          firstRenderState = __assign({}, prevMoveable.state);\n        }\n      }\n      return React.createElement(MoveableGroup, __assign({\n        key: \"group\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, (_a = props.groupableProps) !== null && _a !== void 0 ? _a : {}, {\n        target: null,\n        targets: elementTargets,\n        targetGroups: targetGroups,\n        firstRenderState: firstRenderState\n      }));\n    } else {\n      var target_1 = elementTargets[0]; // manager\n\n      if (prevMoveable && (prevMoveable.props.groupable || prevMoveable.props.individualGroupable)) {\n        var moveables = prevMoveable.moveables || [];\n        var prevTargetMoveable = find(moveables, function (mv) {\n          return mv.props.target === target_1;\n        });\n        if (prevTargetMoveable) {\n          firstRenderState = __assign({}, prevTargetMoveable.state);\n        }\n      }\n      return React.createElement(MoveableManager, __assign({\n        key: \"single\",\n        ref: ref(this, \"moveable\")\n      }, nextProps, {\n        target: target_1,\n        firstRenderState: firstRenderState\n      }));\n    }\n  };\n  __proto.componentDidMount = function () {\n    this._checkChangeTargets();\n    this._updateRefs();\n  };\n  __proto.componentDidUpdate = function () {\n    this._checkChangeTargets();\n  };\n  __proto.componentWillUnmount = function () {\n    this.selectorMap = {};\n    this.refTargets = [];\n  };\n  /**\n   * Get targets set in moveable through target or targets of props.\n   * @method Moveable#getTargets\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body, {\n   *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n   * });\n   *\n   * console.log(moveable.getTargets());\n   */\n\n  __proto.getTargets = function () {\n    var _a, _b;\n    return (_b = (_a = this.moveable) === null || _a === void 0 ? void 0 : _a.getTargets()) !== null && _b !== void 0 ? _b : [];\n  };\n  /**\n   * If the element list corresponding to the selector among the targets is changed, it is updated.\n   * @method Moveable#updateSelectors\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body, {\n   *    target: \".target\",\n   * });\n   *\n   * moveable.updateSelectors();\n   */\n\n  __proto.updateSelectors = function () {\n    this.selectorMap = {};\n    this._updateRefs();\n  };\n  /**\n   * User changes target and waits for target to change.\n   * @method Moveable#waitToChangeTarget\n   * @example\n   * import Moveable from \"moveable\";\n   *\n   * const moveable = new Moveable(document.body);\n   *\n   * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n   *   moveable.waitToChangeTarget().then(() => {\n   *      moveable.dragStart(e.currentTarget);\n   *   });\n   *   moveable.target = e.currentTarget;\n   * });\n   */\n\n  __proto.waitToChangeTarget = function () {\n    // let resolvePromise: (e: OnChangeTarget) => void;\n    var _this = this; // this._onChangeTargets = () => {\n    //     this._onChangeTargets = null;\n    //     resolvePromise({\n    //         moveable: this.getManager(),\n    //         targets: this._elementTargets,\n    //     });\n    // };\n    // return new Promise<OnChangeTarget>(resolve => {\n    //     resolvePromise = resolve;\n    // });\n\n    var resolvePromise;\n    this._onChangeTargets = function () {\n      _this._onChangeTargets = null;\n      resolvePromise();\n    };\n    return new Promise(function (resolve) {\n      resolvePromise = resolve;\n    });\n  };\n  __proto.waitToChangeTargets = function () {\n    return this.waitToChangeTarget();\n  };\n  __proto.getManager = function () {\n    return this.moveable;\n  };\n  __proto._updateRefs = function (isRender) {\n    var prevRefTargets = this.refTargets;\n    var nextRefTargets = getRefTargets(this.props.target || this.props.targets);\n    var isBrowser = typeof document !== \"undefined\";\n    var isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n    var selectorMap = this.selectorMap;\n    var nextSelectorMap = {};\n    this.refTargets.forEach(function updateSelectorMap(target) {\n      if (isString(target)) {\n        var selectorTarget = selectorMap[target];\n        if (selectorTarget) {\n          nextSelectorMap[target] = selectorMap[target];\n        } else if (isBrowser) {\n          isUpdate = true;\n          nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n        }\n      } else if (isArray(target)) {\n        target.forEach(updateSelectorMap);\n      }\n    });\n    this.refTargets = nextRefTargets;\n    this.selectorMap = nextSelectorMap;\n    if (!isRender && isUpdate) {\n      this.forceUpdate();\n    }\n    return nextRefTargets;\n  };\n  __proto._checkChangeTargets = function () {\n    var _a, _b, _c;\n    var _d = this._differ.update(this._elementTargets),\n      added = _d.added,\n      removed = _d.removed;\n    var isTargetChanged = added.length || removed.length;\n    if (isTargetChanged) {\n      (_b = (_a = this.props).onChangeTargets) === null || _b === void 0 ? void 0 : _b.call(_a, {\n        moveable: this.moveable,\n        targets: this._elementTargets\n      });\n      (_c = this._onChangeTargets) === null || _c === void 0 ? void 0 : _c.call(this);\n    }\n    this._updateRefs();\n  };\n  InitialMoveable.defaultAbles = [];\n  InitialMoveable.customStyledMap = {};\n  InitialMoveable.defaultStyled = null;\n  __decorate([withMethods(MOVEABLE_METHODS)], InitialMoveable.prototype, \"moveable\", void 0);\n  return InitialMoveable;\n}(React.PureComponent);\nvar Moveable = /*#__PURE__*/\nfunction (_super) {\n  __extends(Moveable, _super);\n  function Moveable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Moveable.defaultAbles = MOVEABLE_ABLES;\n  return Moveable;\n}(InitialMoveable);\nfunction makeMoveable(ables) {\n  var _a;\n  return _a = /*#__PURE__*/\n  function (_super) {\n    __extends(Moveable, _super);\n    function Moveable() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Moveable;\n  }(InitialMoveable), _a.defaultAbles = ables, _a;\n}\nexport { Clippable, DIRECTIONS, Draggable, edgeDraggable as EdgeDraggable, InitialMoveable, MOVEABLE_ABLES, MOVEABLE_EVENTS, MOVEABLE_EVENTS_MAP, MOVEABLE_EVENTS_PROPS_MAP, MOVEABLE_METHODS, MOVEABLE_PROPS, MOVEABLE_PROPS_MAP, Pinchable, Resizable, Rotatable, Roundable, Scalable, Snappable, Warpable, Moveable as default, getElementInfo, makeAble, makeMoveable };","map":{"version":3,"mappings":"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","names":["name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","IS_FIREFOX","IS_SAFARI_ABOVE15","parseInt","webkitVersion","version","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS4","DIRECTIONS","DIRECTION_REGION_TO_DIRECTION","n","e","s","w","nw","ne","sw","se","DIRECTION_INDEXES","DIRECTION_ROTATIONS","MOVEABLE_METHODS","state","delta","isPinch","isConvert","ableName","result","gestos","move","inputEvent","_b","datas","originalDatas","ableDatas","convertDragDist","parentEvent","prevX","prevY","startX","startY","isDrag","isFlag","draggable","__proto","client","type","clientX","clientY","isFirstDrag","isPrevDrag","distX","distY","deltaX","deltaY","parentGesto","CustomGesto","moveable","moveableClientRect","rootMatrix","is3d","pos1","top","calculateInversePosition","left","posX","posY","getDragDist","allMatrix","beforeMatrix","origin","offsetMatrix","targetMatrix","transformOrigin","matrix","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","plus","startDragBeforeDist","calculate","startDragDist","getTransformDirection","calculateMoveablePosition","beforeTransform","direction","event","functionName","beforeRenderable","index","transformIndex","nextTransforms","length","nextTransformAppendedIndexes","nextIndex","findIndex","match","find","info","filter","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","__spreadArray","isAppend","convertTransformFormat","value","dist","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","minus","isBefore","width","height","prevWidth","prevHeight","prevOrigin","pos","i","splitUnit","unit","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","push","poses","xRatio","yRatio","dot","bottom","getDist","startPos","fixedDirection","calculatePoses","fixedPos","getPosByDirection","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","transform","targetTransform","parseMat","convertDimension","createScaleMatrix","fillTransformStartEvent","getBeforeRenderableDatas","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","property","indexOf","parse","startValue","functionValue","getNextTransforms","getNextTransformText","getNextStyle","nextStyle","fillTransformEvent","nextTransform","fillOriginalTransform","drag","Draggable","setCustomDrag","fillCSSObject","getTranslateDist","fixedPosition","groupable","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getDirectionByPos","nextFixedOffset","calculatePosition","getRotateDist","rotateDist","nextOrigin","calculateTransformOrigin","getAbsolutePosesByState","targetGesto","controlGesto","data","getEventData","pos2","prefix","classNames","_i","arguments","prefixNames","defaultSync","fn","getTransformMatrix","isObject","multiplies","createOriginMatrix","a","measureSVGSize","el","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","style","split","target","computedStyle","computedTransform","list","baseVal","matrixes","chr","getOffsetInfo","lastParent","isParent","checkZoom","targetStyle","doc","ownerDocument","document","documentElement","body","hasSlot","parentSlotElement","assignedSlotParentElement","assignedSlot","parentElement","isCustomElement","isEnd","position","offsetZoom","targetZoom","zoom","targetPosition","tagName","getElementTransform","willChange","slotParentNode","_c","targetParentNode","parentNode","nodeType","host","isStatic","offsetParent","getOffsetPosInfo","offsetLeft","offsetTop","isSVG","isUndefined","hasOffset","targetOrigin","slice","getSVGGraphicsOffset","offset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","marginTop","right","convert3DMatrixes","forEach","getPositionFixedInfo","fixedContainer","hasTransform","convertMatrixtoCSS","clientWidth","clientHeight","x","y","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","scaleMatrix","isGTarget","getBBox","bbox","getRect","posesX","posesY","rectWidth","rectHeight","calculateRect","getSVGOffset","offsetInfo","targetInfo","container","getSize","containerClientRect","getBoundingClientRect","margin","rect","rectLeft","scrollLeft","clientLeft","rectTop","scrollTop","clientTop","mat","prevLeft","prevTop","posOrigin","rectOrigin","count","mat2","nextLeft","nextTop","distLeft","distTop","abs","p","calculateMoveableClientPositions","rootClientRect","rootPoses","y1","x2","y2","x3","y3","_d","x4","y4","originX","originY","getShapeDirection","pos3","pos4","getDistSize","vec","sqrt","getLineStyle","rad","getDiagonalSize","rotation","reduce","prev","self","offsetWidth","offsetHeight","cssWidth","cssHeight","contentWidth","contentHeight","minWidth","minHeight","minOffsetWidth","minOffsetHeight","maxWidth","Infinity","maxHeight","maxOffsetWidth","maxOffsetHeight","inlineCSSWidth","inlineCSSHeight","svg","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","horizontalOffset","verticalOffset","containerWidth","containerHeight","parentStyle","convertUnitSize","between","getRad","resetClientRect","scrollWidth","scrollHeight","isRoot","extendsRect","overflow","getClientRectByPosition","base","isExtends","baseTop","baseLeft","getExtendsRect","clientRect","getTotalDirection","parentDirection","getDirection","deg","getAttribute","direciton","dir","getAbsolutePoses","roundSign","num","resolvedEvent","cssText","getKeys","decamelize","fillAfterTransform","prevEvent","nextEvent","fillParams","params","isBeforeEvent","nextParams","currentTarget","stopAble","isEventStart","stopDrag","stop","isStartEvent","lastEvent","fillEndParams","isDouble","catchEvent","callback","_emitter","on","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","some","method","ableGroup","a1","a2","selectValue","values","arr","func","groups","groupKeys","groupKey","keyIndex","group","flat","cur","maxOffset","args","sort","b","calculatePadding","convertCSSSize","isRelative","getTinyDist","v","getDirectionViewClassName","isDragging","getGestoData","checkAbles","isRequest","requestAble","hasClass","invertObject","obj","nextObj","transforms","undefined","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","toMat","isArrayFormat","Element","isSelector","isString","querySelector","isFunction","current","targets","userTargets","call","querySelectorAll","getRefTargets","getRefTarget","getAbsoluteRotation","PI","calculateMatrixDist","getSizeDistByDist","startSize","ratio","keepRatio","startOffsetHeight","distWidth","distHeight","startOffsetWidth","standardRad","signSize","cos","startWidthSize","startHeightSize","distSize","ratioRad","sin","getOffsetSizeDist","sizeDirection","parentDistance","parentDist","parentScale","startFixedDirection","directionsDists","directionRatios","ratioDistance","dist_1","xy","leftOrigin","convertTransformUnit","rightOrigin","originObject","nextOriginObject","convertTransformOriginArray","rotatePosesInfo","prevPoses","nextPoses","next","arr1","arr2","every","value1","value2","isArray1","isArray2","isDeepArrayEquals","makeAble","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","dragStart","pinchStart","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","canPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","fillChildEvents","groupableDatas","childDatas","moveables","_","isStart","childs","ev","childMoveable","childEvent","childGestos","parentFlag","eachEvent","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","getSnapDirections","snapDirections","snapPoses","nextSnapDirections","nextSnapPoses","mapSnapDirectionPoses","horizontalNames","verticalNames","horizontal","vertical","calculateContainerPos","containerRect","clientPos","solveLineConstants","point1","point2","dx","dy","c","checkMoveableSnapPoses","customSnapThreshold","snapThreshold","checkSnapPoses","checkSnap","checkSnapKeepRatio","endPos","endY","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","endX","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","splitSnapDirectionPoses","snapInfo","guideline","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","getPosesByDirection","aDist","bDist","isBound","offsets","aSign","sign","bSign","aOffset","bOffset","checkSnapBoundPriority","getCheckSnapDirections","directions","endDirection_1","nextDirection","signX","signY","signs","isStartLine","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","multiple","sizeOffset","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","getNearOffsetInfo","heightOffsetInfo","getInverseDragDist","lineDirections","virtualPoses","getCheckSnapLineDirections","dir1","dir2","virtualLine","isBoundRotate","relativePoses","boundDots","getDistPointLine","solveReverseLine","checkRotateInnerBounds","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","apply","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","lineInfo","isHorizontalStart","isVerticalStart","checkBoundPoses","_e","_f","nextBounds","checkBounds","externalBounds","snapOffsetLeft","snapOffsetTop","snapOffsetRight","snapOffsetBottom","isCSS","_g","checkBoundKeepRatio","getBounds","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","React","key","scaleType","createElement","className","renderGuideline","sizeValue","posValue","throttle","renderSnapPoses","renderPos","renderInnerGuideline","targetRect","isDisplayInnerSnapDigit","mainNames","targetStart","targetEnd","hide","elementRect","element","renderDigitLine","lineType","gap","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","groupBy","inner","nextGuidelines","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sideNames","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","gapRects","sideStartPos","sideEndPos","sideCenterPos","solveEquation","snapOffset","solveNextOffset","isOutside","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","hasGuidelines","absolutePoses","boundPoses","middle","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isWidthOutside","getTotalGuidelines","hasFixed","containerClientHeight","containerClientWidth","snapGap","maxSnapElementGuidelineDistance","elementGuidelines","getElementGuidelines","totalGuidelines","getGapGuidelines","getGridGuidelines","getDefaultGuidelines","checkBetweenRects","maxSnapElementGapDistance","elementRects","gapGuidelines","targetCenter","targetStart2","targetEnd2","nextElementRects","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","isCenter","prevValues","snapRect","refresh","nextElementGuidelines","diff","maintained","added","nextValues","prevIndex","getSnapElementRects","elementSnapDirections","topValue","leftValue","rightValue","bottomValue","centerValue","middleValue","sizes","snapWidth","snapHeight","nextPosInfo","containerLeft","containerTop","getMinMaxs","targetLeft","targetTop","elementLeft","elementTop","elementRight","elementBottom","checkSnapInfo","snapContainer","snapContainerTarget","snapContainerRect","getClientRect","offset1","getDragDistByState","offset2","getNextFixedPoses","nextFixedPos","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","getSizeOffsetInfo","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","origin2","nextAllMatrix","checkSnapScale","sizeDist","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","directionCondition","getDirectionCondition","dragRelation","Array","Object","Number","snapRenderThreshold","Function","onSnap","css","render","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","renderGuidelines","unset","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","renderDirectionControlsByInfos","renderDirections","getState","renderPoses","rotationRad","getProps","degRotation","directionMap","renderState","renderDirectionMap","directionRotation","dataAttrs","getControlTransform","renderDirectionControls","defaultDirections","renderEdgeLines","edge","index1","index2","renderLine","getRenderDirections","renderDiagonalDirections","renderAllDirections","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","requestStyle","dragInfo","beforeOrigin","setDragStart","setDefaultTransformIndex","startCheckSnapDrag","prevDist","prevBeforeDist","deltaOffset","set","startRect","resolveTransformEvent","parentMoveable","dragRotateRad","ry","rx","checkSnapBoundsDrag","beforeTranslate","throttleArray","beforeDist","beforeDelta","passDelta","passDist","dragAfter","param","triggerChildGesto","isControl","requestStart","requestEnd","resizable","throttleResize","resizeFormat","keepRatioFinally","checkResizableError","onResizeStart","onBeforeResize","onResize","onResizeEnd","onResizeGroupStart","onBeforeResizeGroup","onResizeGroup","onResizeGroupEnd","viewClassName","isGroup","parentFixedDirection","minSize","startWidth","startHeight","maxSize","startOffsetMatrix","startTransformOrigin","isWidth","parentIsWidth","setRatio","isFinite","startPositions","setFixedDirection","setFixedPosition","setMin","setMax","nextMaxSize","isNumber","startRatio","setOrigin","startFixedPosition","isResize","parentKeepRatio","dragClient","resolveMatrix","targetN","getNextBoundingSize","nextSize","boundingWidth","boundingHeight","nextFixedDirection","setSize","getAbsolutePosition","snapDist","checkSnapResize","computeSize","isNoSnap","calculateBoundSize","inverseDelta","getResizeDist","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","dragGroupControlCondition","originalEvents","setDist","child","createRotateMatrix","originalX","originalY","parentStartOffsetWidth","parentStartOffsetHeight","updateGroupMin","originalMinSize","childMinSize","childStartOffsetWidth","childStartOffsetHeight","parentMinWidth","parentMinHeight","updateGroupMax","originalMaxSize","childMaxSize","parentMaxWidth","parentMaxHeight","triggerChildAbles","deltaWidth","deltaHeight","setRotateStartInfo","startAbsoluteOrigin","prevDeg","defaultDeg","prevSnapDeg","loop","startDist","getAbsoluteDist","normalizedPrevDeg","getAbsoluteDistByClient","getRotateInfo","moveableRect","throttleRotate","snapRotation","snapDeg","getRotationPositions","rotationPosition","radPoses","getRotationRad","isReverse","rotationTarget","contains","directionCSS","rotatable","String","rotateAroundControls","resolveAblesWithRotatable","onRotateStart","onBeforeRotate","onRotate","onRotateEnd","onRotateGroupStart","onBeforeRotateGroup","onRotateGroup","onRotateGroupEnd","positions","jsxs","resolveMap_1","directionControlInfos","resolve","renderAroundControls","beforeDirection","resizeStart","startClientX","startClientY","externalRotate","beforeInfo","afterInfo","absoluteInfo","inputTarget","regionDirection","controlDirection","isAroundControl","resolveAble","clientPoses","originalFixedPosition_1","getOrigin","fixedBeforeOrigin","fixedAfterOrigin","posDelta","Resizable","parentPosition","controlPosition","parentFixedPosition","rotatation","isRotate","clientDistX","clientDistY","groupDelta","targetDirection","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","nextClientX","nextClientY","setRotation","nextRotation","inverseDist","prevInverseDist","requestValue","dragEvent","transformEvent","resize","resizeEvent","rotate","beforeRotate","absoluteRotate","parentLeft","parentTop","parentBeforeOrigin","childClient","startGroupClient","groupClient","prevClientX","prevClientY","setGroupRotation","distRotate","getRotation","deltaRotate","scalable","throttleScale","onScaleStart","onBeforeScale","onScale","onScaleEnd","onScaleGroupStart","onBeforeScaleGroup","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","getNextScale","stateDirection","setScale","nextScale","multiply2","scaleEndParam","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","warpTargetMatrix","targetInverseMatrix","ignoreDimension","createIdentityMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","VIEW_DRAGGING","restoreStyle","areaElement","removeClass","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","makeMatrixCSS","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","scrollThrottleTime","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","scrollBy","checkScroll","throttleTime","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","rootContainer","useResizeObserver","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","hideDefaultLines","flushSync","stopPropagation","preventClickEventOnDrag","preventClickDefault","viewContainer","persistData","useAccuratePosition","firstRenderState","onChangeTargets","padding","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","radiusPoses","virtual","raws","rawPos","styles","getRadiusRange","controlPoses","horizontalRange","verticalRange","clipPose","sub","minCounts","full","splitIndex","splitLength","horizontalValues","verticalValues","horizontalValuesLength","verticalValuesLength","hasVerticalValues","nwValue","neValue","seValue","_h","swValue","wnValue","_j","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipType","clipPoses","isRect","isCircle","clipRelative","subWidth","subHeight","getRectPoses","xs","ys","diry","dirx","getControlSize","xRange","yRange","getClipPath","defaultClip","customClip","clipText","clip","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","minMaxs","minX","maxX","minY","maxY","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","nextRight","nextBottom","getRadiusValues","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextDist","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","addClipPath","clipIndex","clipStyle","clipEventType","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","dragDelta","deltaOrigin","addBorderRadiusByLine","lineIndex","horizontalsLength","verticalsLength","controlIndex","controlPoseInfo","addBorderRadius","removeBorderRadius","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","getStyleBorderRadius","firstTarget","getTargets","roundable","minRoundControls","maxRoundControls","roundClickable","roundPadding","isDisplayShadowRoundControls","onRoundStart","onRound","onRoundEnd","onRoundGroupStart","onRoundGroup","onRoundGroupEnd","verticalCount","horizontalCount","basePos","originalPos","isDisplay","display","indexAttr","replace","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","identityMatrix","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","startTransform","resetStyle","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","resultCount","fillDragEndParams","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","updateRect","requestAble_1","eventAbles","Renderable","elementFromPoint","isDragStop","results","nextDatas","off","isUpdate","isForceEnd","preventDefault","isUnmounted","forceUpdate","triggerAble","checkMoveableTarget","eventTarget","isMoveableElement","controlBox","getElement","getTargetAbleGesto","moveableTarget","getAbleGesto","conditionFunctions","isTargetAbles","options","preventRightClick","preventWheelClick","preventClickEventOnDragStart","preventClickEventByCondition","gesto","Gesto","_onEvent","addEventListener","setAbles","removeEventListener","EventManager","getShadowRoot","getRootNode","rootNode","getMatrixStackInfo","checkContainer","targetTransformOrigin","offsetContainer","convertCSStoMatrix","isFixed","fixedInfo","offsetPos","getSVGMatrix","isOffsetEnd","customOffsetParent","customOffsetLeft","customOffsetTop","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","isElementTarget","calculateMatrixStack","isAbsolute3d","prevTargetMatrix","containerZoom","rootMatrixes","isRoot3d","offsetRootContainer","rootZoom","isNext3d","isSVGGraphicElement","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","isMatrix3d","originalRootMatrix","hasZoom","calculateElementInfo","allResult","getElementInfo","moveableElement","parentContainer","targetClientRect","rootContainerClientRect","offsetDelta","computedStyle_1","beforePosition","absoluteTargetPosition","absoluteContainerPosition","containerClientRectLeft","containerClientRectTop","containterClientLeft","containerClientTop","clientDelta","originalBeforeOrigin","getPersistState","isPersisted","__extends","getMoveableTargetInfo","EventEmitter","checkUpdateRect","cancelAnimationFrame","_observerId","propsTarget","ControlBoxElement","_checkUpdateRootContainer","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","ableClassName","_getAbleClassName","_hasFirstTarget","isVisible","_onPreventClick","renderAbles","_renderLines","isMoveableMounted","wrapperMoveable","_checkUpdateViewContainer","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","_viewContainer","_changeAbleViewClassNames","manager","destroy","getAble","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","_rootContainer","nextState","_getRequestStyles","persistState","updateState","updateTarget","statePos","isInstant","requsetAble","ableRequester","requester","ableParam","componentWillUnmount","stateLeft","stateTop","_isPropTargetChanged","stateContainer","updateAbles","isTargetChanged","equals","isChanged","moveableContainer","unsetAbles","Promise","trigger","tag","customStyleMap","customStyledMap","styled","hasControlBox","updateSelectors","targetAbles","setState","always","Renderer","groupByMap","styleNames","ableStyleNames","ResizeObserver","_observer","observer","observe","box","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","_prevTarget","_prevDragArea","hideChildMoveableDefaultLines","useDragArea","prevTarget","prevDragArea","isDragAreaChanged","eventKeys","hasAbles","viewContainerOption","_getAbleViewClassNames","nextClassNames","prevClassNames","_viewClassNames","removed","classPrefix","targetGestoData","controlGestoData","trim","MoveableManager","isWrapperMounted","cssStyled","PureComponent","defaultGroupRotate","defaultGroupOrigin","groupableProps","targetGroups","renderGroupRects","persistDatChildren","refs","clickable","containsElement","containsTarget","targetIndex","getDraggableEvent","dragCondition","dragGroupCondition","individualGroupable","MOVEABLE_ABLES","BeforeRenderable","Default","Snappable","Pinchable","Scalable","Warpable","Rotatable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","parentPoses","fixedRotation","a1_1","tan","a2_1","a1MinMax_1","a1MinMaxPos_1","a2MinMax_1","a2MinMaxPos_1","a1Dist","solveConstantsDistance","a2Dist","a1MaxPos","a2MaxPos","minHorizontalLine","solveC","a1MinPos","maxHorizontalLine","minVerticalLine","a2MinPos","maxVerticalLine","line1","line2","minX_1","minY_1","maxX_1","maxY_1","changedX","findMoveableGroups","childTargetGroups","targetGroup","childMoveableGroups","checked","finded","ChildrenDiffer","_super","componentDidMount","checkeds","moveableGroups","isReset","updateGroup","_hasFirstTargets","persistedRoatation","getMoveableGroupRect","parentRotation","posesRotations","rotations","groupRotation","firstRotation","isSameRotation","groupPoses","groupRect","rootGroupRect","_targetGroups","posesInfo","rotateScale","nextTarget","isContainerChanged","differ","update","changed","MoveableGroup","defaultProps","canPersist","MoveableIndividualGroup","getElementTargets","refTargets","selectorMap","elementTargets","getTargetGroups","compareRefTargets","prevRefTargets","nextRefTargets","InitialMoveable","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","makeStyled","userAbles","userProps","__rest","_updateRefs","totalAbles","nextProps","_elementTargets","prevMoveable","target_1","prevTargetMoveable","_checkChangeTargets","resolvePromise","_onChangeTargets","waitToChangeTarget","isBrowser","nextSelectorMap","updateSelectorMap","selectorTarget","_differ","__decorate","withMethods","Moveable","makeMoveable"],"sources":["C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\AbleManager.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\consts.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\gesto\\CustomGesto.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\gesto\\GestoUtils.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\gesto\\GestoData.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\utils.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Pinchable.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\groupUtils.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\snappable\\utils.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\snappable\\snap.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\snappable\\innerBounds.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\snappable\\bounds.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\snappable\\render.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\snappable\\snapBounds.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\snappable\\getTotalGuidelines.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Snappable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\renderDirections.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Draggable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Resizable.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Rotatable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Scalable.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Warpable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\classNames.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\DragArea.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Origin.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Scrollable.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Default.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Padding.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\roundable\\borderRadius.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\clippable\\utils.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Clippable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\OriginDraggable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Roundable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\BeforeRenderable.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Renderable.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\gesto\\getAbleGesto.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\EventManager.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\utils\\getMatrixStackInfo.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\utils\\calculateMatrixStack.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\utils\\getElementInfo.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\utils\\getMoveableTargetInfo.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\utils\\persist.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\MoveableManager.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Groupable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\Clickable.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\edgeDraggable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\IndividualGroupable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\ables\\consts.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\Snappable\\utils.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\MoveableGroup.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\MoveableIndividualGroup.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\InitialMoveable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\Moveable.tsx","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\react-moveable\\src\\makeMoveable.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\n\nexport const IS_FIREFOX = agent.browser.name === \"firefox\";\nexport const IS_SAFARI_ABOVE15\n    = parseInt(agent.browser.webkitVersion, 10) >= 612\n    || parseInt(agent.browser.version, 10) >= 15;\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n    outline: 1px solid transparent;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.edge {\n    z-index: 1;\n    background: transparent;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"], :global .view-control-rotation${degree} {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\n\nexport const DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_REGION_TO_DIRECTION: Record<string, number[]> = {\n    n: [0, -1],\n    e: [1, 0],\n    s: [0, 1],\n    w: [-1, 0],\n    nw: [-1, -1],\n    ne: [1, -1],\n    sw: [-1, 1],\n    se: [1, 1],\n};\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    e: [1, 3],\n    s: [3, 2],\n    w: [2, 0],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n    \"waitToChangeTarget\",\n    \"updateSelectors\",\n    \"getTargets\",\n    \"stopDrag\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n    ableName = \"draggable\",\n) {\n    const result = state.gestos[ableName]?.move(delta, e.inputEvent) ?? {};\n    const datas = result.originalDatas || result.datas;\n    const ableDatas = datas[ableName] || (datas[ableName] = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: ableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n    constructor(private ableName = \"draggable\") {\n        this.datas = {\n            [ableName]: {},\n        };\n    }\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas[this.ableName]) {\n            originalDatas[this.ableName] = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        let isFirstDrag = false;\n\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            const isPrevDrag = this.isDrag;\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n\n            if (!isPrevDrag && this.isDrag) {\n                isFirstDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isFirstDrag,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas[this.ableName],\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, calculateMoveablePosition, convertTransformInfo, fillCSSObject,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, findIndex, dot, find } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\nimport { Draggable } from \"../index.esm\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n\n\n    const nextTransforms = originalDatas.nextTransforms as string[];\n    const length = nextTransforms.length;\n    const nextTransformAppendedIndexes: any[] = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = 0;\n\n    if (index === -1) {\n        // translate => rotate => scale\n        if (functionName === \"translate\") {\n            nextIndex = 0;\n        } else if (functionName === \"rotate\") {\n            nextIndex = findIndex(nextTransforms, text => text.match(/scale\\(/g,));\n        }\n        if (nextIndex === -1) {\n            nextIndex = nextTransforms.length;\n        }\n        datas.transformIndex = nextIndex;\n    } else if (find(nextTransformAppendedIndexes, info => info.index === index && info.functionName === functionName)) {\n        nextIndex = index;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter(info => info.index < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else if (length > nextIndex) {\n        datas.isAppendTransform = true;\n\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, {\n            functionName,\n            index: nextIndex,\n            isAppend: true,\n        }];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    const xRatio = (direction[0] + 1) / 2;\n    const yRatio = (direction[1] + 1) / 2;\n\n    const top = [\n        dot(poses[0][0], poses[1][0], xRatio, 1 - xRatio),\n        dot(poses[0][1], poses[1][1], xRatio, 1 - xRatio),\n    ];\n    const bottom = [\n        dot(poses[2][0], poses[3][0], xRatio, 1 - xRatio),\n        dot(poses[2][1], poses[3][1], xRatio, 1 - xRatio),\n    ];\n    return [\n        dot(top[0], bottom[0], yRatio, 1 - yRatio),\n        dot(top[1], bottom[1], yRatio, 1 - yRatio),\n    ];\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = getBeforeRenderableDatas(e);\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = getBeforeRenderableDatas(e);\n\n    originalDatas.nextTransforms = splitSpace(transform);\n    // originalDatas.nextTargetMatrix = parseMat(transform);\n}\nexport function getBeforeRenderableDatas(e: any) {\n    return e.originalDatas.beforeRenderable;\n}\nexport function getNextTransforms(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms;\n}\nexport function getNextTransformText(e: any) {\n    return getNextTransforms(e).join(\" \");\n}\n\nexport function getNextStyle(e: any) {\n    return getBeforeRenderableDatas(e).nextStyle;\n}\n\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n\n    const drag = Draggable.drag!(\n        moveable,\n        setCustomDrag(e, moveable.state, delta, isPinch, false),\n    ) as OnDrag;\n    const afterTransform = drag ? drag.transform : nextTransform;\n    return {\n        transform: nextTransform,\n        drag: drag as OnDrag,\n        ...fillCSSObject({\n            transform: afterTransform,\n        }, e),\n        afterTransform,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionByPos(\n    pos: number[],\n    width: number,\n    height: number,\n) {\n    return [\n        -1 + pos[0] / (width / 2),\n        -1 + pos[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    datas: any,\n) {\n    const fixedDirection = datas.fixedDirection;\n    const fixedPosition = datas.fixedPosition;\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedPosition: number[],\n    transformOrigin: string[],\n    datas: any,\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const state = moveable.state;\n    const {\n        transformOrigin: prevOrigin,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = state;\n    const fixedDirection = datas.fixedDirection;\n    const targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { MoveableManagerInterface } from \"../types\";\n\nexport function getGestoData(moveable: MoveableManagerInterface, ableName: string) {\n    const targetGesto = moveable.targetGesto;\n    const controlGesto = moveable.controlGesto;\n    let data!: Record<string, any>;\n\n    if (targetGesto?.isFlag()) {\n        data = targetGesto.getEventData()[ableName];\n    }\n\n    if (!data && controlGesto?.isFlag()) {\n        data = controlGesto.getEventData()[ableName];\n    }\n\n    return data || {};\n}\n","import { PREFIX, IS_WEBKIT605, TINY_NUM } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction, convertUnitSize, between, getKeys, decamelize,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    createScaleMatrix,\n    plus,\n    convertMatrixtoCSS,\n    rotate,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n    ElementSizes, MoveablePosition, TransformObject,\n    MoveableRefTargetsResultType, MoveableRefTargetType, MoveableManagerInterface, CSSObject,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getBeforeRenderableDatas, getDragDist } from \"./gesto/GestoUtils\";\nimport { getGestoData } from \"./gesto/GestoData\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function defaultSync(fn: () => void) {\n    fn();\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n    computedStyle = getComputedStyle(target),\n) {\n    const computedTransform = computedStyle.transform;\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedStyle.transform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\n\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n    checkZoom?: boolean,\n    targetStyle?: CSSStyleDeclaration,\n) {\n    const doc = el && el.ownerDocument ? el.ownerDocument : document;\n    const documentElement = doc.documentElement || doc.body;\n    let hasSlot = false;\n    let target: HTMLElement | SVGElement | null | undefined;\n    let parentSlotElement: HTMLElement | null | undefined;\n\n    if (!el || isParent) {\n        target = el;\n    } else {\n        const assignedSlotParentElement = el?.assignedSlot?.parentElement;\n        const parentElement = el.parentElement;\n\n        if (assignedSlotParentElement) {\n            hasSlot = true;\n            parentSlotElement = parentElement;\n            target = assignedSlotParentElement;\n        } else {\n            target = parentElement;\n        }\n    }\n\n    let isCustomElement = false;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n    let offsetZoom = 1;\n\n\n    const targetZoom = parseFloat((targetStyle as any)?.zoom) || 1;\n    const targetPosition = targetStyle?.position;\n\n\n\n    while (target && target !== documentElement) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement, style);\n        const willChange = style.willChange;\n        const zoom = parseFloat((style as any).zoom) || 1;\n        position = style.position!;\n\n        if (checkZoom && zoom !== 1) {\n            offsetZoom = zoom;\n            break;\n        }\n        if (\n            // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n            !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\"\n            || tagName === \"svg\"\n            || position !== \"static\"\n            || (transform && transform !== \"none\")\n            || willChange === \"transform\"\n        ) {\n            break;\n        }\n        const slotParentNode = el?.assignedSlot?.parentNode;\n        const targetParentNode = target.parentNode;\n\n        if (slotParentNode) {\n            hasSlot = true;\n            parentSlotElement = targetParentNode as HTMLElement;\n        }\n        const parentNode = slotParentNode || targetParentNode;\n\n\n        if (parentNode && parentNode.nodeType === 11) {\n            // Shadow Root\n            target = (parentNode as ShadowRoot).host as HTMLElement;\n            isCustomElement = true;\n\n            break;\n        }\n        target = parentNode as HTMLElement | SVGElement;\n        position = \"relative\";\n    }\n    return {\n        offsetZoom,\n        hasSlot,\n        parentSlotElement,\n        isCustomElement,\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === documentElement,\n        offsetParent: target as HTMLElement || documentElement,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    target: HTMLElement | SVGElement,\n    style: CSSStyleDeclaration,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(\n            el as SVGGraphicsElement,\n            origin,\n            el === target && target.tagName.toLowerCase() === \"g\",\n        );\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getBodyScrollPos() {\n    return [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop,\n    ];\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === document.body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || document.body,\n        hasTransform,\n    };\n}\n\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n    isGTarget?: boolean,\n) {\n    if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\n\nexport function calculateMoveableClientPositions(\n    rootMatrix: number[],\n    poses: number[][],\n    rootClientRect: MoveableClientRect,\n) {\n    const is3d = rootMatrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const rootPoses = poses.map(pos => calculatePosition(rootMatrix, pos, n));\n    const { left, top } = rootClientRect;\n\n    return rootPoses.map(pos => {\n        return [pos[0] + left, pos[1] + top];\n    });\n\n}\nexport function calculateMoveablePosition(\n    matrix: number[],\n    origin: number[],\n    width: number,\n    height: number,\n): MoveablePosition {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(calculatePoses(matrix, 100, 100, n));\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\n\nexport function getProps<Props>(props: Props, ableName: keyof Props): Props {\n    const self = props[ableName];\n\n    if (isObject(self)) {\n        return {\n            ...props,\n            ...self,\n        };\n    }\n    return props;\n}\n\nexport function getSize(\n    target?: SVGElement | HTMLElement | null,\n    style: CSSStyleDeclaration | null = target ? getComputedStyle(target) : null,\n): ElementSizes {\n    const hasOffset = target && !isUndefined((target as any).offsetWidth);\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n    let clientWidth = 0;\n    let clientHeight = 0;\n    let cssWidth = 0;\n    let cssHeight = 0;\n    let contentWidth = 0;\n    let contentHeight = 0;\n\n    let minWidth = 0;\n    let minHeight = 0;\n    let minOffsetWidth = 0;\n    let minOffsetHeight = 0;\n\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n    let maxOffsetWidth = Infinity;\n    let maxOffsetHeight = Infinity;\n    let inlineCSSWidth = 0;\n    let inlineCSSHeight = 0;\n    let svg = false;\n\n    if (target) {\n        if (!hasOffset && target!.tagName.toLowerCase() !== \"svg\") {\n            const bbox = (target as SVGGraphicsElement).getBBox();\n\n            svg = true;\n            offsetWidth = bbox.width;\n            offsetHeight = bbox.height;\n            cssWidth = offsetWidth;\n            cssHeight = offsetHeight;\n            contentWidth = offsetWidth;\n            contentHeight = offsetHeight;\n            clientWidth = offsetWidth;\n            clientHeight = offsetHeight;\n        } else {\n            const targetStyle = target.style;\n            const boxSizing = style!.boxSizing === \"border-box\";\n            const borderLeft = parseFloat(style!.borderLeftWidth!) || 0;\n            const borderRight = parseFloat(style!.borderRightWidth!) || 0;\n            const borderTop = parseFloat(style!.borderTopWidth!) || 0;\n            const borderBottom = parseFloat(style!.borderBottomWidth!) || 0;\n            const paddingLeft = parseFloat(style!.paddingLeft!) || 0;\n            const paddingRight = parseFloat(style!.paddingRight!) || 0;\n            const paddingTop = parseFloat(style!.paddingTop!) || 0;\n            const paddingBottom = parseFloat(style!.paddingBottom!) || 0;\n\n            const horizontalPadding = paddingLeft + paddingRight;\n            const verticalPadding = paddingTop + paddingBottom;\n            const horizontalBorder = borderLeft + borderRight;\n            const verticalBorder = borderTop + borderBottom;\n            const horizontalOffset = horizontalPadding + horizontalBorder;\n            const verticalOffset = verticalPadding + verticalBorder;\n            const position = style!.position;\n\n            let containerWidth = 0;\n            let containerHeight = 0;\n\n            // SVGSVGElement, HTMLElement\n            if (\"clientLeft\" in target) {\n                let parentElement: HTMLElement | null = null;\n\n                if (position === \"absolute\") {\n                    const offsetInfo = getOffsetInfo(target, document.body);\n                    parentElement = offsetInfo.offsetParent;\n\n                } else {\n                    parentElement = target.parentElement;\n                }\n                if (parentElement) {\n                    const parentStyle = getComputedStyle(parentElement);\n\n                    containerWidth = parseFloat(parentStyle.width);\n                    containerHeight = parseFloat(parentStyle.height);\n                }\n            }\n            minWidth = Math.max(\n                horizontalPadding,\n                convertUnitSize(style!.minWidth, containerWidth) || 0,\n            );\n            minHeight = Math.max(\n                verticalPadding,\n                convertUnitSize(style!.minHeight, containerHeight) || 0,\n            );\n            maxWidth = convertUnitSize(style!.maxWidth, containerWidth);\n            maxHeight = convertUnitSize(style!.maxHeight, containerHeight);\n\n            if (isNaN(maxWidth)) {\n                maxWidth = Infinity;\n            }\n            if (isNaN(maxHeight)) {\n                maxHeight = Infinity;\n            }\n            inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n            inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n            cssWidth = parseFloat(style!.width) || 0;\n            cssHeight = parseFloat(style!.height) || 0;\n\n\n            contentWidth = Math.abs(cssWidth - inlineCSSWidth) < 1\n                ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth)\n                : cssWidth;\n            contentHeight = Math.abs(cssHeight - inlineCSSHeight) < 1\n                ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight)\n                : cssHeight;\n\n            offsetWidth = contentWidth;\n            offsetHeight = contentHeight;\n            clientWidth = contentWidth;\n            clientHeight = contentHeight;\n\n            if (boxSizing) {\n                maxOffsetWidth = maxWidth;\n                maxOffsetHeight = maxHeight;\n                minOffsetWidth = minWidth;\n                minOffsetHeight = minHeight;\n                contentWidth = offsetWidth - horizontalOffset;\n                contentHeight = offsetHeight - verticalOffset;\n            } else {\n                maxOffsetWidth = maxWidth + horizontalOffset;\n                maxOffsetHeight = maxHeight + verticalOffset;\n                minOffsetWidth = minWidth + horizontalOffset;\n                minOffsetHeight = minHeight + verticalOffset;\n                offsetWidth = contentWidth + horizontalOffset;\n                offsetHeight = contentHeight + verticalOffset;\n            }\n            clientWidth = contentWidth + horizontalPadding;\n            clientHeight = contentHeight + verticalPadding;\n        }\n    }\n\n    return {\n        svg,\n        offsetWidth,\n        offsetHeight,\n        clientWidth,\n        clientHeight,\n        contentWidth,\n        contentHeight,\n        inlineCSSWidth,\n        inlineCSSHeight,\n        cssWidth,\n        cssHeight,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        minOffsetWidth,\n        minOffsetHeight,\n        maxOffsetWidth,\n        maxOffsetHeight,\n    };\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, top: 0,\n        width: 0, height: 0,\n        right: 0,\n        bottom: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\n\nexport function getExtendsRect(el: HTMLElement | SVGElement, rect: MoveableClientRect): MoveableClientRect {\n    const isRoot = el === document.body || el === document.documentElement;\n\n\n    const extendsRect =  {\n        clientLeft: el.clientLeft,\n        clientTop: el.clientTop,\n        clientWidth: el.clientWidth,\n        clientHeight: el.clientHeight,\n        scrollWidth: el.scrollWidth,\n        scrollHeight: el.scrollHeight,\n        overflow: false,\n    };\n\n    if (isRoot) {\n        extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n        extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n    }\n    extendsRect.overflow = getComputedStyle(el).overflow !== \"visible\";\n\n    return {\n        ...rect,\n        ...extendsRect,\n    };\n}\n\nexport function getClientRectByPosition(\n    position: { left: number, right: number, top: number, bottom: number },\n    base: MoveableClientRect,\n    el?: HTMLElement | SVGElement, isExtends?: boolean,\n) {\n    const {\n        left,\n        right,\n        top,\n        bottom,\n    } = position;\n    const baseTop = base.top;\n    const baseLeft = base.left;\n\n    const rect: MoveableClientRect = {\n        left: baseLeft + left,\n        top: baseTop + top,\n        right: baseLeft + right,\n        bottom: baseTop + bottom,\n        width: right - left,\n        height: bottom - top,\n    };\n\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n    // let isRoot = false;\n\n    if (el) {\n        // isRoot = el === document.body || el === document.documentElement;\n        // if (isRoot) {\n        //     width = window.innerWidth;\n        //     height = window.innerHeight;\n        //     const scrollPos = getBodyScrollPos();\n\n        //     [left, top] = [-scrollPos[0], -scrollPos[1]];\n        // } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n        // }\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        top,\n        width,\n        height,\n        right: left + width,\n        bottom: top + height,\n    };\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getTotalDirection(\n    parentDirection: number[],\n    isPinch: boolean,\n    inputEvent: any,\n    datas: any,\n) {\n    let direction: number[] | undefined;\n\n    if (parentDirection) {\n        direction = parentDirection;\n    } else if (isPinch) {\n        direction = [0, 0];\n    } else {\n        const target = inputEvent.target;\n\n        direction = getDirection(target, datas);\n    }\n    return direction;\n}\nexport function getDirection(target: SVGElement | HTMLElement, datas: any) {\n    if (!target) {\n        return;\n    }\n    const deg = target.getAttribute(\"data-rotation\") || \"\";\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    datas.deg = deg;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\n\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\n\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\nexport function fillCSSObject(style: Record<string, any>, resolvedEvent?: any): CSSObject {\n    if (resolvedEvent) {\n        const originalDatas = getBeforeRenderableDatas(resolvedEvent);\n\n        originalDatas.nextStyle = {\n            ...originalDatas.nextStyle,\n            ...style,\n        };\n    }\n    return {\n        style,\n        cssText: getKeys(style).map(name => `${decamelize(name, \"-\")}: ${style[name]};`).join(\"\"),\n    };\n}\n\nexport function fillAfterTransform(\n    prevEvent: { style: Record<string, string>, transform: string },\n    nextEvent: { style: Record<string, string>, transform: string, afterTransform?: string },\n    resolvedEvent?: any\n): TransformObject {\n    const afterTransform = nextEvent.afterTransform || nextEvent.transform;\n\n    return {\n        ...fillCSSObject({\n            ...prevEvent.style,\n            ...nextEvent.style,\n            transform: afterTransform,\n        }, resolvedEvent),\n        afterTransform,\n        transform: prevEvent.transform,\n    };\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n        stopAble() {\n            datas.isEventStart = false;\n        },\n        stopDrag() {\n            e.stop?.();\n        },\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[],\n    pos: number[],\n    transformOrigin: number[],\n    origin: number[],\n    n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function viewDraggingPrefix(ableName: string) {\n    return prefix(`${ableName}-view-dragging`);\n}\nexport function getDirectionViewClassName(ableName: string) {\n    return (moveable: MoveableManagerInterface) => {\n        if (!moveable.isDragging(ableName)) {\n            return \"\";\n        }\n        const data = getGestoData(moveable, ableName);\n        const deg = data.deg;\n        if (!deg) {\n            return \"\";\n        }\n        return prefix(`view-control-rotation${deg}`);\n    };\n}\nexport function getDirectionCondition(ableName: string, checkAbles: string[] = [ableName]) {\n    return (moveable: any, e: any) => {\n        if (e.isRequest) {\n            if (checkAbles.some(name => e.requestAble === name)) {\n                return e.parentDirection!;\n            } else {\n                return false;\n            }\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n    };\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function convertTransformInfo(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (arr instanceof Element) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (target instanceof Element) {\n        return target;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector?: boolean): MoveableRefTargetsResultType;\nexport function getRefTargets(targets: MoveableRefTargetType, isSelector?: boolean): any[] {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        if (isArray(target)) {\n            prev.push(getRefTargets(target, isSelector));\n        } else {\n            prev.push(getRefTarget(target, isSelector));\n        }\n        return prev;\n    }, [] as MoveableRefTargetsResultType);\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * 2 * startOffsetWidth;\n            const startHeightSize = direction[1] * 2 * startOffsetHeight;\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                - getDistSize([startWidthSize, startHeightSize]);\n            const ratioRad = getRad([0, 0], [ratio, 1]);\n\n            distWidth = Math.cos(ratioRad) * distSize;\n            distHeight = Math.sin(ratioRad) * distSize;\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        parentDistance,\n        parentDist,\n        parentScale,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n    const directionsDists = [0, 1].map(index => {\n        return Math.abs(sizeDirection[index] - startFixedDirection[index]);\n    });\n    const directionRatios = [0, 1].map(index => {\n        let dist = directionsDists[index];\n\n        if (dist !== 0) {\n            dist = 2 / dist;\n        }\n        return dist;\n    });\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (parentDistance) {\n        const scaleX = startOffsetWidth * directionsDists[0];\n        const scaleY = startOffsetHeight * directionsDists[1];\n        const ratioDistance = getDistSize([scaleX, scaleY]);\n\n        distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n        distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = directionRatios.map((ratio, i) => {\n            return dist[i] * ratio;\n        });\n\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n\nexport function convertTransformUnit(\n    origin: string,\n    xy?: boolean,\n): { x?: string; y?: string; value?: string; } {\n    if (xy) {\n        if (origin === \"left\") {\n            return { x: \"0%\", y: \"50%\" };\n        } else if (origin === \"top\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"center\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"right\") {\n            return { x: \"100%\", y: \"50%\" };\n        } else if (origin === \"bottom\") {\n            return { x: \"50%\", y: \"100%\" };\n        }\n        const [left, right] = origin.split(\" \");\n        const leftOrigin = convertTransformUnit(left || \"\");\n        const rightOrigin = convertTransformUnit(right || \"\");\n        const originObject = {\n            ...leftOrigin,\n            ...rightOrigin,\n        };\n\n        const nextOriginObject = {\n            x: \"50%\",\n            y: \"50%\",\n        };\n        if (originObject.x) {\n            nextOriginObject.x = originObject.x;\n        }\n        if (originObject.y) {\n            nextOriginObject.y = originObject.y;\n        }\n        if (originObject.value) {\n            if (originObject.x && !originObject.y) {\n                nextOriginObject.y = originObject.value;\n            }\n            if (!originObject.x && originObject.y) {\n                nextOriginObject.x = originObject.value;\n            }\n        }\n        return nextOriginObject;\n    }\n    if (origin === \"left\") {\n        return { x: \"0%\" };\n    }\n    if (origin === \"right\") {\n        return { x: \"100%\" };\n    }\n    if (origin === \"top\") {\n        return { y: \"0%\" };\n    }\n    if (origin === \"bottom\") {\n        return { y: \"100%\" };\n    }\n    if (!origin) {\n        return {};\n    }\n    if (origin === \"center\") {\n        return { value: \"50%\" };\n    }\n    return { value: origin };\n}\nexport function convertTransformOriginArray(transformOrigin: string, width: number, height: number) {\n    const { x, y } = convertTransformUnit(transformOrigin, true);\n\n    return [\n        convertUnitSize(x!, width) || 0,\n        convertUnitSize(y!, height) || 0,\n    ];\n}\n\nexport function rotatePosesInfo(poses: number[][], origin: number[], rad: number) {\n    const prevPoses = poses.map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    return {\n        prev: prevPoses,\n        next: nextPoses,\n        result: nextPoses.map(pos => plus(pos, origin)),\n    };\n}\n\n\n\nexport function isDeepArrayEquals(arr1: any[], arr2: any[]): boolean {\n    return arr1.length === arr2.length && arr1.every((value1, i) => {\n        const value2 = arr2[i];\n        const isArray1 = isArray(value1);\n        const isArray2 = isArray(value2);\n        if (isArray1 && isArray2) {\n            return isDeepArrayEquals(value1, value2);\n        } else if (!isArray1 && !isArray2) {\n            return value1 === value2;\n        }\n        return false;\n    });\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { Able, MoveableGroupInterface, MoveableManagerInterface, MoveableManagerState } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n    ableName: string,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state as MoveableManagerState<any>;\n        const gestos = state.gestos;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n        } else {\n\n\n            if (!gestos[ableName]) {\n                gestos[ableName] = datas.childGestos[i];\n            }\n            if (!gestos[ableName]) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            gestos[ableName] = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gestos[ableName]);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gestos = {};\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { throttle } from \"@daybrush/utils\";\nimport {\n    MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculatePosition,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\n\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n    snapThreshold = 1,\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), snapThreshold);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => Math.abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n): any[] {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element, className } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n): any {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\n            // Type can be used render different values.\n            if (type === 'vertical') {\n                return v;\n            }\n            return v;\n        },\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n): any[] {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type).slice(0, 1);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect, className }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && Math.abs(endDirection[0]) === 1\n            && Math.abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import { isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport {\n    MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapGuideline, SnapDirectionPoses,\n    PosGuideline, ElementGuidelineValue,\n    SnapElementRect,\n} from \"../../types\";\nimport { getRect, getAbsolutePosesByState, getRefTarget, calculateInversePosition, roundSign } from \"../../utils\";\nimport {\n    splitSnapDirectionPoses, getSnapDirections,\n    HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP, calculateContainerPos,\n} from \"./utils\";\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        hasFixed,\n    } = state;\n    const {\n        overflow,\n        scrollHeight: containerHeight,\n        scrollWidth: containerWidth,\n        clientHeight: containerClientHeight,\n        clientWidth: containerClientWidth,\n        clientLeft,\n        clientTop,\n    } = containerClientRect;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n        maxSnapElementGuidelineDistance = Infinity,\n    } = moveable.props;\n    const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n    const targetRect = { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 };\n    const elementGuidelines = getElementGuidelines(moveable);\n    let totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        totalGuidelines.push(...getGapGuidelines(\n            moveable, targetRect, snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n    const snapOffset = {\n        ...(state.snapOffset || {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n        }),\n    };\n\n\n    if (hasFixed) {\n        const { left, top } = containerClientRect;\n\n        snapOffset.left += left;\n        snapOffset.top += top;\n        snapOffset.right += left;\n        snapOffset.bottom += top;\n    }\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    totalGuidelines = totalGuidelines.filter(({ element, elementRect, type }) => {\n        if (!element || !elementRect) {\n            return true;\n        }\n        const rect = elementRect.rect;\n\n        return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n    });\n\n    return totalGuidelines;\n}\n\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const {\n        maxSnapElementGuidelineDistance = Infinity,\n        maxSnapElementGapDistance = Infinity,\n    } = moveable.props;\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n                return;\n            }\n            if (gap > maxSnapElementGapDistance) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n\nexport function checkBetweenRects(\n    rect1: SnapDirectionPoses,\n    rect2: SnapDirectionPoses,\n    type: \"horizontal\" | \"vertical\",\n    distance: number,\n) {\n    if (type === \"horizontal\") {\n        return Math.abs(rect1.right! - rect2.left!) <= distance\n            || Math.abs(rect1.left! - rect2.right!) <= distance\n            || rect1.left! <= rect2.right! && rect2.left! <= rect1.right!;\n    } else if (type === \"vertical\") {\n        return Math.abs(rect1.bottom! - rect2.top!) <= distance\n            || Math.abs(rect1.top! - rect2.bottom!) <= distance\n            || rect1.top! <= rect2.bottom! && rect2.top! <= rect1.bottom!;\n    }\n    return true;\n}\n\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return {\n                ...el,\n                element: getRefTarget(el.element, true)!,\n            };\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\n\nexport function getDefaultGuidelines(\n    horizontalGuidelines: Array<PosGuideline | number> | false,\n    verticalGuidelines: Array<PosGuideline | number> | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"horizontal\",\n            pos: [\n                snapOffsetLeft,\n                throttle(nextPosInfo.pos - clientTop + snapOffsetTop, 0.1),\n            ],\n            size: snapWidth,\n            className: nextPosInfo.className,\n        });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"vertical\",\n            pos: [\n                throttle(nextPosInfo.pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ],\n            size: snapHeight,\n            className: nextPosInfo.className,\n        });\n    });\n    return guidelines;\n}\n\n\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n    getDirectionCondition,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\nimport { getTotalGuidelines } from \"./snappable/getTotalGuidelines\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function checkSnapInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n    const container = state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n        return false;\n    }\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n\n            snapOffset.left = throttle(offset1[0], 0.00001);\n            snapOffset.top = throttle(offset1[1], 0.00001);\n            snapOffset.right = throttle(offset2[0], 0.00001);\n            snapOffset.bottom = throttle(offset2[1], 0.00001);\n        }\n    }\n\n    state.snapContainer = snapContainer;\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n    return true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return {\n            isSnap: false,\n            rotation,\n        };\n    }\n\n    const { pos1, pos2, pos3, pos4, origin: origin2 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin2));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n    // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin2, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin2,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n    const isSnap = result.length > 0;\n\n    return {\n        isSnap,\n        rotation: isSnap ? result[0] : rotation,\n    };\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection, nextAllMatrix } = datas;\n    const { allMatrix, is3d } = moveable.state;\n\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                nextAllMatrix || allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n\nconst directionCondition = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n\n        snapDirections: [Boolean, Object],\n        elementSnapDirections: [Boolean, Object],\n\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        snapRenderThreshold: Number,\n\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n\n\n        maxSnapElementGuidelineDistance: Number,\n        maxSnapElementGapDistance: Number,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n        const {\n            snapRenderThreshold = 1,\n        } = moveable.props;\n\n        if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction,\n                        snapRenderThreshold,\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects).sort((a, b) => {\n            return a.gap! - b.gap!;\n        });\n\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        checkSnapInfo(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        if (!checkSnapInfo(moveable)) {\n            state.guidelines = getTotalGuidelines(moveable);\n        }\n        if (state.snapRenderInfo) {\n            state.snapRenderInfo.render = true;\n        }\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import { prefix, getControlTransform, getLineStyle, getProps } from \"./utils\";\nimport {\n    Renderer, MoveableManagerInterface,\n    RenderDirections,\n} from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS, DIRECTIONS4 } from \"./consts\";\nimport { IObject, throttle, getRad, getKeys } from \"@daybrush/utils\";\n\nexport interface DirectionControlInfo {\n    data: Record<string, any>;\n    classNames: string[];\n    dir: string;\n}\nexport function renderDirectionControlsByInfos(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    renderDirections: DirectionControlInfo[],\n    React: Renderer,\n): any[] {\n\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n    const {\n        zoom,\n    } = getProps(moveable.props, ableName as any);\n\n\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n    const directionMap: IObject<boolean> = {};\n\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    renderDirections.forEach(({ dir }) => {\n        directionMap[dir] = true;\n    });\n\n    return renderDirections.map(({ data, classNames, dir }) => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        renderDirectionMap[dir] = true;\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const dataAttrs: Record<string, string> = {};\n\n        getKeys(data).forEach(name => {\n            dataAttrs[`data-${name}`] = data[name];\n        });\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, ableName, ...classNames)}\n                data-rotation={directionRotation}\n                data-direction={dir}\n                {...dataAttrs}\n                key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    ableName: string,\n    React: Renderer,\n): any[] {\n    const {\n        renderDirections: directions = defaultDirections,\n    } = getProps(moveable.props, ableName as any);\n\n    if (!directions) {\n        return [];\n    }\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n\n    return renderDirectionControlsByInfos(\n        moveable,\n        ableName,\n        renderDirections.map(dir => {\n            return {\n                data: {},\n                classNames: [],\n                dir,\n            };\n        }),\n        React,\n    );\n}\nexport function renderAroundControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    const {\n        zoom,\n    } = moveable.props;\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n\n    return getKeys(renderDirectionMap).map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"around-control\")} data-rotation={directionRotation} data-direction={dir} key={`direction-around-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\n\nexport function renderLine(\n    React: Renderer,\n    direction: string,\n    pos1: number[],\n    pos2: number[],\n    zoom: number,\n    key: number | string,\n    ...classNames: string[]\n): any {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line-${key}`}\n        className={prefix(\"line\", \"direction\", direction ? \"edge\" : \"\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-key={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\n\nexport function renderEdgeLines(\n    React: Renderer,\n    ableName: string,\n    edge: true | string[],\n    poses: number[][],\n    zoom: number,\n): any[] {\n    const directions = edge === true ? DIRECTIONS4 : edge;\n\n    return directions.map((direction, i) => {\n        const [index1, index2] = DIRECTION_INDEXES[direction];\n\n        if (index2 == null) {\n            return;\n        }\n        return renderLine(React, direction, poses[index1], poses[index2], zoom, `${ableName}Edge${i}`, ableName);\n    }).filter(Boolean);\n}\nexport function getRenderDirections(ableName: string) {\n    return (\n        moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n        React: Renderer,\n    ) => {\n        const edge = getProps(moveable.props, ableName as any).edge;\n\n        if (edge && (edge === true || edge.length)) {\n            return [\n                ...renderEdgeLines(\n                    React,\n                    ableName,\n                    edge,\n                    moveable.getState().renderPoses,\n                    moveable.props.zoom!,\n                ),\n                ...renderDiagonalDirections(moveable, ableName, React),\n            ];\n        }\n        return renderAllDirections(moveable, ableName, React);\n    };\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams,\n    fillCSSObject,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    requestStyle(): string[] {\n        return [\"left\", \"top\", \"right\", \"bottom\"];\n    },\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.getState();\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            gestos,\n            style,\n        } = state;\n\n        if (gestos.draggable) {\n            return false;\n        }\n        gestos.draggable = parentGesto || moveable.targetGesto;\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            gestos.draggable = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest, deltaOffset } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let dragRotateRad = 0;\n        let isVerticalSnap = false;\n        let isVerticalBound = false;\n        let isHorizontalSnap = false;\n        let isHorizontalBound = false;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY,\n                throttleDragRotate,\n                isRequest || deltaOffset, datas,\n            );\n            isVerticalSnap = verticalInfo.isSnap;\n            isVerticalBound = verticalInfo.isBound;\n            isHorizontalSnap = horizontalInfo.isSnap;\n            isHorizontalBound = horizontalInfo.isBound;\n\n            const verticalOffset = verticalInfo.offset;\n            const horizontalOffset = horizontalInfo.offset;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        throttleArray(translate, TINY_NUM);\n        throttleArray(beforeTranslate, TINY_NUM);\n\n        if (!throttleDragRotate) {\n            if (!isVerticalSnap && !isVerticalBound) {\n                translate[0] = throttle(translate[0], throttleDrag);\n                beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n            }\n            if (!isHorizontalSnap && !isHorizontalBound) {\n                translate[1] = throttle(translate[1], throttleDrag);\n                beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n            }\n        }\n\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false, \"draggable\");\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, Record<string, any>>) {\n        moveable.state.gestos.draggable = null;\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent,\n    fillParams,\n    fillEndParams,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n    getProps,\n    getDirectionCondition,\n    calculatePoses,\n    fillAfterTransform,\n    getDirectionViewClassName,\n    getTotalDirection,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getPosByDirection,\n    getNextMatrix,\n    getNextTransforms,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, convertDimension, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\nimport { parseMat } from \"css-to-mat\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nconst directionCondition = getDirectionCondition(\"resizable\");\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n        resizeFormat: Function,\n        keepRatioFinally: Boolean,\n        edge: Boolean,\n        checkResizableError: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onBeforeResize: \"beforeResize\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onBeforeResizeGroup: \"beforeResizeGroup\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"resizable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"resizable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            isGroup,\n            parentDirection,\n            parentGesto,\n            datas,\n            parentFixedDirection,\n            parentEvent,\n        } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n\n        const state = moveable.state;\n        const { target, width, height, gestos } = state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (gestos.resizable) {\n            return false;\n        }\n        gestos.resizable = parentGesto || moveable.controlGesto;\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n\n        datas.minSize = [0, 0];\n\n\n        datas.startWidth = state.inlineCSSWidth || state.cssWidth;\n        datas.startHeight = state.inlineCSSHeight || state.cssHeight;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!isGroup) {\n            datas.minSize = [\n                state.minOffsetWidth,\n                state.minOffsetHeight,\n            ];\n            datas.maxSize = [\n                state.maxOffsetWidth,\n                state.maxOffsetHeight,\n            ];\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.startOffsetMatrix = state.offsetMatrix;\n        datas.startTransformOrigin = state.transformOrigin;\n\n        datas.isWidth = e?.parentIsWidth ?? ((!direction[0] && !direction[1]) || direction[0] || !direction[1]);\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n        function setFixedPosition(fixedPosition: number[]) {\n            const {\n                width,\n                height,\n            } = moveable.state;\n\n            datas.fixedPosition = fixedPosition;\n            datas.fixedDirection = getDirectionByPos(fixedPosition, width, height);\n        }\n        function setMin(minSize: Array<string | number>)  {\n            datas.minSize = [\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\n            ];\n        }\n        function setMax(maxSize: Array<string | number>) {\n            const nextMaxSize = [\n                maxSize[0] || Infinity,\n                maxSize[1] || Infinity,\n            ];\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n            }\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n            }\n            datas.maxSize = nextMaxSize;\n        }\n\n        setRatio(width / height);\n        setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        datas.setFixedPosition = setFixedPosition;\n        datas.setMin = setMin;\n        datas.setMax = setMax;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            startRatio: datas.ratio,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin,\n            setMax,\n            setRatio,\n            setFixedDirection,\n            setFixedPosition,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n        datas.startFixedPosition = datas.fixedPosition;\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n            isGroup,\n            parentEvent,\n            resolveMatrix,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            startOffsetWidth,\n            startOffsetHeight,\n            isWidth,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        if (resolveMatrix) {\n            const {\n                is3d,\n            } = moveable.state;\n            const {\n                startOffsetMatrix,\n                startTransformOrigin,\n            } = datas;\n            const n = is3d ? 4 : 3;\n            let targetMatrix = parseMat(getNextTransforms(e));\n            const targetN = Math.sqrt(targetMatrix.length);\n\n            if (n !== targetN) {\n                targetMatrix = convertDimension(targetMatrix, targetN, n);\n            }\n\n            const nextAllMatrix = getNextMatrix(\n                startOffsetMatrix,\n                targetMatrix,\n                startTransformOrigin,\n                n,\n            );\n            const poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n\n            datas.startPositions = poses;\n            datas.nextTargetMatrix = targetMatrix;\n            datas.nextAllMatrix = nextAllMatrix;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n        const {\n            resizeFormat,\n            throttleResize = parentFlag ? 0 : 1,\n            parentMoveable,\n            keepRatioFinally,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const fixedDirection = datas.fixedDirection;\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = (sizeDirection[0] - fixedDirection[0]) || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = (sizeDirection[1] - fixedDirection[1]) || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        if (!parentEvent) {\n            datas.setFixedDirection(datas.fixedDirection);\n\n            triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n                startFixedDirection: datas.startFixedDirection,\n                startFixedPosition: datas.startFixedPosition,\n                setFixedDirection(nextFixedDirection: number[]) {\n                    datas.setFixedDirection(nextFixedDirection);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                setFixedPosition(nextFixedPosition: number[]) {\n                    datas.setFixedPosition(nextFixedPosition);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                boundingWidth,\n                boundingHeight,\n                setSize(size: number[]) {\n                    [boundingWidth, boundingHeight] = size;\n                },\n            }, true));\n        }\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            keepRatio ? ratio : false,\n        );\n        computeSize();\n\n        if (keepRatio && (isGroup || keepRatioFinally)) {\n            if (isWidth) {\n                boundingHeight = boundingWidth / ratio;\n            } else {\n                boundingWidth = boundingHeight * ratio;\n            }\n        }\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            fixedPosition,\n            transformOrigin,\n            datas,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const drag = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"),\n        ) as OnDrag;\n        const transform = drag.transform;\n\n        const nextWidth = startWidth + distWidth;\n        const nextHeight = startHeight + distHeight;\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: nextWidth,\n            height: nextHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            startRatio: ratio,\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag,\n            ...fillAfterTransform({\n                style: {\n                    width: `${nextWidth}px`,\n                    height: `${nextHeight}px`,\n                },\n                transform,\n            }, drag, e),\n        });\n        !parentEvent && triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize || moveable.props.checkResizableError === false) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, parentEvent } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const {\n            startOffsetWidth: parentStartOffsetWidth,\n            startOffsetHeight: parentStartOffsetHeight,\n        } = datas;\n\n        function updateGroupMin() {\n            const originalMinSize = datas.minSize;\n            originalEvents.forEach(ev => {\n                const {\n                    minSize: childMinSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMinWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n                const parentMinHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n            });\n        }\n\n        function updateGroupMax() {\n            const originalMaxSize = datas.maxSize;\n            originalEvents.forEach(ev => {\n                const {\n                    maxSize: childMaxSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMaxWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n                const parentMaxHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n            });\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n\n        updateGroupMin();\n        updateGroupMax();\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: events.map(ev => {\n                return {\n                    ...ev,\n                    setMin: (minSize: Array<number | string>) => {\n                        ev.setMin(minSize);\n                        updateGroupMin();\n                    },\n                    setMax: (maxSize: Array<number | string>) => {\n                        ev.setMax(maxSize);\n                        updateGroupMax();\n                    },\n                };\n            }),\n            setFixedDirection,\n            setMin: (minSize: Array<number | string>) => {\n                params.setMin(minSize);\n                updateGroupMin();\n            },\n            setMax: (maxSize: Array<number | string>) => {\n                params.setMax(maxSize);\n                updateGroupMax();\n            },\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas: Record<string, any> = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                return { datas, parentDirection: e.direction || [1, 1], parentIsWidth: e?.horizontal ?? true };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, {}>) {\n        moveable.state.gestos.resizable = null;\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n    catchEvent, getProps, calculateMoveableClientPositions,\n    fillAfterTransform,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n    getDist,\n    getKeys,\n    isArray,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnBeforeRotateGroup,\n    OnResizeStart,\n    OnResize,\n    TransformObject,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport { calculate, convertPositionMatrix, getOrigin, minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n    getPosByDirection,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport { DirectionControlInfo, renderAroundControls, renderDirectionControlsByInfos } from \"../renderDirections\";\nimport { DIRECTIONS, DIRECTION_REGION_TO_DIRECTION } from \"../consts\";\nimport Resizable from \"./Resizable\";\nimport Draggable from \"./Draggable\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number,\n    rect: MoveableClientRect,\n) {\n    const groupable = moveable.props.groupable;\n    const state = moveable.state;\n    const n = state.is3d ? 4 : 3;\n    const origin = datas.origin;\n    const nextOrigin = calculatePosition(\n        moveable.state.rootMatrix,\n        // TO-DO #710\n        minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]),\n        n,\n    );\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n    datas.startDist = getDist(startAbsoluteOrigin, [clientX, clientY]);\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    checkSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    const prevSnapDeg = datas.prevSnapDeg;\n    let snapRotation = 0;\n    let isSnap = false;\n\n    if (checkSnap) {\n        const result = checkSnapRotate(moveable, moveableRect, dist);\n\n        isSnap = result.isSnap;\n        snapRotation = startValue + result.rotation;\n    }\n\n    if (!isSnap) {\n        snapRotation = throttle(startValue + dist, throttleRotate);\n    }\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n): [number[], number][] {\n    if (rotationPosition === \"none\") {\n        return [];\n    }\n    if (isArray(rotationPosition)) {\n        return rotationPosition.map(child => getRotationPositions(\n            child,\n            [pos1, pos2, pos3, pos4],\n            direction,\n        )[0]);\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [[pos, rad]];\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (\n        hasClass(target, prefix(\"rotation-control\"))\n        || hasClass(target, prefix(\"around-control\"))\n        || (hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\")))\n    ) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nconst directionCSS = DIRECTIONS.map(dir => {\n    let top = \"\";\n    let left = \"\";\n    let originX = \"center\";\n    let originY = \"center\";\n\n    if (dir.indexOf(\"n\") > -1) {\n        top = \"top: -20px;\";\n        originY = \"bottom\";\n    }\n    if (dir.indexOf(\"s\") > -1) {\n        top = \"top: 0px;\";\n        originY = \"top\";\n    }\n    if (dir.indexOf(\"w\") > -1) {\n        left = \"left: -20px;\";\n        originX = \"right\";\n    }\n    if (dir.indexOf(\"e\") > -1) {\n        left = \"left: 0px;\";\n        originX = \"left\";\n    }\n    return `.around-control[data-direction*=\"${dir}\"] {\n        ${left}${top}\n        transform-origin: ${originX} ${originY};\n    }`;\n}).join(\"\\n\");\nconst css = `.rotation {\n    position: absolute;\n    height: 40px;\n    width: 1px;\n    transform-origin: 50% 100%;\n    height: calc(40px * var(--zoom));\n    top: auto;\n    left: 0;\n    bottom: 100%;\n    will-change: transform;\n}\n.rotation .rotation-line {\n    display: block;\n    width: 100%;\n    height: 100%;\n    transform-origin: 50% 50%;\n}\n.rotation .rotation-control {\n    border-color: #4af;\n    border-color: var(--moveable-color);\n    background:#fff;\n    cursor: alias;\n}\n:global .view-rotation-dragging, .rotatable.direction.control {\n    cursor: alias;\n}\n.around-control {\n    position: absolute;\n    will-change: transform;\n    width: 20px;\n    height: 20px;\n    left: -10px;\n    top: -10px;\n    box-sizing: border-box;\n    background: transparent;\n    z-index: 8;\n    cursor: alias;\n    transform-origin: center center;\n}\n.rotatable.direction.control.move {\n    cursor: move;\n}\n${directionCSS}\n`;\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n        rotateAroundControls: Boolean,\n        edge: Boolean,\n        resolveAblesWithRotatable: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onBeforeRotate: \"beforeRotate\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onBeforeRotateGroup: \"beforeRotateGroup\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [css],\n    viewClassName(moveable: MoveableManagerInterface<RotatableProps>) {\n        if (!moveable.isDragging(\"rotatable\")) {\n            return \"\";\n        }\n        return prefix(\"view-rotation-dragging\");\n    },\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n            rotateAroundControls,\n            resolveAblesWithRotatable,\n        } = getProps(moveable.props, \"rotatable\");\n        const {\n            renderPoses,\n            direction,\n        } = moveable.getState();\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n        const jsxs: any[] = [];\n\n        positions.forEach(([pos, rad], i) => {\n            jsxs.push(\n                <div key={`rotation${i}`} className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        });\n        if (renderDirections) {\n            const ables = getKeys(resolveAblesWithRotatable || {});\n            const resolveMap: Record<string, string> = {};\n\n            ables.forEach(name => {\n                resolveAblesWithRotatable![name]!.forEach(direction => {\n                    resolveMap[direction] = name;\n                });\n            });\n\n            let directionControlInfos: DirectionControlInfo[] = [];\n\n            if (isArray(renderDirections)) {\n                directionControlInfos = renderDirections.map(dir => {\n                    const able = resolveMap[dir];\n\n                    return {\n                        data: able ? { resolve: able } : {},\n                        classNames: able ? [`move`] : [],\n                        dir,\n                    };\n                });\n            }\n\n            jsxs.push(...renderDirectionControlsByInfos(\n                moveable,\n                \"rotatable\",\n                directionControlInfos,\n                React,\n            ));\n        }\n        if (rotateAroundControls) {\n            jsxs.push(...renderAroundControls(moveable, React));\n        }\n\n        return jsxs;\n    },\n    dragControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const state = moveable.state;\n        const {\n            target, left, top,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n            offsetMatrix,\n            targetMatrix,\n            allMatrix,\n            width,\n            height,\n        } = state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        let setFixedPosition = (fixedPosition: number[]) => {\n            const {\n                allMatrix,\n                is3d,\n                width,\n                height,\n            } = moveable.state;\n            const fixedDirection = getDirectionByPos(fixedPosition, width, height);\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = calculatePosition(allMatrix, fixedPosition, is3d ? 4 : 3);\n\n            if (resizeStart) {\n                resizeStart.setFixedPosition(fixedPosition);\n            }\n        };\n        let setFixedDirection: OnRotateStart[\"setFixedDirection\"] = (fixedDirection: number[]) => {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getDirectionOffset(moveable, fixedDirection);\n\n            if (resizeStart) {\n                resizeStart.setFixedDirection(fixedDirection);\n            }\n        };\n        let startClientX = clientX;\n        let startClientY = clientY;\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n                startDist: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            const inputTarget = e.inputEvent?.target;\n\n            if (inputTarget) {\n                const regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n                const controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n\n                if (controlDirection) {\n                    datas.isControl = true;\n                    datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n                    datas.controlDirection = controlDirection;\n                    const resolve = inputTarget.getAttribute(\"data-resolve\");\n\n                    if (resolve) {\n                        datas.resolveAble = resolve;\n                    }\n\n                    const clientPoses = calculateMoveableClientPositions(\n                        state.rootMatrix,\n                        state.renderPoses,\n                        moveableClientRect,\n                    );\n\n\n                    [startClientX, startClientY] = getPosByDirection(clientPoses, controlDirection);\n                }\n            }\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            const originalFixedPosition = setFixedPosition;\n\n            setFixedPosition = (fixedPosition: number[]) => {\n                const n = state.is3d ? 4 : 3;\n                const [originX, originY] = plus(getOrigin(targetMatrix, n), fixedPosition);\n                const fixedBeforeOrigin = calculate(\n                    offsetMatrix,\n                    convertPositionMatrix([originX, originY], n),\n                );\n                const fixedAfterOrigin = calculate(\n                    allMatrix,\n                    convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n),\n                );\n                originalFixedPosition(fixedPosition);\n                const posDelta = state.posDelta;\n\n                datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n                datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n                datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n\n                setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n            };\n            setFixedDirection = (fixedDirection: number[]) => {\n                const fixedPosition = getPosByDirection([\n                    [0, 0],\n                    [width, 0],\n                    [0, height],\n                    [width, height],\n                ], fixedDirection);\n\n                setFixedPosition(fixedPosition);\n            };\n        }\n\n        datas.startClientX = startClientX;\n        datas.startClientY = startClientY;\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        let dragStart: OnDragStart | false = false;\n        let resizeStart: OnResizeStart | false = false;\n\n        if (datas.isControl && datas.resolveAble) {\n            const resolveAble = datas.resolveAble;\n\n            if  (resolveAble === \"resizable\") {\n                resizeStart = Resizable.dragControlStart(moveable, {\n                    ...(new CustomGesto(\"resizable\").dragStart([0, 0], e)),\n                    parentPosition: datas.controlPosition,\n                    parentFixedPosition: datas.fixedPosition,\n                });\n            }\n        }\n\n        if (!resizeStart) {\n            dragStart = Draggable.dragStart!(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            );\n        }\n\n        setFixedPosition(state.transformOrigin);\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            setFixedDirection,\n            setFixedPosition,\n            ...fillTransformStartEvent(e),\n            dragStart,\n            resizeStart,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientDistX, clientDistY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n            startClientX,\n            startClientY,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n        const nextClientX = startClientX + clientDistX;\n        const nextClientY = startClientY + clientDistY;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        datas.requestValue = null;\n\n        const dragEvent = fillTransformEvent(\n            moveable,\n            nextTransform,\n            inverseDelta,\n            isPinch,\n            e,\n        );\n\n        let transformEvent: TransformObject = dragEvent;\n        const parentDistance = getDist(\n            [nextClientX, nextClientY],\n            absoluteInfo.startAbsoluteOrigin,\n        ) - absoluteInfo.startDist;\n\n        let resize: OnResize | undefined = undefined;\n\n        if (datas.resolveAble === \"resizable\") {\n            const resizeEvent = Resizable.dragControl(\n                moveable,\n                {\n                    ...setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\"),\n                    resolveMatrix: true,\n                    parentDistance,\n                },\n            );\n\n            if (resizeEvent) {\n                resize = resizeEvent;\n                transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n            }\n        }\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            resize,\n            ...dragEvent,\n            ...transformEvent,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.startGroupClient = childClient;\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const rad = parentRotate / 180 * Math.PI;\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const startGroupClient = ev.datas.startGroupClient;\n                const [prevClientX, prevClientY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix(startGroupClient, rad * direction);\n                const delta = [clientX - prevClientX, clientY - prevClientY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent, multiply2,\n    fillParams, fillEndParams, getAbsolutePosesByState,\n    catchEvent, getOffsetSizeDist, getDirectionCondition, getDirectionViewClassName, getTotalDirection,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, OnScaleGroup, OnScaleGroupEnd,\n    OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\nconst directionCondition = getDirectionCondition(\"scalable\");\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n        edge: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onBeforeScale: \"beforeScale\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onBeforeScaleGroup: \"beforeScaleGroup\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"scalable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"scalable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            let scaleX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n            let scaleY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n\n            scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n            scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n            if (scaleX === 0) {\n                scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n\n                return scale;\n            },\n            startFixedDirection: datas.startFixedDirection,\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        const dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / startOffsetHeight / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / startOffsetWidth / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        const scaleEndParam = fillEndParams<OnScaleEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n        return scaleEndParam;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams, getDirectionViewClassName, fillCSSObject,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n        edge: Boolean,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    viewClassName: getDirectionViewClassName(\"warpable\"),\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, \"warpable\", React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget, datas);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\nexport const VIEW_DRAGGING = prefix(\"view-dragging\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.getState();\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.getState();\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport {\n    ScrollableProps, OnScroll, MoveableManagerInterface,\n    MoveableGroupInterface, MoveableRefType,\n} from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        scrollThrottleTime: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const dragScroll = e.datas.dragScroll as DragScroll;\n\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer() as MoveableRefType<HTMLElement>,\n            scrollThreshold = 0,\n            scrollThrottleTime = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer!,\n            threshold: scrollThreshold,\n            throttleTime: scrollThrottleTime,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container\n * @name Moveable.Scrollable#scrollable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied\n * @name Moveable.Scrollable#scrollContainer\n * @default container\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area.\n * @name Moveable.Scrollable#scrollThreshold\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Time interval that occurs when scrolling occurs when dragging is maintained\n * If set to 0, it does not occur.\n * @name Moveable.Scrollable#scrollThreshold\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position.\n * @name Moveable.Scrollable#getScrollPosition\n * @default container's scroll pos array\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        useResizeObserver: Boolean,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Object,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        hideDefaultLines: Boolean,\n        props: Object,\n        flushSync: Function,\n        stopPropagation: Boolean,\n        preventClickEventOnDrag: Boolean,\n        preventClickDefault: Boolean,\n        viewContainer: Object,\n        persistData: Object,\n        useAccuratePosition: Boolean,\n        firstRenderState: Object,\n    } as const,\n    events: {\n        onChangeTargets: \"changeTargets\",\n    } as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.getState();\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    nextPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const radiusPoses = nextPoses.filter(pos => !pos.virtual);\n    const raws = radiusPoses.map(posInfo => {\n        const { horizontal, vertical, pos } = posInfo;\n\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        radiusPoses,\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n    full = false,\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const horizontalValuesLength = horizontalValues.length;\n    const verticalValuesLength = verticalValues.length;\n    const hasVerticalValues = verticalValuesLength > 0;\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = hasVerticalValues ? wnValue : neValue,\n        esValue = hasVerticalValues ? wnValue : seValue,\n        wsValue = hasVerticalValues ? enValue : swValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio(\n        [horizontalPoses[0], horizontalPoses[1]],\n        width,\n    );\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio(\n        [horizontalPoses[3], horizontalPoses[2]],\n        width,\n    );\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio(\n        [verticalPoses[0], verticalPoses[3]], height,\n    );\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio(\n        [verticalPoses[1], verticalPoses[2]], height,\n    );\n\n    const nextHorizontalPoses = full\n        ? horizontalPoses\n        : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n    const nextVerticalPoses = full\n        ? verticalPoses\n        : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= horizontalValuesLength,\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= verticalValuesLength,\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import { splitBracket, splitComma, convertUnitSize, splitSpace, splitUnit } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { convertCSSSize } from \"../../utils\";\nimport { getRadiusStyles, getRadiusValues } from \"../roundable/borderRadius\";\nimport { MoveableManagerInterface, ClippableProps, ControlPose } from \"../../types\";\nimport { getMinMaxs } from \"overlap-area\";\n\n\nexport const CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\n\nexport const CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nexport function getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                clipPoses.slice(8).map((info, i) => {\n                    return {\n                        ...info,\n                        pos: poses[i],\n                    };\n                }),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nexport function getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        Math.abs(xRange[1] - xRange[0]),\n        Math.abs(yRange[1] - yRange[0]),\n    ];\n}\n\n\nexport function getClipPath(\n    target: HTMLElement | SVGElement | undefined | null,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    if (!target) {\n        return;\n    }\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n        const minMaxs = getMinMaxs(poses.map(pos => pos.pos));\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n            left: minMaxs.minX,\n            right: minMaxs.maxX,\n            top: minMaxs.minY,\n            bottom: minMaxs.maxY,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            right: centerPos[0] + radiusX,\n            bottom: centerPos[1] + radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    getSizeDistByDist,\n    getProps,\n    fillCSSObject,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/getTotalGuidelines\";\nimport {\n    getControlSize, getClipPath,\n    getClipStyles, getRectPoses,\n} from \"./clippable/utils\";\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\n\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        keepRatio: Boolean,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath,\n            defaultClipPath,\n            clipArea, zoom,\n            groupable,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.getState();\n\n        if (!target || groupable) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, { ...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        const props = getProps(moveable.props, \"clippable\");\n\n        const { keepRatio } = props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? Math.abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? Math.abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n\n            if (snapOffsetY <= snapOffsetX) {\n                snapOffsetY = snapOffsetX / ratio;\n            } else {\n                snapOffsetX = snapOffsetY * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n            ...fillCSSObject({\n                [clipType === \"rect\" ? \"clip\" : \"clipPath\"]: clipStyle,\n            }, e),\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize, fillCSSObject,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const result = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n        )!;\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: result,\n            ...fillCSSObject({\n                transformOrigin,\n                transform: result.transform,\n            }, e),\n            afterTransform: result.transform,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    fillCSSObject,\n    catchEvent,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart,\n    RoundableState, OnRound, ControlPose, OnRoundEnd,\n    MoveableManagerInterface,\n    OnRoundGroup,\n    MoveableGroupInterface,\n    OnRoundGroupStart,\n    OnRoundGroupEnd,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues,\n    getRadiusStyles,\n    splitRadiusPoses,\n} from \"./roundable/borderRadius\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction addBorderRadiusByLine(\n    controlPoses: ControlPose[],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n) {\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 bottom\n    // 3 left\n\n    const horizontalsLength = controlPoses.filter(({ virtual, horizontal }) => horizontal && !virtual).length;\n    const verticalsLength = controlPoses.filter(({ virtual, vertical }) => vertical && !virtual).length;\n    let controlIndex = -1;\n\n    //top\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            controlIndex = 0;\n        } else if (horizontalsLength === 1) {\n            controlIndex = 1;\n        }\n    }\n    // bottom\n    if (lineIndex === 2) {\n        if (horizontalsLength <= 2) {\n            controlIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            controlIndex = 3;\n        }\n    }\n    // left\n    if (lineIndex === 3) {\n        if (verticalsLength === 0) {\n            controlIndex = 4;\n        } else if (verticalsLength < 4) {\n            controlIndex = 7;\n        }\n    }\n\n    // right\n    if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            controlIndex = 5;\n        } else if (verticalsLength <= 2) {\n            controlIndex = 6;\n        }\n    }\n    if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n        return;\n    }\n    const controlPoseInfo = controlPoses[controlIndex];\n\n    addBorderRadius(controlPoses, controlIndex);\n\n    if (controlIndex < 4) {\n        controlPoseInfo.pos[0] = distX;\n    } else {\n        controlPoseInfo.pos[1] = distY;\n    }\n}\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(0, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    } else {\n        if (controlPoses[0].virtual) {\n            controlPoses[0].virtual = false;\n        }\n        controlPoses.slice(4, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    }\n}\nfunction removeBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(index, 4).forEach(info => {\n            info.virtual = true;\n        });\n    } else {\n        controlPoses.slice(index).forEach(info => {\n            info.virtual = true;\n        });\n    }\n}\nfunction getBorderRadius(\n    borderRadius: string,\n    width: number,\n    height: number,\n    minCounts: number[] = [0, 0],\n    full?: boolean,\n) {\n    let values: string[] = [];\n\n    if (!borderRadius || borderRadius === \"0px\") {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    nextPoses: ControlPose[],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n        radiusPoses,\n    } = getRadiusStyles(\n        nextPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(radiusPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    const params = fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n        ...fillCSSObject({\n            borderRadius,\n        }, e),\n    });\n    triggerEvent(moveable, \"onRound\", params);\n\n    return params;\n}\n\n\nfunction getStyleBorderRadius(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n    const {\n        style,\n    } = moveable.getState();\n    let borderRadius = style.borderRadius || \"\";\n\n    if (!borderRadius && moveable.props.groupable) {\n        const firstTarget = moveable.getTargets()[0];\n\n\n        if (firstTarget) {\n            borderRadius = getComputedStyle(firstTarget).borderRadius;\n            style.borderRadius = borderRadius;\n        }\n    }\n    return borderRadius;\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n        roundPadding: Number,\n        isDisplayShadowRoundControls: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n        onRoundGroupStart: \"roundGroupStart\",\n        onRoundGroup: \"roundGroup\",\n        onRoundGroupEnd: \"roundGroupEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n    z-index: 3;\n}`,\n        `.control.border-radius.vertical {\n    background: #d6d;\n    z-index: 2;\n}`,\n        `.control.border-radius.virtual {\n    opacity: 0.5;\n    z-index: 1;\n}`,\n        `:host.round-line-clickable .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    className(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        const roundClickable = moveable.props.roundClickable;\n\n        return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n    },\n    requestStyle(): Array<keyof CSSStyleDeclaration> {\n        return [\"borderRadius\"];\n    },\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.getState();\n\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n            roundPadding = 0,\n            isDisplayShadowRoundControls,\n            groupable,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            borderRadius,\n            width, height,\n            minRoundControls,\n            true,\n        );\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n        const basePos = groupable ? [0, 0] : [left, top];\n\n        return radiusValues.map((v, i) => {\n            const horizontal = v.horizontal;\n            const vertical = v.vertical;\n            const direction = v.direction || \"\";\n            const originalPos = [...v.pos];\n\n            horizontalCount += Math.abs(horizontal);\n            verticalCount += Math.abs(vertical);\n\n\n            if (horizontal && direction.indexOf(\"n\") > -1) {\n                originalPos[1] -= roundPadding;\n            }\n            if (vertical && direction.indexOf(\"w\") > -1) {\n                originalPos[0] -= roundPadding;\n            }\n            if (horizontal && direction.indexOf(\"s\") > -1) {\n                originalPos[1] += roundPadding;\n            }\n            if (vertical && direction.indexOf(\"e\") > -1) {\n                originalPos[0] += roundPadding;\n            }\n            const pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1] && (isDisplayShadowRoundControls || !v.virtual)\n                : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\n                    \"control\", \"border-radius\",\n                    v.vertical ? \"vertical\" : \"\",\n                    v.virtual ? \"virtual\" : \"\",\n                )}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        let lineIndex = -1;\n\n        if (isLine) {\n            const indexAttr = inputTarget.getAttribute(\"data-line-key\")! || \"\";\n\n            if (indexAttr) {\n                lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n\n                if (isNaN(lineIndex)) {\n                    lineIndex = -1;\n                }\n            }\n        }\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const params = fillParams<OnRoundStart>(moveable, e, {});\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", params);\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const borderRadius = getStyleBorderRadius(moveable);\n        const controlPoses = getBorderRadius(\n            borderRadius || \"\",\n            width,\n            height,\n            minRoundControls,\n            true,\n        ) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses,\n            roundRelative!,\n            width,\n            height,\n        ).styles.join(\" \");\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n        const controlPoses = datas.controlPoses as ControlPose[];\n\n        if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((info, i) => {\n            return {\n                ...info,\n                pos: plus(info.pos, dists[i]),\n            };\n        });\n\n        if (index < 4) {\n            nextPoses.slice(0, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        } else {\n            nextPoses.slice(4, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        }\n\n        datas.prevDist = [distX, distY];\n\n        return triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            nextPoses,\n        );\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const length = controlPoses.filter(({ virtual }) => virtual).length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n                removeBorderRadius(controlPoses, controlIndex);\n            } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n            }\n\n            if (length !== controlPoses.filter(({ virtual }) => virtual).length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                );\n            }\n        }\n        const params = fillEndParams<OnRoundEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRoundEnd\", params);\n        state.borderRadiusState = \"\";\n        return params;\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControlStart(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroupStart = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n        return result;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControl(moveable, e);\n\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroup = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    ...fillCSSObject({\n                        borderRadius: result.borderRadius,\n                    }, ev),\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        catchEvent(moveable, \"onRound\", parentEvent => {\n            const nextParams: OnRoundGroup = {\n                targets: moveable.props.targets!,\n                events: events.map((ev, i) => {\n                    return {\n                        ...ev,\n                        target: targets[i],\n                        moveable: moveables[i],\n                        currentTarget: moveables[i],\n                        ...fillCSSObject({\n                            borderRadius: parentEvent.borderRadius,\n                        }, ev),\n                    };\n                }),\n                ...parentEvent,\n            };\n            triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        });\n        const result = this.dragControlEnd(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n        const nextParams: OnRoundGroupEnd = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    lastEvent: ev.datas?.lastEvent,\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n        return nextParams;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupStart\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `roundGroup` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroup\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupEnd\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *     e.events.forEach(ev => {\n *         ev.target.style.cssText += ev.cssText;\n *     });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const n = is3d ? 4 : 3;\n    const identityMatrix = createIdentityMatrix(n);\n    const value = `matrix${is3d ? \"3d\" : \"\"}(${identityMatrix.join(\",\")})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetStyle(e: any) {\n        const datas = e.datas;\n\n        datas.nextStyle = {};\n        datas.nextTransforms = e.datas.startTransforms;\n        datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n        this.resetStyle(e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetStyle(e);\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            this.resetStyle(childEvent);\n\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetStyle(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextStyle, getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams, fillCSSObject } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n            events: params,\n        },));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist, defaultSync } from \"../utils\";\nimport Gesto, { GestoOptions } from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    e.clientDistX = e.distX;\n    e.clientDistY = e.distY;\n    if (eventType === \"\" && !isRequest) {\n        // Convert distX, distY\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length || ables.every(able => able.dragRelation)) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n\n    let isDragStop = false;\n    const stop = () => {\n        isDragStop = true;\n        e.stop?.();\n    };\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                stop,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            (moveable as any)._emitter.off();\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result || nextDatas.isEventStart ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isDragStop) {\n        isForceEnd = true;\n    }\n    if (!isForceEnd && isStart && eventAbles.length && !isUpdate) {\n        isForceEnd = eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length as any;\n    }\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gestos = {};\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gestos = {};\n            });\n        }\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isForceEnd && !isRequest && isUpdate) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        const flushSync = moveable.props.flushSync || defaultSync;\n\n        flushSync(() => {\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\n            moveable.forceUpdate();\n        });\n\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function checkMoveableTarget(moveable: MoveableManagerInterface) {\n    return (e: { inputEvent: Event }) => {\n        const {\n            dragTarget,\n        } = moveable.props;\n        const eventTarget = e.inputEvent.target as Element;\n        const areaElement = moveable.areaElement;\n\n        return dragTarget && (eventTarget === dragTarget || dragTarget.contains(eventTarget))\n            || eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\")\n            || hasClass(eventTarget, \"moveable-edgeDraggable\");\n    };\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n    const dragTarget = moveable.props.dragTarget;\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: checkMoveableTarget(moveable),\n        pinchStart: checkMoveableTarget(moveable),\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const isTargetAbles = ableType === \"targetAbles\";\n    const {\n        pinchOutside,\n        pinchThreshold,\n        preventClickEventOnDrag,\n        preventClickDefault,\n        checkInput,\n    } = moveable.props;\n    const options: GestoOptions = {\n        preventDefault: true,\n        preventRightClick: true,\n        preventWheelClick: true,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n        preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n        preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n        preventClickEventByCondition: isTargetAbles ? null : (e: MouseEvent) => {\n            return moveable.controlBox.getElement().contains(e.target as Element);\n        },\n        checkInput: isTargetAbles ? checkInput : false,\n    };\n    const gesto = new Gesto(target!, options);\n    const isControl = eventAffix === \"Control\";\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                } else if (moveable.props.stopPropagation || (eventType === \"Start\" && isControl)) {\n                    e?.inputEvent?.stopPropagation();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import {\n    convertCSStoMatrix, convertDimension,\n    createIdentityMatrix, createOriginMatrix, createScaleMatrix,\n} from \"@scena/matrix\";\nimport { IS_WEBKIT, IS_SAFARI_ABOVE15, IS_FIREFOX } from \"../consts\";\nimport { MatrixInfo } from \"../types\";\nimport {\n    getOffsetInfo, getElementTransform,\n    getTransformMatrix, getPositionFixedInfo,\n    convert3DMatrixes, getOffsetPosInfo,\n    getSVGMatrix, getBodyOffset, getAbsoluteMatrix,\n} from \"../utils\";\n\n\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\n\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    const documentElement = document.documentElement || document.body;\n    let requestEnd = !checkContainer && target === container || target === documentElement;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n    let zoom = 1;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const transform = getElementTransform(el, style);\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        const isFixed = position === \"fixed\";\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, target, style);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        }\n\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n\n        const targetZoom = parseFloat((style as any).zoom) || 1;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container, false, true, style);\n            const offsetZoom = offsetInfo.offsetZoom;\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n            zoom *= offsetZoom;\n\n            if (offsetZoom !== 1 && isStatic) {\n                offsetLeft -= offsetParent.offsetLeft;\n                offsetTop -= offsetParent.offsetTop;\n            } else if (IS_FIREFOX) {\n                const parentSlotElement = offsetInfo.parentSlotElement;\n\n                if (parentSlotElement) {\n                    let customOffsetParent: HTMLElement | null = offsetParent;\n                    let customOffsetLeft = 0;\n                    let customOffsetTop = 0;\n\n                    while (customOffsetParent) {\n                        if (!getShadowRoot(customOffsetParent)) {\n                            break;\n                        }\n                        customOffsetLeft += customOffsetParent.offsetLeft;\n                        customOffsetTop += customOffsetParent.offsetTop;\n                        customOffsetParent = customOffsetParent.offsetParent as HTMLElement;\n                    }\n                    offsetLeft -= customOffsetLeft;\n                    offsetTop -= customOffsetTop;\n                }\n            }\n        }\n\n        if (\n            IS_WEBKIT && !IS_SAFARI_ABOVE15\n            && hasOffset && !isSVG && isStatic\n            && (position === \"relative\" || position === \"static\")\n        ) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === documentElement) {\n                const margin = getBodyOffset(el, false, style);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n\n        if (hasOffset) {\n            const isElementTarget = el === target;\n            const scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n            const scrollTop = isElementTarget ? 0 : el.scrollTop;\n\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n        if (targetZoom !== 1) {\n            matrixes.push({\n                type: \"zoom\",\n                target: el,\n                matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0]),\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === documentElement) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        zoom,\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\n","import { createIdentityMatrix, convertDimension, multiply, createOriginMatrix, ignoreDimension } from \"@scena/matrix\";\nimport { convert3DMatrixes, getOffsetInfo, getSVGOffset, makeMatrixCSS } from \"../utils\";\nimport { getMatrixStackInfo } from \"./getMatrixStackInfo\";\n\nexport interface MoveableElementMatrixInfo {\n    hasZoom: boolean;\n    hasFixed: boolean;\n    originalRootMatrix: number[];\n    rootMatrix: number[];\n    beforeMatrix: number[];\n    offsetMatrix: number[];\n    allMatrix: number[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    targetTransform: string;\n    offsetContainer: HTMLElement | null,\n    offsetRootContainer: HTMLElement | null,\n}\n\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n): MoveableElementMatrixInfo {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n        zoom: containerZoom,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n        offsetContainer: offsetRootContainer,\n        zoom: rootZoom,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, true); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = rootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    const originalRootMatrix = rootMatrix;\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasZoom: containerZoom !== 1 || rootZoom !== 1,\n        hasFixed,\n        rootMatrix,\n        originalRootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n        offsetContainer,\n        offsetRootContainer,\n    };\n}\n","import { createIdentityMatrix } from \"@scena/matrix\";\nimport { ElementSizes, MoveablePosition } from \"../types\";\nimport { calculateMoveablePosition, getSize, getRotationRad } from \"../utils\";\nimport { calculateMatrixStack, MoveableElementMatrixInfo } from \"./calculateMatrixStack\";\n\nexport interface MoveableElementInfo extends MoveableElementMatrixInfo, MoveablePosition, ElementSizes {\n    width: number;\n    height: number;\n    rotation: number;\n}\n\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n): MoveableElementInfo {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    const sizes = getSize(target);\n\n    if (target) {\n        width = sizes.offsetWidth;\n        height = sizes.offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n\n    return {\n        hasZoom: false,\n        width,\n        height,\n        rotation,\n        ...sizes,\n        originalRootMatrix: createIdentityMatrix(n),\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        offsetContainer: null,\n        offsetRootContainer: null,\n        ...allResult,\n    };\n}\n\n\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\n","import { plus, getOrigin, multiply, minus } from \"@scena/matrix\";\nimport { MoveableClientRect, Writable } from \"../types\";\nimport {\n    calculateInversePosition,\n    calculateMoveablePosition,\n    getClientRect, getClientRectByPosition, getOffsetInfo, getTransformOrigin, resetClientRect,\n} from \"../utils\";\nimport { calculateElementInfo, MoveableElementInfo } from \"./getElementInfo\";\n\n\nexport interface MoveableTargetInfo extends MoveableElementInfo {\n    targetClientRect: MoveableClientRect;\n    containerClientRect: MoveableClientRect;\n    moveableClientRect: MoveableClientRect;\n    rootContainerClientRect: MoveableClientRect;\n    beforeDirection: 1 | -1;\n    beforeOrigin: number[];\n    offsetDelta: number[],\n    originalBeforeOrigin: number[];\n    target: HTMLElement | SVGElement | null | undefined;\n    style: Partial<Writable<CSSStyleDeclaration>>;\n}\n\nexport function getMoveableTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    requestStyle: Array<keyof CSSStyleDeclaration> = [],\n): MoveableTargetInfo {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rootContainerClientRect = resetClientRect();\n    let offsetDelta = [0, 0];\n    const style: Partial<Writable<CSSStyleDeclaration>> = {};\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!,\n        true,\n    );\n    if (target) {\n        const computedStyle = getComputedStyle(target);\n\n        requestStyle.forEach(name => {\n            style[name] = computedStyle[name] as any;\n        });\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        rootContainerClientRect = getClientRect(result.offsetRootContainer!);\n\n\n        const offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent\n            || result.offsetRootContainer!;\n\n        if (result.hasZoom) {\n            const absoluteTargetPosition = calculateMoveablePosition(\n                multiply(result.originalRootMatrix, result.allMatrix),\n                result.transformOrigin,\n                result.width, result.height,\n            );\n            const absoluteContainerPosition = calculateMoveablePosition(\n                result.originalRootMatrix,\n                getTransformOrigin(getComputedStyle(offsetContainer)).map(pos => parseFloat(pos)),\n                offsetContainer.offsetWidth, offsetContainer.offsetHeight,\n            );\n            targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n            containerClientRect = getClientRectByPosition(\n                absoluteContainerPosition,\n                rootContainerClientRect,\n                offsetContainer,\n                true,\n            );\n\n            if (moveableElement) {\n                const left = absoluteTargetPosition.left;\n                const top = absoluteTargetPosition.top;\n                moveableClientRect = getClientRectByPosition({\n                    left,\n                    top,\n                    bottom: top,\n                    right: top,\n                }, rootContainerClientRect);\n            }\n        } else {\n            targetClientRect = getClientRect(target);\n            containerClientRect = getClientRect(offsetContainer, true);\n\n            if (moveableElement) {\n                moveableClientRect = getClientRect(moveableElement);\n            }\n            const {\n                left: containerClientRectLeft,\n                top: containerClientRectTop,\n                clientLeft: containterClientLeft,\n                clientTop: containerClientTop,\n            } = containerClientRect;\n            const clientDelta = [\n                targetClientRect.left - containerClientRectLeft,\n                targetClientRect.top - containerClientRectTop,\n            ];\n\n            offsetDelta = minus(\n                calculateInversePosition(result.rootMatrix, clientDelta, 4),\n                [containterClientLeft! + result.left, containerClientTop! + result.top],\n            );\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        rootContainerClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        style,\n        offsetDelta,\n        ...result,\n    };\n}\n","import { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { MoveableManagerState, PersistRectData } from \"../types\";\n\n\nexport function getPersistState(rect: PersistRectData): Partial<MoveableManagerState> | null {\n    let {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    if (!pos1 || !pos2 || !pos3 || !pos4) {\n        return null;\n    }\n    const minPos = getMinMaxs([pos1!, pos2!, pos3!, pos4!]);\n    const posDelta = [minPos.minX, minPos.minY];\n    const origin = minus(rect.origin!, posDelta);\n\n    pos1 = minus(pos1, posDelta);\n    pos2 = minus(pos2, posDelta);\n    pos3 = minus(pos3, posDelta);\n    pos4 = minus(pos4, posDelta);\n    return {\n        ...rect,\n        left: rect.left,\n        top: rect.top,\n        posDelta,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        origin,\n        beforeOrigin: origin,\n        // originalBeforeOrigin: origin,\n        isPersisted: true,\n    };\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n    defaultSync,\n    getRefTarget,\n    groupBy,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n    GroupableProps,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto, checkMoveableTarget } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport {\n    addClass, cancelAnimationFrame, find,\n    getKeys, IObject, removeClass, requestAnimationFrame,\n} from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { VIEW_DRAGGING } from \"./classNames\";\nimport { diff } from \"@egjs/list-differ\";\nimport { getPersistState } from \"./utils/persist\";\n// import { getClipPath } from \"./ables/clippable/utils\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        isWrapperMounted: false,\n        parentPosition: null,\n        portalContainer: null,\n        useResizeObserver: false,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n        stopPropagation: false,\n        preventClickDefault: false,\n        preventClickEventOnDrag: true,\n        flushSync: defaultSync,\n        firstRenderState: null,\n        persistData: null,\n        viewContainer: null,\n        useAccuratePosition: false,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gestos: {},\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        posDelta: [0, 0],\n        ...getMoveableTargetInfo(null),\n    };\n    public renderState: Record<string, any> = {};\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isMoveableMounted = false;\n    public isUnmounted = false;\n\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n    protected _isPropTargetChanged = false;\n    protected _hasFirstTarget = false;\n\n    private _observer: ResizeObserver | null = null;\n    private _observerId = 0;\n    public _rootContainer: HTMLElement | null | undefined = null;\n    private _viewContainer: HTMLElement | null | undefined = null;\n    private _viewClassNames: string[] = [];\n\n    public render() {\n        const props = this.props;\n        const state = this.getState();\n        const {\n            parentPosition,\n            className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n            groupable,\n        } = props;\n\n        this._checkUpdateRootContainer();\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const [parentLeft, parentTop] = parentPosition as number[] || [0, 0];\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n            offsetDelta,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        const ableClassName = this._getAbleClassName();\n        const isDisplay\n            = (groupTargets && groupTargets.length && (stateTarget || groupable))\n            || propsTarget\n            || (!this._hasFirstTarget && this.state.isPersisted);\n        const isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n        const translate = [left - parentLeft, top - parentTop];\n\n        if (!groupable && props.useAccuratePosition) {\n            translate[0] += offsetDelta[0];\n            translate[1] += offsetDelta[1];\n        }\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${ableClassName} ${className}`}\n                {...ableAttributes}\n                onClick={this._onPreventClick}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": hasFixed ? \"fixed\" : \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"visibility\": isVisible ? \"visible\" : \"hidden\",\n                    \"transform\": `translate3d(${translate[0]}px, ${translate[1]}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isMoveableMounted = true;\n        this.isUnmounted = false;\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n\n        if (!container && !parentMoveable && !wrapperMoveable && !this.state.isPersisted) {\n            this.updateRect(\"\", false, false);\n            this.forceUpdate();\n        }\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isMoveableMounted = false;\n        this.isUnmounted = true;\n        this._emitter.off();\n\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([]);\n        }\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getTargets(): Array<HTMLElement | SVGElement> {\n        const target = this.props.target;\n        return target ? [target] : [];\n    }\n    /**\n     * Get the able used in MoveableManager.\n     * @method Moveable#getAble\n     * @param - able name\n     */\n    public getAble<T extends Able>(ableName: string): T | undefined {\n        const ables: Able[] = this.props.ables || [];\n\n        return find(ables, able => able.name === ableName) as T;\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute?.(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto && checkMoveableTarget(this)({ inputEvent: e })) {\n            if (!targetGesto.isFlag()) {\n                targetGesto.triggerDragStart(e);\n            }\n        } else if (controlGesto && this.isMoveableElement(e.target as Element)) {\n            if (!controlGesto.isFlag()) {\n                controlGesto.triggerDragStart(e);\n            }\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * (100% = 100)\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? (parentMoveable as any)._rootContainer\n            : this._rootContainer;\n        const nextState = getMoveableTargetInfo(\n            this.controlBox && this.controlBox.getElement(),\n            target,\n            container,\n            container,\n            rootContainer || container,\n            this._getRequestStyles(),\n        );\n\n        if (!target && this._hasFirstTarget && props.persistData) {\n            const persistState = getPersistState(props.persistData);\n\n            for (const name in persistState) {\n                (nextState as any)[name] = (persistState as any)[name];\n            }\n        }\n        this.updateState(\n            nextState,\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @param - If you want to check if able is dragging, specify ableName.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging(ableName?: string) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = targetGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        if (controlGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = controlGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        return false;\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    /**\n     * You can stop the dragging currently in progress through a method from outside.\n     * @method Moveable#stopDrag\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.stopDrag();\n     */\n    public stopDrag(type?: \"target\" | \"control\"): void {\n        if (!type || type === \"target\") {\n            this.targetGesto?.stop();\n        }\n        if (!type || type === \"control\") {\n            this.controlGesto?.stop();\n        }\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.getState();\n        const props = this.props;\n        const {\n            originalBeforeOrigin,\n            transformOrigin,\n            allMatrix, is3d,\n            pos1, pos2, pos3, pos4,\n            left: stateLeft,\n            top: stateTop,\n            // offsetWidth,\n            // offsetHeight,\n            isPersisted,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n\n        // const clipPathInfo = getClipPath(\n        //     props.target,\n        //     offsetWidth,\n        //     offsetHeight,\n        // );\n\n        // if (clipPathInfo) {\n        //     left -= Math.max(0, clipPathInfo.left);\n        //     top -= Math.max(0, clipPathInfo.top);\n        //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n        //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n        // }\n\n        let absoluteOrigin: number[] = [];\n\n        if (isPersisted) {\n            absoluteOrigin = transformOrigin;\n        } else if (this.controlBox && props.groupable) {\n            absoluteOrigin = originalBeforeOrigin;\n        } else {\n            absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n        }\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isTargetChanged = !equals(stateTarget, target);\n        const isChanged = isTargetChanged || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n        this._isPropTargetChanged = isTargetChanged;\n    }\n    public waitToChangeTarget(): Promise<void> {\n        return new Promise(() => { });\n    }\n    public triggerEvent(name: string, e: any): any {\n        this._emitter.trigger(name, e);\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    public getState(): MoveableManagerState {\n        const props = this.props;\n        if (props.target || (props as any).targets?.length) {\n            this._hasFirstTarget = true;\n        }\n        const hasControlBox = this.controlBox;\n        const persistData = props.persistData;\n        const firstRenderState = props.firstRenderState;\n\n        if (firstRenderState && !hasControlBox) {\n            return firstRenderState;\n        }\n        if (!this._hasFirstTarget && persistData) {\n            const persistState = getPersistState(persistData);\n\n            if (persistState) {\n                this.updateState(persistState, false);\n                return this.state;\n            }\n        }\n        (this.state as any).isPersisted = false;\n        return this.state;\n    }\n    public updateSelectors() { }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = this.getEnabledAbles(ables);\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles(ables: Able[] = this.props.ables!) {\n        const props = this.props as any;\n\n        return ables.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        this.renderState = {};\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _getRequestStyles() {\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\n            const ableStyleNames = (able.requestStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\n\n            return [...names, ...ableStyleNames];\n        }, [] as Array<keyof CSSStyleDeclaration>);\n\n\n        return styleNames;\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._observer?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._observer) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._observer = observer;\n\n        return;\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            zoom,\n            hideDefaultLines,\n            hideChildMoveableDefaultLines,\n            parentMoveable,\n        } = props as MoveableManagerProps<GroupableProps>;\n\n        if (hideDefaultLines || (parentMoveable && hideChildMoveableDefaultLines)) {\n            return [];\n        }\n        const renderPoses = this.getState().renderPoses;\n        const Renderer = {\n            createElement,\n        };\n\n        return [\n            [0, 1],\n            [1, 3],\n            [3, 2],\n            [2, 0],\n        ].map(([from, to], i) => {\n            return renderLine(Renderer, \"\", renderPoses[from], renderPoses[to], zoom!, `render-line-${i}`);\n        });\n    }\n    private _onPreventClick = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        // removeEvent(window, \"click\", this._onPreventClick, true);\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    private _checkUpdateRootContainer() {\n        const rootContainer = this.props.rootContainer;\n\n        if (!this._rootContainer && rootContainer) {\n            this._rootContainer = getRefTarget(rootContainer, true);\n        }\n    }\n    private _checkUpdateViewContainer() {\n        const viewContainerOption = this.props.viewContainer;\n\n        if (!this._viewContainer && viewContainerOption) {\n            this._viewContainer = getRefTarget(viewContainerOption, true);\n        }\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([\n                ...this._getAbleViewClassNames(),\n                this.isDragging() ? VIEW_DRAGGING : \"\",\n            ]);\n        }\n    }\n    private _changeAbleViewClassNames(classNames: string[]) {\n        const viewContainer = this._viewContainer!;\n        const nextClassNames = groupBy(\n            classNames.filter(Boolean),\n            el => el,\n        ).map(([className]) => className);\n        const prevClassNames = this._viewClassNames;\n\n        const {\n            removed,\n            added,\n        } = diff(prevClassNames, nextClassNames);\n\n        removed.forEach(index => {\n            removeClass(viewContainer, prevClassNames[index]);\n        });\n        added.forEach(index => {\n            addClass(viewContainer, nextClassNames[index]);\n        });\n\n        this._viewClassNames = nextClassNames;\n\n    }\n    private _getAbleViewClassNames() {\n        return (this.getEnabledAbles().map(able => {\n            return (able.viewClassName?.(this) || \"\");\n        }).join(\" \") + ` ${this._getAbleClassName(\"-view\")}`).split(/\\s+/g);\n    }\n    private _getAbleClassName(classPrefix = \"\") {\n        const ables = this.getEnabledAbles();\n\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n        const targetGestoData: Record<string, any> = targetGesto?.isFlag()\n            ? targetGesto.getEventData() : {};\n        const controlGestoData: Record<string, any> = controlGesto?.isFlag()\n            ? controlGesto.getEventData() : {};\n\n        return ables.map(able => {\n            const name = able.name;\n            let className = able.className?.(this) || \"\";\n\n            if (\n                targetGestoData[name]?.isEventStart\n                || controlGestoData[name]?.isEventStart\n            ) {\n                className += ` ${prefix(`${name}${classPrefix}-dragging`)}`;\n            }\n            return className.trim();\n        }).filter(Boolean).join(\" \");\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { minus } from \"@scena/matrix\";\nimport { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderLine } from \"../renderDirections\";\nimport { Renderer, MoveableGroupInterface, GroupableProps } from \"../types\";\nimport { flat } from \"../utils\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n        groupableProps: Object,\n        targetGroups: Object,\n        hideChildMoveableDefaultLines: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface<GroupableProps>, React: Renderer): any[] {\n        const props = moveable.props;\n        let targets: Array<HTMLElement | SVGElement | undefined | null> = props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top, isPersisted } = moveable.getState();\n        const position = [left, top];\n        const zoom = props.zoom || 1;\n        const renderGroupRects = moveable.renderGroupRects;\n        let persistDatChildren = props.persistData?.children || [];\n\n        if (isPersisted) {\n            targets = persistDatChildren.map(() => null);\n        } else {\n            persistDatChildren = [];\n        }\n\n        return [\n            ...targets.map((target, i) => {\n                return <MoveableManager<GroupableProps>\n                    key={\"moveable\" + i}\n                    ref={refs(moveable, \"moveables\", i)}\n                    target={target}\n                    origin={false}\n                    cssStyled={props.cssStyled}\n                    customStyledMap={props.customStyledMap}\n                    useResizeObserver={props.useResizeObserver}\n                    hideChildMoveableDefaultLines={props.hideChildMoveableDefaultLines}\n                    parentMoveable={moveable}\n                    parentPosition={position}\n                    persistData={persistDatChildren[i]}\n                    zoom={zoom}\n                />;\n            }),\n            ...flat(renderGroupRects.map(({ pos1, pos2, pos3, pos4 }, i) => {\n                const poses = [pos1, pos2, pos3, pos4];\n\n                return [\n                    [0, 1],\n                    [1, 3],\n                    [3, 2],\n                    [2, 0],\n                ].map(([from, to], j) => {\n                    return renderLine(\n                        React,\n                        \"\",\n                        minus(poses[from], position),\n                        minus(poses[to], position),\n                        zoom,\n                        `group-rect-${i}-${j}`,\n                    );\n                });\n            })),\n        ];\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {\n        clickable: Boolean,\n    },\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragRelation: \"weak\",\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dragStart() {\n        return;\n    },\n    dragControlStart() {\n        return;\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.props.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            moveableTarget: moveable.props.target!,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n            moveableTarget: targets[targetIndex],\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface, Renderer } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\nimport { renderEdgeLines } from \"../renderDirections\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    css: [\n        `.edge.edgeDraggable.line {\n    cursor: move;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<DraggableProps>, React: Renderer) {\n        const props = moveable.props;\n        const edge = props.edgeDraggable!;\n\n        if (!edge) {\n            return [];\n        }\n        return renderEdgeLines(\n            React,\n            \"edgeDraggable\",\n            edge,\n            moveable.getState().renderPoses,\n            props.zoom!,\n        );\n    },\n    dragCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n\n        return !props.draggable\n            && hasClass(target, prefix(\"direction\"))\n            && hasClass(target, prefix(\"edge\"))\n            && hasClass(target, prefix(\"edgeDraggable\"));\n    },\n    dragStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    drag(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n        return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroup(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable,\n    Resizable, Scalable, Warpable, Rotatable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","export function solveConstantsDistance(\n    [a, b, c]: [number, number, number],\n    pos: number[],\n) {\n    return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\nexport function solveC(\n    [a, b]: [number, number],\n    pos: number[],\n) {\n    // ax + by + c = 0\n    // -ax -by;\n    return -a * pos[0] - b * pos[1];\n}\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, GroupRect, MoveableTargetGroupsType, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport {\n    getAbsolutePosesByState, equals, unset, rotatePosesInfo,\n    convertTransformOriginArray,\n    isDeepArrayEquals,\n} from \"./utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport { getIntersectionPointsByConstants, getMinMaxs } from \"overlap-area\";\nimport { find, isArray, throttle } from \"@daybrush/utils\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { solveC, solveConstantsDistance } from \"./Snappable/utils\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\n\n\nfunction getGroupRect(parentPoses: number[][][], rotation: number): GroupRect {\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let width = 0;\n    let height = 0;\n\n    if (!parentPoses.length) {\n        return {\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width,\n            height,\n            rotation,\n        };\n    }\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        // ax = y  // -ax + y = 0 // 0 => 1\n        // -ax = y // ax + y = 0  // 0 => 3\n        const a1MinMax = [MAX_NUM, MIN_NUM];\n        const a1MinMaxPos = [[0, 0], [0, 0]];\n        const a2MinMax = [MAX_NUM, MIN_NUM];\n        const a2MinMaxPos = [[0, 0], [0, 0]];\n\n        parentPoses.forEach(poses => {\n            poses.forEach(pos => {\n\n                // const b1 = pos[1] - a1 * pos[0];\n                // const b2 = pos[1] - a2 * pos[0];\n\n                const a1Dist = solveConstantsDistance([-a1, 1, 0], pos);\n                const a2Dist = solveConstantsDistance([-a2, 1, 0], pos);\n\n                if (a1MinMax[0] > a1Dist) {\n                    a1MinMaxPos[0] = pos;\n                    a1MinMax[0] = a1Dist;\n                }\n                if (a1MinMax[1] < a1Dist) {\n                    a1MinMaxPos[1] = pos;\n                    a1MinMax[1] = a1Dist;\n                }\n                if (a2MinMax[0] > a2Dist) {\n                    a2MinMaxPos[0] = pos;\n                    a2MinMax[0] = a2Dist;\n                }\n                if (a2MinMax[1] < a2Dist) {\n                    a2MinMaxPos[1] = pos;\n                    a2MinMax[1] = a2Dist;\n                }\n            });\n        });\n\n        const [a1MinPos, a1MaxPos] = a1MinMaxPos;\n        const [a2MinPos, a2MaxPos] = a2MinMaxPos;\n\n        const minHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MinPos)];\n        const maxHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MaxPos)];\n\n        const minVerticalLine = [-a2, 1, solveC([-a2, 1], a2MinPos)];\n        const maxVerticalLine = [-a2, 1, solveC([-a2, 1], a2MaxPos)];\n\n        [pos1, pos2, pos3, pos4] = [\n            [minHorizontalLine, minVerticalLine],\n            [minHorizontalLine, maxVerticalLine],\n            [maxHorizontalLine, minVerticalLine],\n            [maxHorizontalLine, maxVerticalLine],\n        ].map(([line1, line2]) => getIntersectionPointsByConstants(line1, line2)[0]);\n\n        width = a2MinMax[1] - a2MinMax[0];\n        height = a1MinMax[1] - a1MinMax[0];\n    } else {\n        const minX = getMinPos(parentPoses, 0);\n        const minY = getMinPos(parentPoses, 1);\n        const maxX = getMaxPos(parentPoses, 0);\n        const maxY = getMaxPos(parentPoses, 1);\n\n        pos1 = [minX, minY];\n        pos2 = [maxX, minY];\n        pos3 = [minX, maxY];\n        pos4 = [maxX, maxY];\n        width = maxX - minX;\n        height = maxY - minY;\n        if (fixedRotation % 180) {\n            // 0\n            // 1 2\n            // 3 4\n            // 90\n            // 3 1\n            // 4 2\n            // 180\n            // 4 3\n            // 2 1\n            // 270\n            // 2 4\n            // 1 3\n            // 1, 2, 3,4 = 3 1 4 2\n            const changedX = [pos3, pos1, pos4, pos2];\n\n            [pos1, pos2, pos3, pos4] = changedX;\n            width = maxY - minY;\n            height = maxX - minX;\n        }\n\n    }\n    if (fixedRotation % 360 > 180) {\n        // 1 2   4 3\n        // 3 4   2 1\n        const changedX = [pos4, pos3, pos2, pos1];\n\n        [pos1, pos2, pos3, pos4] = changedX;\n    }\n    const { minX, minY, maxX, maxY } = getMinMaxs([pos1, pos2, pos3, pos4]);\n\n    return {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        minX,\n        minY,\n        maxX,\n        maxY,\n        rotation,\n    };\n}\ntype SelfGroup = Array<MoveableManager | null | SelfGroup>;\ntype CheckedMoveableManager = { finded: boolean; manager: MoveableManager };\n\nfunction findMoveableGroups(\n    moveables: CheckedMoveableManager[],\n    childTargetGroups: MoveableTargetGroupsType,\n): SelfGroup {\n    const groups = childTargetGroups.map(targetGroup => {\n        if (isArray(targetGroup)) {\n            const childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n            const length = childMoveableGroups.length;\n\n            if (length > 1) {\n                return childMoveableGroups;\n            } else if (length === 1) {\n                return childMoveableGroups[0];\n            } else {\n                return null;\n            }\n        } else {\n            const checked = find(moveables, ({ manager }) => manager.props.target === targetGroup)!;\n\n            if (checked) {\n                checked.finded = true;\n                return checked.manager;\n            }\n            return null;\n        }\n    }).filter(Boolean);\n\n    if (groups.length === 1 && isArray(groups[0])) {\n        return groups[0];\n    }\n    return groups;\n}\n\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n    public renderGroupRects: GroupRect[] = [];\n    private _targetGroups: MoveableTargetGroupsType = [];\n    private _hasFirstTargets = false;\n\n    public componentDidMount() {\n        super.componentDidMount();\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        this.updateAbles();\n    }\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        const state = this.state;\n\n        if (!this.controlBox || state.isPersisted) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const props = this.props;\n        const moveables = this.moveables;\n        const target = state.target! || props.target!;\n        const checkeds = moveables.map(moveable => ({ finded: false, manager: moveable }));\n        const targetGroups = this.props.targetGroups || [];\n        const moveableGroups = findMoveableGroups(\n            checkeds,\n            targetGroups,\n        );\n\n        moveableGroups.push(...checkeds.filter(({ finded }) => !finded).map(({ manager }) => manager));\n\n        const renderGroupRects: GroupRect[] = [];\n        const isReset = !isTarget || (type !== \"\" && props.updateGroup);\n        let defaultGroupRotate = props.defaultGroupRotate || 0;\n\n        if (!this._hasFirstTargets) {\n            const persistedRoatation = this.props.persistData?.rotation;\n\n            if (persistedRoatation != null) {\n                defaultGroupRotate = persistedRoatation;\n            }\n        }\n\n        function getMoveableGroupRect(group: SelfGroup, parentRotation: number, isRoot?: boolean): GroupRect {\n            const posesRotations = group.map(moveable => {\n                if (isArray(moveable)) {\n                    const rect = getMoveableGroupRect(moveable, parentRotation);\n                    const poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n\n                    renderGroupRects.push(rect);\n                    return { poses, rotation: rect.rotation };\n                } else {\n                    return {\n                        poses: getAbsolutePosesByState(moveable!.state),\n                        rotation: moveable!.getRotation(),\n                    };\n                }\n            });\n            const rotations = posesRotations.map(({ rotation }) => rotation);\n\n            let groupRotation = 0;\n            const firstRotation = rotations[0];\n            const isSameRotation = rotations.every(nextRotation => {\n                return Math.abs(firstRotation - nextRotation) < 0.1;\n            });\n\n            if (isReset) {\n                groupRotation = isSameRotation ? firstRotation : defaultGroupRotate;\n            } else {\n                groupRotation = !isRoot && isSameRotation ? firstRotation : parentRotation;\n            }\n            const groupPoses = posesRotations.map(({ poses }) => poses);\n            const groupRect = getGroupRect(\n                groupPoses,\n                groupRotation,\n            );\n\n            return groupRect;\n        }\n        const rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n\n        if (isReset) {\n            // reset rotataion\n            this.rotation = rootGroupRect.rotation;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n        }\n\n\n        this._targetGroups = targetGroups;\n        this.renderGroupRects = renderGroupRects;\n        const transformOrigin = this.transformOrigin;\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const { width, height, minX, minY } = rootGroupRect;\n        const posesInfo = rotatePosesInfo(\n            [\n                [0, 0],\n                [width, 0],\n                [0, height],\n                [width, height],\n            ],\n            convertTransformOriginArray(transformOrigin, width, height),\n            this.rotation / 180 * Math.PI,\n        );\n\n        const { minX: deltaX, minY: deltaY } = getMinMaxs(posesInfo.result);\n        const rotateScale = ` rotate(${rotation}deg)`\n            + ` scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        const transform = `translate(${-deltaX}px, ${-deltaY}px)${rotateScale}`;\n\n        this.controlBox.getElement().style.transform\n            = `translate3d(${minX}px, ${minY}px, ${this.props.translateZ || 0})`;\n\n        target.style.cssText += `left:0px;top:0px;`\n            + `transform-origin:${transformOrigin};`\n            + `width:${width}px;height:${height}px;`\n            + `transform: ${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getMoveableTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this._rootContainer || container,\n            [],\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        // info.left = info.left + delta[0];\n        // info.top = info.top + delta[1];\n        info.left = minX - info.left! + delta[0];\n        info.top = minY - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n        target.style.transform\n            = `translate(${-deltaX - delta[0]}px, ${-deltaY - delta[1]}px)`\n            + rotateScale;\n        this.updateState(\n            {\n                ...info,\n                posDelta: delta,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.getElement().style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const targets = props.targets!;\n        const { added, changed, removed } = this.differ.update(targets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (\n            isContainerChanged\n            || isTargetChanged\n            || changed.length\n            || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])\n        ) {\n            this.updateRect();\n            this._hasFirstTargets = true;\n        }\n        this._isPropTargetChanged = !!isTargetChanged;\n    }\n    protected _updateObserver() { }\n}\n\n/**\n * Sets the initial rotation of the group.\n * @name Moveable.Group#defaultGroupRotate\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group.\n * @name Moveable.Group#defaultGroupOrigin\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\n\n\n/**\n * Whether to hide the line in child moveable for group corresponding to the rect of the target.\n * @name Moveable.Group#hideChildMoveableDefaultLines\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   hideChildMoveableDefaultLines: false,\n * });\n *\n * moveable.hideChildMoveableDefaultLines = true;\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const props = this.props;\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            persistData,\n        } = props;\n\n        let targets: Array<HTMLElement | SVGElement | null | undefined> = props.targets || [];\n        const length = targets.length;\n        const canPersist = this.isUnmounted || !length;\n        let persistDatChildren = persistData?.children ?? [];\n        if (canPersist && !length && persistDatChildren.length) {\n            targets = persistDatChildren.map(() => null);\n        } else if (!canPersist) {\n            persistDatChildren = [];\n        }\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                    isWrapperMounted={this.isMoveableMounted}\n                    persistData={persistDatChildren[i]}\n\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface, MoveableRefTargetsResultType,\n    MoveableTargetGroupsType, BeforeRenderableProps, RenderableProps, MoveableManagerState,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { find, getKeys, IObject, isArray, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\n\n\nfunction getElementTargets(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n): Array<SVGElement | HTMLElement> {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            elementTargets.push(...getElementTargets(target, selectorMap));\n        } else {\n            elementTargets.push(target);\n        }\n    });\n\n    return elementTargets;\n}\nfunction getTargetGroups(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const targetGroups: MoveableTargetGroupsType = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                targetGroups.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            targetGroups.push(getTargetGroups(target, selectorMap));\n        } else {\n            targetGroups.push(target);\n        }\n    });\n\n    return targetGroups;\n}\nfunction compareRefTargets(\n    prevRefTargets: MoveableRefTargetsResultType,\n    nextRefTargets: MoveableRefTargetsResultType,\n): boolean {\n    return (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n        const nextTarget = nextRefTargets[i];\n\n        if (!target && !nextTarget) {\n            return false;\n        } else if (target != nextTarget) {\n            if (isArray(target) && isArray(nextTarget)) {\n                return compareRefTargets(target, nextTarget);\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\ntype DefaultAbles = GroupableProps & IndividualGroupableProps & BeforeRenderableProps & RenderableProps;\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: MoveableRefTargetsResultType = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    private _differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    private _elementTargets: Array<HTMLElement | SVGElement> = [];\n    private _onChangeTargets: (() => void) | null = null;\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        let isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        this._elementTargets = elementTargets;\n\n        let firstRenderState: MoveableManagerState | null = null;\n        const prevMoveable = this.moveable;\n\n\n        const persistData = props.persistData;\n\n        if (persistData?.children) {\n            isGroup = true;\n        }\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets}\n                />;\n            }\n            const targetGroups = getTargetGroups(refTargets, this.selectorMap);\n\n            // manager\n            if (prevMoveable && !prevMoveable.props.groupable && !(prevMoveable.props as any).individualGroupable) {\n                const target = prevMoveable.props.target!;\n\n                if (target && elementTargets.indexOf(target) > -1) {\n                    firstRenderState = { ...prevMoveable.state };\n                }\n            }\n\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                {...props.groupableProps ?? {}}\n                target={null}\n                targets={elementTargets}\n                targetGroups={targetGroups}\n                firstRenderState={firstRenderState}\n            />;\n        } else {\n            const target = elementTargets[0];\n            // manager\n            if (prevMoveable && (prevMoveable.props.groupable || (prevMoveable.props as any).individualGroupable)) {\n                const moveables = (prevMoveable as MoveableGroup | MoveableIndividualGroup).moveables || [];\n                const prevTargetMoveable = find(moveables, mv => mv.props.target === target);\n\n                if (prevTargetMoveable) {\n                    firstRenderState = { ...prevTargetMoveable.state };\n                }\n            }\n\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={target}\n                firstRenderState={firstRenderState} />;\n        }\n    }\n    public componentDidMount() {\n        this._checkChangeTargets();\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        this._checkChangeTargets();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    /**\n     * Get targets set in moveable through target or targets of props.\n     * @method Moveable#getTargets\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n     * });\n     *\n     * console.log(moveable.getTargets());\n     */\n    public getTargets() {\n        return this.moveable?.getTargets() ?? [];\n    }\n    /**\n     * If the element list corresponding to the selector among the targets is changed, it is updated.\n     * @method Moveable#updateSelectors\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: \".target\",\n     * });\n     *\n     * moveable.updateSelectors();\n     */\n    public updateSelectors() {\n        this.selectorMap = {};\n        this._updateRefs();\n    }\n    /**\n     * User changes target and waits for target to change.\n     * @method Moveable#waitToChangeTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n     *   moveable.waitToChangeTarget().then(() => {\n     *      moveable.dragStart(e.currentTarget);\n     *   });\n     *   moveable.target = e.currentTarget;\n     * });\n     */\n    public waitToChangeTarget(): Promise<void> {\n        // let resolvePromise: (e: OnChangeTarget) => void;\n\n        // this._onChangeTargets = () => {\n        //     this._onChangeTargets = null;\n        //     resolvePromise({\n        //         moveable: this.getManager(),\n        //         targets: this._elementTargets,\n        //     });\n        // };\n\n        // return new Promise<OnChangeTarget>(resolve => {\n        //     resolvePromise = resolve;\n        // });\n        let resolvePromise: () => void;\n\n        this._onChangeTargets = () => {\n            this._onChangeTargets = null;\n            resolvePromise();\n        };\n\n        return new Promise(resolve => {\n            resolvePromise = resolve;\n        });\n    }\n    public waitToChangeTargets(): Promise<void> {\n        return this.waitToChangeTarget();\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(function updateSelectorMap(target) {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            } else if (isArray(target)) {\n                target.forEach(updateSelectorMap);\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n    private _checkChangeTargets() {\n        const { added, removed } = this._differ.update(this._elementTargets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isTargetChanged) {\n            this.props.onChangeTargets?.({\n                moveable: this.moveable,\n                targets: this._elementTargets,\n            });\n            this._onChangeTargets?.();\n        }\n        this._updateRefs();\n\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { IObject } from \"@daybrush/utils\";\nimport { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T extends IObject<any> = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}