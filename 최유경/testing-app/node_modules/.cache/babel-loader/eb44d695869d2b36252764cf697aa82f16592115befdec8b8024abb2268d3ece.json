{"ast":null,"code":"/*\nCopyright (c) 2019 Daybrush\nname: @scena/dragscroll\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/dragscroll.git\nversion: 1.4.0\n*/\nimport EventEmitter from '@scena/event-emitter';\nimport { now, isString, isFunction } from '@daybrush/utils';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction getDefaultScrollPosition(e) {\n  var container = e.container;\n  if (container === document.body) {\n    return [container.scrollLeft || document.documentElement.scrollLeft, container.scrollTop || document.documentElement.scrollTop];\n  }\n  return [container.scrollLeft, container.scrollTop];\n}\nfunction checkDefaultScrollEvent(container, callback) {\n  container.addEventListener(\"scroll\", callback);\n  return function () {\n    container.removeEventListener(\"scroll\", callback);\n  };\n}\nfunction getContainerElement(container) {\n  if (!container) {\n    return null;\n  } else if (isString(container)) {\n    return document.querySelector(container);\n  }\n  if (isFunction(container)) {\n    return container();\n  } else if (container instanceof Element) {\n    return container;\n  } else if (\"current\" in container) {\n    return container.current;\n  } else if (\"value\" in container) {\n    return container.value;\n  }\n}\n/**\n * @sort 1\n */\nvar DragScroll = /*#__PURE__*/function (_super) {\n  __extends(DragScroll, _super);\n  function DragScroll() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._startRect = null;\n    _this._startPos = [];\n    _this._prevTime = 0;\n    _this._timer = 0;\n    _this._prevScrollPos = [0, 0];\n    _this._isWait = false;\n    _this._flag = false;\n    _this._currentOptions = null;\n    _this._lock = false;\n    _this._unregister = null;\n    _this._onScroll = function () {\n      var options = _this._currentOptions;\n      if (_this._lock || !options) {\n        return;\n      }\n      _this.emit(\"scrollDrag\", {\n        next: function (inputEvent) {\n          _this.checkScroll({\n            container: options.container,\n            inputEvent: inputEvent\n          });\n        }\n      });\n    };\n    return _this;\n  }\n  /**\n   */\n  var __proto = DragScroll.prototype;\n  __proto.dragStart = function (e, options) {\n    var container = getContainerElement(options.container);\n    if (!container) {\n      this._flag = false;\n      return;\n    }\n    var top = 0;\n    var left = 0;\n    var width = 0;\n    var height = 0;\n    if (container === document.body) {\n      width = window.innerWidth;\n      height = window.innerHeight;\n    } else {\n      var rect = container.getBoundingClientRect();\n      top = rect.top;\n      left = rect.left;\n      width = rect.width;\n      height = rect.height;\n    }\n    this._flag = true;\n    this._startPos = [e.clientX, e.clientY];\n    this._startRect = {\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    };\n    this._prevScrollPos = this._getScrollPosition([0, 0], options);\n    this._currentOptions = options;\n    this._registerScrollEvent(options);\n  };\n  __proto.drag = function (e, options) {\n    clearTimeout(this._timer);\n    if (!this._flag) {\n      return;\n    }\n    var clientX = e.clientX,\n      clientY = e.clientY;\n    var _a = options.threshold,\n      threshold = _a === void 0 ? 0 : _a;\n    var _b = this,\n      _startRect = _b._startRect,\n      _startPos = _b._startPos;\n    this._currentOptions = options;\n    var direction = [0, 0];\n    if (_startRect.top > clientY - threshold) {\n      if (_startPos[1] > _startRect.top || clientY < _startPos[1]) {\n        direction[1] = -1;\n      }\n    } else if (_startRect.top + _startRect.height < clientY + threshold) {\n      if (_startPos[1] < _startRect.top + _startRect.height || clientY > _startPos[1]) {\n        direction[1] = 1;\n      }\n    }\n    if (_startRect.left > clientX - threshold) {\n      if (_startPos[0] > _startRect.left || clientX < _startPos[0]) {\n        direction[0] = -1;\n      }\n    } else if (_startRect.left + _startRect.width < clientX + threshold) {\n      if (_startPos[0] < _startRect.left + _startRect.width || clientX > _startPos[0]) {\n        direction[0] = 1;\n      }\n    }\n    if (!direction[0] && !direction[1]) {\n      return false;\n    }\n    return this._continueDrag(__assign(__assign({}, options), {\n      direction: direction,\n      inputEvent: e,\n      isDrag: true\n    }));\n  };\n  /**\n   */\n  __proto.checkScroll = function (options) {\n    var _this = this;\n    if (this._isWait) {\n      return false;\n    }\n    var _a = options.prevScrollPos,\n      prevScrollPos = _a === void 0 ? this._prevScrollPos : _a,\n      direction = options.direction,\n      _b = options.throttleTime,\n      throttleTime = _b === void 0 ? 0 : _b,\n      inputEvent = options.inputEvent,\n      isDrag = options.isDrag;\n    var nextScrollPos = this._getScrollPosition(direction || [0, 0], options);\n    var offsetX = nextScrollPos[0] - prevScrollPos[0];\n    var offsetY = nextScrollPos[1] - prevScrollPos[1];\n    var nextDirection = direction || [offsetX ? Math.abs(offsetX) / offsetX : 0, offsetY ? Math.abs(offsetY) / offsetY : 0];\n    this._prevScrollPos = nextScrollPos;\n    this._lock = false;\n    if (!offsetX && !offsetY) {\n      return false;\n    }\n    /**\n     * @event DragScroll#move\n     */\n    this.emit(\"move\", {\n      offsetX: nextDirection[0] ? offsetX : 0,\n      offsetY: nextDirection[1] ? offsetY : 0,\n      inputEvent: inputEvent\n    });\n    if (throttleTime && isDrag) {\n      clearTimeout(this._timer);\n      this._timer = window.setTimeout(function () {\n        _this._continueDrag(options);\n      }, throttleTime);\n    }\n    return true;\n  };\n  /**\n   *\n   */\n  __proto.dragEnd = function () {\n    this._flag = false;\n    this._lock = false;\n    clearTimeout(this._timer);\n    this._unregisterScrollEvent();\n  };\n  __proto._getScrollPosition = function (direction, options) {\n    var container = options.container,\n      _a = options.getScrollPosition,\n      getScrollPosition = _a === void 0 ? getDefaultScrollPosition : _a;\n    return getScrollPosition({\n      container: getContainerElement(container),\n      direction: direction\n    });\n  };\n  __proto._continueDrag = function (options) {\n    var _this = this;\n    var _a;\n    var container = options.container,\n      direction = options.direction,\n      throttleTime = options.throttleTime,\n      useScroll = options.useScroll,\n      isDrag = options.isDrag,\n      inputEvent = options.inputEvent;\n    if (!this._flag || isDrag && this._isWait) {\n      return;\n    }\n    var nowTime = now();\n    var distTime = Math.max(throttleTime + this._prevTime - nowTime, 0);\n    if (distTime > 0) {\n      clearTimeout(this._timer);\n      this._timer = window.setTimeout(function () {\n        _this._continueDrag(options);\n      }, distTime);\n      return false;\n    }\n    this._prevTime = nowTime;\n    var prevScrollPos = this._getScrollPosition(direction, options);\n    this._prevScrollPos = prevScrollPos;\n    if (isDrag) {\n      this._isWait = true;\n    }\n    // unregister native scroll event\n    if (!useScroll) {\n      this._lock = true;\n    }\n    var param = {\n      container: getContainerElement(container),\n      direction: direction,\n      inputEvent: inputEvent\n    };\n    (_a = options.requestScroll) === null || _a === void 0 ? void 0 : _a.call(options, param);\n    /**\n     * @event DragScroll#scroll\n     */\n    this.emit(\"scroll\", param);\n    this._isWait = false;\n    return useScroll || this.checkScroll(__assign(__assign({}, options), {\n      prevScrollPos: prevScrollPos,\n      direction: direction,\n      inputEvent: inputEvent\n    }));\n  };\n  __proto._registerScrollEvent = function (options) {\n    this._unregisterScrollEvent();\n    var checkScrollEvent = options.checkScrollEvent;\n    if (!checkScrollEvent) {\n      return;\n    }\n    var callback = checkScrollEvent === true ? checkDefaultScrollEvent : checkScrollEvent;\n    var container = getContainerElement(options.container);\n    if (checkScrollEvent === true && (container === document.body || container === document.documentElement)) {\n      this._unregister = checkDefaultScrollEvent(window, this._onScroll);\n    } else {\n      this._unregister = callback(container, this._onScroll);\n    }\n  };\n  __proto._unregisterScrollEvent = function () {\n    var _a;\n    (_a = this._unregister) === null || _a === void 0 ? void 0 : _a.call(this);\n    this._unregister = null;\n  };\n  return DragScroll;\n}(EventEmitter);\nexport default DragScroll;","map":{"version":3,"mappings":"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","names":["getDefaultScrollPosition","e","container","document","body","scrollLeft","documentElement","scrollTop","checkDefaultScrollEvent","callback","addEventListener","removeEventListener","getContainerElement","isString","querySelector","isFunction","Element","current","value","__extends","_this","options","_currentOptions","_lock","emit","next","inputEvent","checkScroll","__proto","_flag","top","left","width","height","window","innerWidth","innerHeight","rect","getBoundingClientRect","_startPos","clientX","clientY","_startRect","_prevScrollPos","_getScrollPosition","_registerScrollEvent","clearTimeout","_timer","threshold","direction","_continueDrag","isDrag","_isWait","prevScrollPos","_b","throttleTime","nextScrollPos","offsetX","offsetY","nextDirection","Math","abs","setTimeout","_unregisterScrollEvent","_a","getScrollPosition","useScroll","nowTime","now","distTime","max","_prevTime","param","requestScroll","checkScrollEvent","_unregister","_onScroll","EventEmitter"],"sources":["C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\@scena\\dragscroll\\src\\DragScroll.ts"],"sourcesContent":["import EventEmitter from \"@scena/event-emitter\";\nimport { isFunction, isString, now } from \"@daybrush/utils\";\nimport { CheckScrollOptions, DragScrollEvents, DragScrollOptions, Rect } from \"./types\";\n\nfunction getDefaultScrollPosition(e: { container: HTMLElement, direction: number[] }) {\n    let container = e.container;\n\n    if (container === document.body) {\n        return [\n            container.scrollLeft || document.documentElement.scrollLeft,\n            container.scrollTop || document.documentElement.scrollTop,\n        ];\n    }\n    return [\n        container.scrollLeft,\n        container.scrollTop,\n    ];\n}\n\nfunction checkDefaultScrollEvent(container: HTMLElement | Window, callback: () => void) {\n    container.addEventListener(\"scroll\", callback);\n\n    return () => {\n        container.removeEventListener(\"scroll\", callback);\n    }\n}\n\nfunction getContainerElement(container: DragScrollOptions[\"container\"]): HTMLElement {\n    if (!container) {\n        return null;\n    } else if (isString(container)) {\n        return document.querySelector<HTMLElement>(container);\n    } if (isFunction(container)) {\n        return container();\n    } else if (container instanceof Element) {\n        return container;\n    } else if (\"current\" in container) {\n        return container.current;\n    } else if (\"value\" in container) {\n        return container.value;\n    }\n}\n\n/**\n * @sort 1\n */\nclass DragScroll extends EventEmitter<DragScrollEvents> {\n    private _startRect: Rect | null = null;\n    private _startPos: number[] = [];\n    private _prevTime: number = 0;\n    private _timer: number = 0;\n    private _prevScrollPos: number[] = [0, 0];\n    private _isWait = false;\n    private _flag = false;\n    private _currentOptions: DragScrollOptions | null = null;\n    private _lock = false;\n    private _unregister: (() => void) | null = null;\n    /**\n     */\n    public dragStart(e: any, options: DragScrollOptions) {\n        const container = getContainerElement(options.container);\n\n        if (!container) {\n            this._flag = false;\n            return;\n        }\n        let top = 0;\n        let left = 0;\n        let width = 0;\n        let height = 0;\n\n        if (container === document.body) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        } else {\n            const rect = container.getBoundingClientRect();\n\n            top = rect.top;\n            left = rect.left;\n            width = rect.width;\n            height = rect.height;\n        }\n\n        this._flag = true;\n        this._startPos = [e.clientX, e.clientY];\n        this._startRect = { top, left, width, height };\n        this._prevScrollPos = this._getScrollPosition([0, 0], options);\n        this._currentOptions = options;\n        this._registerScrollEvent(options);\n    }\n    public drag(e: any, options: DragScrollOptions) {\n        clearTimeout(this._timer);\n        if (!this._flag) {\n            return;\n        }\n        const {\n            clientX,\n            clientY,\n        } = e;\n        const {\n            threshold = 0,\n        } = options;\n        const {\n            _startRect,\n            _startPos,\n        } = this;\n\n\n        this._currentOptions = options;\n        const direction = [0, 0];\n\n        if (_startRect.top > clientY - threshold) {\n            if (_startPos[1] > _startRect.top || clientY < _startPos[1]) {\n                direction[1] = -1;\n            }\n        } else if (_startRect.top + _startRect.height < clientY + threshold) {\n            if (_startPos[1] < _startRect.top + _startRect.height || clientY > _startPos[1]) {\n                direction[1] = 1;\n            }\n        }\n        if (_startRect.left > clientX - threshold) {\n            if (_startPos[0] > _startRect.left || clientX < _startPos[0]) {\n                direction[0] = -1;\n            }\n        } else if (_startRect.left + _startRect.width < clientX + threshold) {\n            if (_startPos[0] < _startRect.left + _startRect.width || clientX > _startPos[0]) {\n                direction[0] = 1;\n            }\n        }\n\n        if (!direction[0] && !direction[1]) {\n            return false;\n        }\n        return this._continueDrag({\n            ...options,\n            direction,\n            inputEvent: e,\n            isDrag: true,\n        });\n    }\n    /**\n     */\n    public checkScroll(options: CheckScrollOptions) {\n        if (this._isWait) {\n            return false;\n        }\n        const {\n            prevScrollPos = this._prevScrollPos,\n            direction,\n            throttleTime = 0,\n            inputEvent,\n            isDrag,\n        } = options;\n        const nextScrollPos = this._getScrollPosition(direction || [0, 0], options);\n        const offsetX = nextScrollPos[0] - prevScrollPos[0];\n        const offsetY = nextScrollPos[1] - prevScrollPos[1];\n\n        const nextDirection = direction || [\n            offsetX ? Math.abs(offsetX) / offsetX : 0,\n            offsetY ? Math.abs(offsetY) / offsetY : 0,\n        ];\n        this._prevScrollPos = nextScrollPos;\n        this._lock = false;\n\n        if (!offsetX && !offsetY) {\n            return false;\n        }\n        /**\n         * @event DragScroll#move\n         */\n        this.emit(\"move\", {\n            offsetX: nextDirection[0] ? offsetX : 0,\n            offsetY: nextDirection[1] ? offsetY : 0,\n            inputEvent,\n        });\n\n        if (throttleTime && isDrag) {\n            clearTimeout(this._timer);\n            this._timer = window.setTimeout(() => {\n                this._continueDrag(options);\n            }, throttleTime);\n        }\n        return true;\n    }\n    /**\n     *\n     */\n    public dragEnd() {\n        this._flag = false;\n        this._lock = false;\n        clearTimeout(this._timer);\n        this._unregisterScrollEvent();\n    }\n    private _getScrollPosition(direction: number[], options: DragScrollOptions) {\n        const {\n            container,\n            getScrollPosition = getDefaultScrollPosition,\n        } = options;\n        return getScrollPosition({ container: getContainerElement(container), direction });\n    }\n    private _continueDrag(options: CheckScrollOptions) {\n        const {\n            container,\n            direction,\n            throttleTime,\n            useScroll,\n            isDrag,\n            inputEvent,\n        } = options;\n\n        if (!this._flag || (isDrag && this._isWait)) {\n            return;\n        }\n        const nowTime = now();\n        const distTime = Math.max(throttleTime + this._prevTime - nowTime, 0);\n\n        if (distTime > 0) {\n            clearTimeout(this._timer);\n            this._timer = window.setTimeout(() => {\n                this._continueDrag(options);\n            }, distTime);\n\n            return false;\n        }\n        this._prevTime = nowTime;\n        const prevScrollPos = this._getScrollPosition(direction, options);\n\n        this._prevScrollPos = prevScrollPos;\n\n        if (isDrag) {\n            this._isWait = true;\n        }\n\n        // unregister native scroll event\n        if (!useScroll) {\n            this._lock = true;\n        }\n        const param = {\n            container: getContainerElement(container),\n            direction,\n            inputEvent,\n        };\n        options.requestScroll?.(param);\n        /**\n         * @event DragScroll#scroll\n         */\n        this.emit(\"scroll\", param);\n\n        this._isWait = false;\n        return useScroll || this.checkScroll({\n            ...options,\n            prevScrollPos,\n            direction,\n            inputEvent,\n        });\n    }\n\n    private _registerScrollEvent(options: DragScrollOptions) {\n        this._unregisterScrollEvent();\n        const checkScrollEvent = options.checkScrollEvent;\n\n        if (!checkScrollEvent) {\n            return;\n        }\n        const callback = checkScrollEvent === true ? checkDefaultScrollEvent : checkScrollEvent;\n        const container = getContainerElement(options.container);\n\n        if (checkScrollEvent === true && (container === document.body || container === document.documentElement)) {\n            this._unregister = checkDefaultScrollEvent(window, this._onScroll);\n        } else {\n            this._unregister = callback(container, this._onScroll);\n        }\n    }\n    private _unregisterScrollEvent() {\n        this._unregister?.();\n        this._unregister = null;\n    }\n\n    private _onScroll = () => {\n        const options = this._currentOptions;\n        if (this._lock || !options) {\n            return;\n        }\n\n        this.emit(\"scrollDrag\", {\n            next: (inputEvent: any) => {\n                this.checkScroll({\n                    container: options.container,\n                    inputEvent,\n                });\n            },\n        });\n    };\n}\n\nexport default DragScroll;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}