{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport CoordinateSystem, { IDENTITY } from \"./coordinateSystem\";\nimport drawImage from \"./drawImage\";\nimport { DefaultState } from \"./interactionStateMachine\";\nimport makePassiveEventOption from \"./makePassiveEventOption\";\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\nvar canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n}; // The order of these is important: grid > drawing > temp > interface\n\nvar canvasTypes = [\"grid\", \"drawing\", \"temp\", \"interface\"];\nvar dimensionsPropTypes = process.env.NODE_ENV !== \"production\" ? PropTypes.oneOfType([PropTypes.number, PropTypes.string]) : {};\nvar boundsProp = process.env.NODE_ENV !== \"production\" ? PropTypes.shape({\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n}) : {};\nvar CanvasDraw = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(CanvasDraw, _PureComponent);\n\n  ///// public API /////////////////////////////////////////////////////////////\n  function CanvasDraw(props) {\n    var _this;\n    _this = _PureComponent.call(this, props) || this;\n    _defineProperty(_assertThisInitialized(_this), \"undo\", function () {\n      var lines = [];\n      if (_this.lines.length) {\n        lines = _this.lines.slice(0, -1);\n      } else if (_this.erasedLines.length) {\n        lines = _this.erasedLines.pop();\n      }\n      _this.clearExceptErasedLines();\n      _this.simulateDrawingLines({\n        lines: lines,\n        immediate: true\n      });\n      _this.triggerOnChange();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"eraseAll\", function () {\n      _this.erasedLines.push([].concat(_this.lines));\n      _this.clearExceptErasedLines();\n      _this.triggerOnChange();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.erasedLines = [];\n      _this.clearExceptErasedLines();\n      _this.resetView();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"resetView\", function () {\n      return _this.coordSystem.resetView();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setView\", function (view) {\n      return _this.coordSystem.setView(view);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getSaveData\", function () {\n      // Construct and return the stringified saveData object\n      return JSON.stringify({\n        lines: _this.lines,\n        width: _this.props.canvasWidth,\n        height: _this.props.canvasHeight\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getDataURL\", function (fileType, useBgImage, backgroundColour) {\n      // Get a reference to the \"drawing\" layer of the canvas\n      var canvasToExport = _this.canvas.drawing;\n      var context = canvasToExport.getContext(\"2d\"); //cache height and width\n\n      var width = canvasToExport.width;\n      var height = canvasToExport.height; //get the current ImageData for the canvas\n\n      var storedImageData = context.getImageData(0, 0, width, height); //store the current globalCompositeOperation\n\n      var compositeOperation = context.globalCompositeOperation; //set to draw behind current content\n\n      context.globalCompositeOperation = \"destination-over\"; // If \"useBgImage\" has been set to true, this takes precedence over the background colour parameter\n\n      if (useBgImage) {\n        if (!_this.props.imgSrc) return \"Background image source not set\"; // Write the background image\n\n        _this.drawImage();\n      } else if (backgroundColour != null) {\n        //set background color\n        context.fillStyle = backgroundColour; //fill entire canvas with background colour\n\n        context.fillRect(0, 0, width, height);\n      } // If the file type has not been specified, default to PNG\n\n      if (!fileType) fileType = \"png\"; // Export the canvas to data URL\n\n      var imageData = canvasToExport.toDataURL(\"image/\" + fileType); //clear the canvas\n\n      context.clearRect(0, 0, width, height); //restore it with original / cached ImageData\n\n      context.putImageData(storedImageData, 0, 0); //reset the globalCompositeOperation to what it was\n\n      context.globalCompositeOperation = compositeOperation;\n      return imageData;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"loadSaveData\", function (saveData, immediate) {\n      if (immediate === void 0) {\n        immediate = _this.props.immediateLoading;\n      }\n      if (typeof saveData !== \"string\") {\n        throw new Error(\"saveData needs to be of type string!\");\n      }\n      var _JSON$parse = JSON.parse(saveData),\n        lines = _JSON$parse.lines,\n        width = _JSON$parse.width,\n        height = _JSON$parse.height;\n      if (!lines || typeof lines.push !== \"function\") {\n        throw new Error(\"saveData.lines needs to be an array!\");\n      }\n      _this.clear();\n      if (width === _this.props.canvasWidth && height === _this.props.canvasHeight) {\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: immediate\n        });\n      } else {\n        // we need to rescale the lines based on saved & current dimensions\n        var scaleX = _this.props.canvasWidth / width;\n        var scaleY = _this.props.canvasHeight / height;\n        var scaleAvg = (scaleX + scaleY) / 2;\n        _this.simulateDrawingLines({\n          lines: lines.map(function (line) {\n            return _extends({}, line, {\n              points: line.points.map(function (p) {\n                return {\n                  x: p.x * scaleX,\n                  y: p.y * scaleY\n                };\n              }),\n              brushRadius: line.brushRadius * scaleAvg\n            });\n          }),\n          immediate: immediate\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      _this.canvasObserver.unobserve(_this.canvasContainer);\n      _this.canvas[\"interface\"] && _this.canvas[\"interface\"].removeEventListener(\"wheel\", _this.handleWheel);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleWheel\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleMouseWheel(e, _assertThisInitialized(_this));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawStart\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleDrawStart(e, _assertThisInitialized(_this));\n      _this.mouseHasMoved = true;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawMove\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleDrawMove(e, _assertThisInitialized(_this));\n      _this.mouseHasMoved = true;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawEnd\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleDrawEnd(e, _assertThisInitialized(_this));\n      _this.mouseHasMoved = true;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"applyView\", function () {\n      if (!_this.ctx.drawing) {\n        return;\n      }\n      canvasTypes.map(function (name) {\n        return _this.ctx[name];\n      }).forEach(function (ctx) {\n        _this.clearWindow(ctx);\n        var m = _this.coordSystem.transformMatrix;\n        ctx.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\n      });\n      if (!_this.deferRedrawOnViewChange) {\n        _this.drawGrid(_this.ctx.grid);\n        _this.redrawImage();\n        _this.loop({\n          once: true\n        });\n        var lines = _this.lines;\n        _this.lines = [];\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: true\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleCanvasResize\", function (entries) {\n      var saveData = _this.getSaveData();\n      _this.deferRedrawOnViewChange = true;\n      try {\n        for (var _iterator = _createForOfIteratorHelperLoose(entries), _step; !(_step = _iterator()).done;) {\n          var entry = _step.value;\n          var _entry$contentRect = entry.contentRect,\n            width = _entry$contentRect.width,\n            height = _entry$contentRect.height;\n          _this.setCanvasSize(_this.canvas[\"interface\"], width, height);\n          _this.setCanvasSize(_this.canvas.drawing, width, height);\n          _this.setCanvasSize(_this.canvas.temp, width, height);\n          _this.setCanvasSize(_this.canvas.grid, width, height);\n          _this.coordSystem.documentSize = {\n            width: width,\n            height: height\n          };\n          _this.drawGrid(_this.ctx.grid);\n          _this.drawImage();\n          _this.loop({\n            once: true\n          });\n        }\n        _this.loadSaveData(saveData, true);\n      } finally {\n        _this.deferRedrawOnViewChange = false;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"clampPointToDocument\", function (point) {\n      if (_this.props.clampLinesToDocument) {\n        return {\n          x: Math.max(Math.min(point.x, _this.props.canvasWidth), 0),\n          y: Math.max(Math.min(point.y, _this.props.canvasHeight), 0)\n        };\n      } else {\n        return point;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"redrawImage\", function () {\n      _this.image && _this.image.complete && drawImage({\n        ctx: _this.ctx.grid,\n        img: _this.image\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"simulateDrawingLines\", function (_ref) {\n      var lines = _ref.lines,\n        immediate = _ref.immediate;\n      // Simulate live-drawing of the loaded lines\n      // TODO use a generator\n      var curTime = 0;\n      var timeoutGap = immediate ? 0 : _this.props.loadTimeOffset;\n      lines.forEach(function (line) {\n        var points = line.points,\n          brushColor = line.brushColor,\n          brushRadius = line.brushRadius; // Draw all at once if immediate flag is set, instead of using setTimeout\n\n        if (immediate) {\n          // Draw the points\n          _this.drawPoints({\n            points: points,\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          }); // Save line with the drawn points\n\n          _this.points = points;\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n          return;\n        } // Use timeout to draw\n\n        var _loop = function _loop(i) {\n          curTime += timeoutGap;\n          window.setTimeout(function () {\n            _this.drawPoints({\n              points: points.slice(0, i + 1),\n              brushColor: brushColor,\n              brushRadius: brushRadius\n            });\n          }, curTime);\n        };\n        for (var i = 1; i < points.length; i++) {\n          _loop(i);\n        }\n        curTime += timeoutGap;\n        window.setTimeout(function () {\n          // Save this line with its props instead of this.props\n          _this.points = points;\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n        }, curTime);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setCanvasSize\", function (canvas, width, height) {\n      canvas.width = width;\n      canvas.height = height;\n      canvas.style.width = width;\n      canvas.style.height = height;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"drawPoints\", function (_ref2) {\n      var points = _ref2.points,\n        brushColor = _ref2.brushColor,\n        brushRadius = _ref2.brushRadius;\n      _this.ctx.temp.lineJoin = \"round\";\n      _this.ctx.temp.lineCap = \"round\";\n      _this.ctx.temp.strokeStyle = brushColor;\n      _this.clearWindow(_this.ctx.temp);\n      _this.ctx.temp.lineWidth = brushRadius * 2;\n      var p1 = points[0];\n      var p2 = points[1];\n      _this.ctx.temp.moveTo(p2.x, p2.y);\n      _this.ctx.temp.beginPath();\n      for (var i = 1, len = points.length; i < len; i++) {\n        // we pick the point between pi+1 & pi+2 as the\n        // end point and p1 as our control point\n        var midPoint = midPointBtw(p1, p2);\n        _this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n        p1 = points[i];\n        p2 = points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n      _this.ctx.temp.lineTo(p1.x, p1.y);\n      _this.ctx.temp.stroke();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"saveLine\", function (_temp) {\n      var _ref3 = _temp === void 0 ? {} : _temp,\n        brushColor = _ref3.brushColor,\n        brushRadius = _ref3.brushRadius;\n      if (_this.points.length < 2) return; // Save as new line\n\n      _this.lines.push({\n        points: [].concat(_this.points),\n        brushColor: brushColor || _this.props.brushColor,\n        brushRadius: brushRadius || _this.props.brushRadius\n      }); // Reset points array\n\n      _this.points.length = 0; // Copy the line to the drawing canvas\n\n      _this.inClientSpace([_this.ctx.drawing, _this.ctx.temp], function () {\n        _this.ctx.drawing.drawImage(_this.canvas.temp, 0, 0, _this.canvas.drawing.width, _this.canvas.drawing.height);\n      }); // Clear the temporary line-drawing canvas\n\n      _this.clearWindow(_this.ctx.temp);\n      _this.triggerOnChange();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"triggerOnChange\", function () {\n      _this.props.onChange && _this.props.onChange(_assertThisInitialized(_this));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"clearWindow\", function (ctx) {\n      _this.inClientSpace([ctx], function () {\n        return ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"clearExceptErasedLines\", function () {\n      _this.lines = [];\n      _this.valuesChanged = true;\n      _this.clearWindow(_this.ctx.drawing);\n      _this.clearWindow(_this.ctx.temp);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"loop\", function (_temp2) {\n      var _ref4 = _temp2 === void 0 ? {} : _temp2,\n        _ref4$once = _ref4.once,\n        once = _ref4$once === void 0 ? false : _ref4$once;\n      if (_this.mouseHasMoved || _this.valuesChanged) {\n        var pointer = _this.lazy.getPointerCoordinates();\n        var brush = _this.lazy.getBrushCoordinates();\n        _this.drawInterface(_this.ctx[\"interface\"], pointer, brush);\n        _this.mouseHasMoved = false;\n        _this.valuesChanged = false;\n      }\n      if (!once) {\n        window.requestAnimationFrame(function () {\n          _this.loop();\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"inClientSpace\", function (ctxs, action) {\n      ctxs.forEach(function (ctx) {\n        ctx.save();\n        ctx.setTransform(IDENTITY.a, IDENTITY.b, IDENTITY.c, IDENTITY.d, IDENTITY.e, IDENTITY.f);\n      });\n      try {\n        action();\n      } finally {\n        ctxs.forEach(function (ctx) {\n          return ctx.restore();\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"drawImage\", function () {\n      if (!_this.props.imgSrc) return; // Load the image\n\n      _this.image = new Image(); // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\n\n      _this.image.crossOrigin = \"anonymous\"; // Draw the image once loaded\n\n      _this.image.onload = _this.redrawImage;\n      _this.image.src = _this.props.imgSrc;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"drawGrid\", function (ctx) {\n      if (_this.props.hideGrid) return;\n      _this.clearWindow(ctx);\n      var gridSize = 25;\n      var _this$coordSystem$can = _this.coordSystem.canvasBounds,\n        viewMin = _this$coordSystem$can.viewMin,\n        viewMax = _this$coordSystem$can.viewMax;\n      var minx = Math.floor(viewMin.x / gridSize - 1) * gridSize;\n      var miny = Math.floor(viewMin.y / gridSize - 1) * gridSize;\n      var maxx = viewMax.x + gridSize;\n      var maxy = viewMax.y + gridSize;\n      ctx.beginPath();\n      ctx.setLineDash([5, 1]);\n      ctx.setLineDash([]);\n      ctx.strokeStyle = _this.props.gridColor;\n      ctx.lineWidth = _this.props.gridLineWidth;\n      if (!_this.props.hideGridX) {\n        var countX = minx;\n        var gridSizeX = _this.props.gridSizeX;\n        while (countX < maxx) {\n          countX += gridSizeX;\n          ctx.moveTo(countX, miny);\n          ctx.lineTo(countX, maxy);\n        }\n        ctx.stroke();\n      }\n      if (!_this.props.hideGridY) {\n        var countY = miny;\n        var gridSizeY = _this.props.gridSizeY;\n        while (countY < maxy) {\n          countY += gridSizeY;\n          ctx.moveTo(minx, countY);\n          ctx.lineTo(maxx, countY);\n        }\n        ctx.stroke();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"drawInterface\", function (ctx, pointer, brush) {\n      if (_this.props.hideInterface) return;\n      _this.clearWindow(ctx); // Draw brush preview\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.brushColor;\n      ctx.arc(brush.x, brush.y, _this.props.brushRadius, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw mouse point (the one directly at the cursor)\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw catenary\n\n      if (_this.lazy.isEnabled()) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.setLineDash([2, 4]);\n        ctx.strokeStyle = _this.props.catenaryColor;\n        _this.catenary.drawToCanvas(_this.ctx[\"interface\"], brush, pointer, _this.chainLength);\n        ctx.stroke();\n      } // Draw brush point (the one in the middle of the brush preview)\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n      ctx.fill();\n    });\n    _this.canvas = {};\n    _this.ctx = {};\n    _this.catenary = new Catenary();\n    _this.points = [];\n    _this.lines = [];\n    _this.erasedLines = [];\n    _this.mouseHasMoved = true;\n    _this.valuesChanged = true;\n    _this.isDrawing = false;\n    _this.isPressing = false;\n    _this.deferRedrawOnViewChange = false;\n    _this.interactionSM = new DefaultState();\n    _this.coordSystem = new CoordinateSystem({\n      scaleExtents: props.zoomExtents,\n      documentSize: {\n        width: props.canvasWidth,\n        height: props.canvasHeight\n      }\n    });\n    _this.coordSystem.attachViewChangeListener(_this.applyView.bind(_assertThisInitialized(_this)));\n    return _this;\n  }\n  var _proto = CanvasDraw.prototype;\n\n  ///// private API ////////////////////////////////////////////////////////////\n  ///// React Lifecycle\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n    this.canvasObserver = new ResizeObserver(function (entries, observer) {\n      return _this2.handleCanvasResize(entries, observer);\n    });\n    this.canvasObserver.observe(this.canvasContainer);\n    this.drawImage();\n    this.loop();\n    window.setTimeout(function () {\n      var initX = window.innerWidth / 2;\n      var initY = window.innerHeight / 2;\n      _this2.lazy.update({\n        x: initX - _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: true\n      });\n      _this2.lazy.update({\n        x: initX + _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: false\n      });\n      _this2.mouseHasMoved = true;\n      _this2.valuesChanged = true;\n      _this2.clearExceptErasedLines(); // Load saveData from prop if it exists\n\n      if (_this2.props.saveData) {\n        _this2.loadSaveData(_this2.props.saveData);\n      }\n    }, 100); // Attach our wheel event listener here instead of in the render so that we can specify a non-passive listener.\n    // This is necessary to prevent the default event action on chrome.\n    // https://github.com/facebook/react/issues/14856\n\n    this.canvas[\"interface\"] && this.canvas[\"interface\"].addEventListener(\"wheel\", this.handleWheel, makePassiveEventOption());\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n    this.coordSystem.scaleExtents = this.props.zoomExtents;\n    if (!this.props.enablePanAndZoom) {\n      this.coordSystem.resetView();\n    }\n    if (prevProps.imgSrc !== this.props.imgSrc) {\n      this.drawImage();\n    }\n  };\n  _proto.render = function render() {\n    var _this3 = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.className,\n      style: _extends({\n        display: \"block\",\n        background: this.props.backgroundColor,\n        touchAction: \"none\",\n        width: this.props.canvasWidth,\n        height: this.props.canvasHeight\n      }, this.props.style),\n      ref: function ref(container) {\n        if (container) {\n          _this3.canvasContainer = container;\n        }\n      }\n    }, canvasTypes.map(function (name) {\n      var isInterface = name === \"interface\";\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        key: name,\n        ref: function ref(canvas) {\n          if (canvas) {\n            _this3.canvas[name] = canvas;\n            _this3.ctx[name] = canvas.getContext(\"2d\");\n            if (isInterface) {\n              _this3.coordSystem.canvas = canvas;\n            }\n          }\n        },\n        style: _extends({}, canvasStyle),\n        onMouseDown: isInterface ? _this3.handleDrawStart : undefined,\n        onMouseMove: isInterface ? _this3.handleDrawMove : undefined,\n        onMouseUp: isInterface ? _this3.handleDrawEnd : undefined,\n        onMouseOut: isInterface ? _this3.handleDrawEnd : undefined,\n        onTouchStart: isInterface ? _this3.handleDrawStart : undefined,\n        onTouchMove: isInterface ? _this3.handleDrawMove : undefined,\n        onTouchEnd: isInterface ? _this3.handleDrawEnd : undefined,\n        onTouchCancel: isInterface ? _this3.handleDrawEnd : undefined\n      });\n    }));\n  } ///// Event Handlers\n  ;\n\n  return CanvasDraw;\n}(PureComponent);\n_defineProperty(CanvasDraw, \"defaultProps\", {\n  onChange: null,\n  loadTimeOffset: 5,\n  lazyRadius: 12,\n  brushRadius: 10,\n  brushColor: \"#444\",\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  backgroundColor: \"#FFF\",\n  hideGrid: false,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false,\n  gridSizeX: 25,\n  gridSizeY: 25,\n  gridLineWidth: 0.5,\n  hideGridX: false,\n  hideGridY: false,\n  enablePanAndZoom: false,\n  mouseZoomFactor: 0.01,\n  zoomExtents: {\n    min: 0.33,\n    max: 3\n  },\n  clampLinesToDocument: false\n});\nexport { CanvasDraw as default };\nCanvasDraw.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  onChange: PropTypes.func,\n  loadTimeOffset: PropTypes.number,\n  lazyRadius: PropTypes.number,\n  brushRadius: PropTypes.number,\n  brushColor: PropTypes.string,\n  catenaryColor: PropTypes.string,\n  gridColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  hideGrid: PropTypes.bool,\n  canvasWidth: dimensionsPropTypes,\n  canvasHeight: dimensionsPropTypes,\n  disabled: PropTypes.bool,\n  imgSrc: PropTypes.string,\n  saveData: PropTypes.string,\n  immediateLoading: PropTypes.bool,\n  hideInterface: PropTypes.bool,\n  gridSizeX: PropTypes.number,\n  gridSizeY: PropTypes.number,\n  gridLineWidth: PropTypes.number,\n  hideGridX: PropTypes.bool,\n  hideGridY: PropTypes.bool,\n  enablePanAndZoom: PropTypes.bool,\n  mouseZoomFactor: PropTypes.number,\n  zoomExtents: boundsProp,\n  clampLinesToDocument: PropTypes.bool\n} : {};","map":{"version":3,"names":["_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","next","bind","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","_extends","assign","target","arguments","source","key","hasOwnProperty","apply","_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","create","__proto__","_defineProperty","obj","defineProperty","enumerable","configurable","writable","React","PureComponent","PropTypes","LazyBrush","Catenary","ResizeObserver","CoordinateSystem","IDENTITY","drawImage","DefaultState","makePassiveEventOption","midPointBtw","p1","p2","x","y","canvasStyle","display","position","canvasTypes","dimensionsPropTypes","process","env","NODE_ENV","oneOfType","number","string","boundsProp","shape","min","isRequired","max","CanvasDraw","_PureComponent","props","_this","lines","erasedLines","pop","clearExceptErasedLines","simulateDrawingLines","immediate","triggerOnChange","push","concat","resetView","coordSystem","view","setView","JSON","stringify","width","canvasWidth","height","canvasHeight","fileType","useBgImage","backgroundColour","canvasToExport","canvas","drawing","context","getContext","storedImageData","getImageData","compositeOperation","globalCompositeOperation","imgSrc","fillStyle","fillRect","imageData","toDataURL","clearRect","putImageData","saveData","immediateLoading","Error","_JSON$parse","parse","clear","scaleX","scaleY","scaleAvg","map","line","points","p","brushRadius","canvasObserver","unobserve","canvasContainer","removeEventListener","handleWheel","e","interactionSM","handleMouseWheel","handleDrawStart","mouseHasMoved","handleDrawMove","handleDrawEnd","ctx","forEach","clearWindow","m","transformMatrix","setTransform","a","b","c","d","f","deferRedrawOnViewChange","drawGrid","grid","redrawImage","loop","once","entries","getSaveData","_iterator","_step","entry","_entry$contentRect","contentRect","setCanvasSize","temp","documentSize","loadSaveData","point","clampLinesToDocument","Math","image","complete","img","_ref","curTime","timeoutGap","loadTimeOffset","brushColor","drawPoints","saveLine","_loop","window","setTimeout","style","_ref2","lineJoin","lineCap","strokeStyle","lineWidth","moveTo","beginPath","midPoint","quadraticCurveTo","lineTo","stroke","_temp","_ref3","inClientSpace","onChange","valuesChanged","_temp2","_ref4","_ref4$once","pointer","lazy","getPointerCoordinates","brush","getBrushCoordinates","drawInterface","requestAnimationFrame","ctxs","action","save","restore","Image","crossOrigin","onload","src","hideGrid","gridSize","_this$coordSystem$can","canvasBounds","viewMin","viewMax","minx","floor","miny","maxx","maxy","setLineDash","gridColor","gridLineWidth","hideGridX","countX","gridSizeX","hideGridY","countY","gridSizeY","hideInterface","arc","PI","fill","catenaryColor","isEnabled","catenary","drawToCanvas","chainLength","isDrawing","isPressing","scaleExtents","zoomExtents","attachViewChangeListener","applyView","_proto","componentDidMount","_this2","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","observer","handleCanvasResize","observe","initX","initY","update","both","addEventListener","componentDidUpdate","prevProps","setRadius","enablePanAndZoom","render","_this3","createElement","className","background","backgroundColor","touchAction","ref","container","isInterface","onMouseDown","undefined","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","disabled","mouseZoomFactor","default","propTypes","func","bool"],"sources":["C:/Users/SSAFY/Desktop/S08P12C106/최유경/testing-app/node_modules/react-canvas-draw/es/index.js"],"sourcesContent":["function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport CoordinateSystem, { IDENTITY } from \"./coordinateSystem\";\nimport drawImage from \"./drawImage\";\nimport { DefaultState } from \"./interactionStateMachine\";\nimport makePassiveEventOption from \"./makePassiveEventOption\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nvar canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n}; // The order of these is important: grid > drawing > temp > interface\n\nvar canvasTypes = [\"grid\", \"drawing\", \"temp\", \"interface\"];\nvar dimensionsPropTypes = process.env.NODE_ENV !== \"production\" ? PropTypes.oneOfType([PropTypes.number, PropTypes.string]) : {};\nvar boundsProp = process.env.NODE_ENV !== \"production\" ? PropTypes.shape({\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n}) : {};\n\nvar CanvasDraw = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(CanvasDraw, _PureComponent);\n\n  ///// public API /////////////////////////////////////////////////////////////\n  function CanvasDraw(props) {\n    var _this;\n\n    _this = _PureComponent.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"undo\", function () {\n      var lines = [];\n\n      if (_this.lines.length) {\n        lines = _this.lines.slice(0, -1);\n      } else if (_this.erasedLines.length) {\n        lines = _this.erasedLines.pop();\n      }\n\n      _this.clearExceptErasedLines();\n\n      _this.simulateDrawingLines({\n        lines: lines,\n        immediate: true\n      });\n\n      _this.triggerOnChange();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"eraseAll\", function () {\n      _this.erasedLines.push([].concat(_this.lines));\n\n      _this.clearExceptErasedLines();\n\n      _this.triggerOnChange();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.erasedLines = [];\n\n      _this.clearExceptErasedLines();\n\n      _this.resetView();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetView\", function () {\n      return _this.coordSystem.resetView();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setView\", function (view) {\n      return _this.coordSystem.setView(view);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSaveData\", function () {\n      // Construct and return the stringified saveData object\n      return JSON.stringify({\n        lines: _this.lines,\n        width: _this.props.canvasWidth,\n        height: _this.props.canvasHeight\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDataURL\", function (fileType, useBgImage, backgroundColour) {\n      // Get a reference to the \"drawing\" layer of the canvas\n      var canvasToExport = _this.canvas.drawing;\n      var context = canvasToExport.getContext(\"2d\"); //cache height and width\n\n      var width = canvasToExport.width;\n      var height = canvasToExport.height; //get the current ImageData for the canvas\n\n      var storedImageData = context.getImageData(0, 0, width, height); //store the current globalCompositeOperation\n\n      var compositeOperation = context.globalCompositeOperation; //set to draw behind current content\n\n      context.globalCompositeOperation = \"destination-over\"; // If \"useBgImage\" has been set to true, this takes precedence over the background colour parameter\n\n      if (useBgImage) {\n        if (!_this.props.imgSrc) return \"Background image source not set\"; // Write the background image\n\n        _this.drawImage();\n      } else if (backgroundColour != null) {\n        //set background color\n        context.fillStyle = backgroundColour; //fill entire canvas with background colour\n\n        context.fillRect(0, 0, width, height);\n      } // If the file type has not been specified, default to PNG\n\n\n      if (!fileType) fileType = \"png\"; // Export the canvas to data URL\n\n      var imageData = canvasToExport.toDataURL(\"image/\" + fileType); //clear the canvas\n\n      context.clearRect(0, 0, width, height); //restore it with original / cached ImageData\n\n      context.putImageData(storedImageData, 0, 0); //reset the globalCompositeOperation to what it was\n\n      context.globalCompositeOperation = compositeOperation;\n      return imageData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadSaveData\", function (saveData, immediate) {\n      if (immediate === void 0) {\n        immediate = _this.props.immediateLoading;\n      }\n\n      if (typeof saveData !== \"string\") {\n        throw new Error(\"saveData needs to be of type string!\");\n      }\n\n      var _JSON$parse = JSON.parse(saveData),\n          lines = _JSON$parse.lines,\n          width = _JSON$parse.width,\n          height = _JSON$parse.height;\n\n      if (!lines || typeof lines.push !== \"function\") {\n        throw new Error(\"saveData.lines needs to be an array!\");\n      }\n\n      _this.clear();\n\n      if (width === _this.props.canvasWidth && height === _this.props.canvasHeight) {\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: immediate\n        });\n      } else {\n        // we need to rescale the lines based on saved & current dimensions\n        var scaleX = _this.props.canvasWidth / width;\n        var scaleY = _this.props.canvasHeight / height;\n        var scaleAvg = (scaleX + scaleY) / 2;\n\n        _this.simulateDrawingLines({\n          lines: lines.map(function (line) {\n            return _extends({}, line, {\n              points: line.points.map(function (p) {\n                return {\n                  x: p.x * scaleX,\n                  y: p.y * scaleY\n                };\n              }),\n              brushRadius: line.brushRadius * scaleAvg\n            });\n          }),\n          immediate: immediate\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      _this.canvasObserver.unobserve(_this.canvasContainer);\n\n      _this.canvas[\"interface\"] && _this.canvas[\"interface\"].removeEventListener(\"wheel\", _this.handleWheel);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleWheel\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleMouseWheel(e, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawStart\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleDrawStart(e, _assertThisInitialized(_this));\n      _this.mouseHasMoved = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawMove\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleDrawMove(e, _assertThisInitialized(_this));\n      _this.mouseHasMoved = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawEnd\", function (e) {\n      _this.interactionSM = _this.interactionSM.handleDrawEnd(e, _assertThisInitialized(_this));\n      _this.mouseHasMoved = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"applyView\", function () {\n      if (!_this.ctx.drawing) {\n        return;\n      }\n\n      canvasTypes.map(function (name) {\n        return _this.ctx[name];\n      }).forEach(function (ctx) {\n        _this.clearWindow(ctx);\n\n        var m = _this.coordSystem.transformMatrix;\n        ctx.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\n      });\n\n      if (!_this.deferRedrawOnViewChange) {\n        _this.drawGrid(_this.ctx.grid);\n\n        _this.redrawImage();\n\n        _this.loop({\n          once: true\n        });\n\n        var lines = _this.lines;\n        _this.lines = [];\n\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCanvasResize\", function (entries) {\n      var saveData = _this.getSaveData();\n\n      _this.deferRedrawOnViewChange = true;\n\n      try {\n        for (var _iterator = _createForOfIteratorHelperLoose(entries), _step; !(_step = _iterator()).done;) {\n          var entry = _step.value;\n          var _entry$contentRect = entry.contentRect,\n              width = _entry$contentRect.width,\n              height = _entry$contentRect.height;\n\n          _this.setCanvasSize(_this.canvas[\"interface\"], width, height);\n\n          _this.setCanvasSize(_this.canvas.drawing, width, height);\n\n          _this.setCanvasSize(_this.canvas.temp, width, height);\n\n          _this.setCanvasSize(_this.canvas.grid, width, height);\n\n          _this.coordSystem.documentSize = {\n            width: width,\n            height: height\n          };\n\n          _this.drawGrid(_this.ctx.grid);\n\n          _this.drawImage();\n\n          _this.loop({\n            once: true\n          });\n        }\n\n        _this.loadSaveData(saveData, true);\n      } finally {\n        _this.deferRedrawOnViewChange = false;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clampPointToDocument\", function (point) {\n      if (_this.props.clampLinesToDocument) {\n        return {\n          x: Math.max(Math.min(point.x, _this.props.canvasWidth), 0),\n          y: Math.max(Math.min(point.y, _this.props.canvasHeight), 0)\n        };\n      } else {\n        return point;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redrawImage\", function () {\n      _this.image && _this.image.complete && drawImage({\n        ctx: _this.ctx.grid,\n        img: _this.image\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"simulateDrawingLines\", function (_ref) {\n      var lines = _ref.lines,\n          immediate = _ref.immediate;\n      // Simulate live-drawing of the loaded lines\n      // TODO use a generator\n      var curTime = 0;\n      var timeoutGap = immediate ? 0 : _this.props.loadTimeOffset;\n      lines.forEach(function (line) {\n        var points = line.points,\n            brushColor = line.brushColor,\n            brushRadius = line.brushRadius; // Draw all at once if immediate flag is set, instead of using setTimeout\n\n        if (immediate) {\n          // Draw the points\n          _this.drawPoints({\n            points: points,\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          }); // Save line with the drawn points\n\n\n          _this.points = points;\n\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n\n          return;\n        } // Use timeout to draw\n\n\n        var _loop = function _loop(i) {\n          curTime += timeoutGap;\n          window.setTimeout(function () {\n            _this.drawPoints({\n              points: points.slice(0, i + 1),\n              brushColor: brushColor,\n              brushRadius: brushRadius\n            });\n          }, curTime);\n        };\n\n        for (var i = 1; i < points.length; i++) {\n          _loop(i);\n        }\n\n        curTime += timeoutGap;\n        window.setTimeout(function () {\n          // Save this line with its props instead of this.props\n          _this.points = points;\n\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n        }, curTime);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCanvasSize\", function (canvas, width, height) {\n      canvas.width = width;\n      canvas.height = height;\n      canvas.style.width = width;\n      canvas.style.height = height;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawPoints\", function (_ref2) {\n      var points = _ref2.points,\n          brushColor = _ref2.brushColor,\n          brushRadius = _ref2.brushRadius;\n      _this.ctx.temp.lineJoin = \"round\";\n      _this.ctx.temp.lineCap = \"round\";\n      _this.ctx.temp.strokeStyle = brushColor;\n\n      _this.clearWindow(_this.ctx.temp);\n\n      _this.ctx.temp.lineWidth = brushRadius * 2;\n      var p1 = points[0];\n      var p2 = points[1];\n\n      _this.ctx.temp.moveTo(p2.x, p2.y);\n\n      _this.ctx.temp.beginPath();\n\n      for (var i = 1, len = points.length; i < len; i++) {\n        // we pick the point between pi+1 & pi+2 as the\n        // end point and p1 as our control point\n        var midPoint = midPointBtw(p1, p2);\n\n        _this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = points[i];\n        p2 = points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n\n      _this.ctx.temp.lineTo(p1.x, p1.y);\n\n      _this.ctx.temp.stroke();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveLine\", function (_temp) {\n      var _ref3 = _temp === void 0 ? {} : _temp,\n          brushColor = _ref3.brushColor,\n          brushRadius = _ref3.brushRadius;\n\n      if (_this.points.length < 2) return; // Save as new line\n\n      _this.lines.push({\n        points: [].concat(_this.points),\n        brushColor: brushColor || _this.props.brushColor,\n        brushRadius: brushRadius || _this.props.brushRadius\n      }); // Reset points array\n\n\n      _this.points.length = 0; // Copy the line to the drawing canvas\n\n      _this.inClientSpace([_this.ctx.drawing, _this.ctx.temp], function () {\n        _this.ctx.drawing.drawImage(_this.canvas.temp, 0, 0, _this.canvas.drawing.width, _this.canvas.drawing.height);\n      }); // Clear the temporary line-drawing canvas\n\n\n      _this.clearWindow(_this.ctx.temp);\n\n      _this.triggerOnChange();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerOnChange\", function () {\n      _this.props.onChange && _this.props.onChange(_assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearWindow\", function (ctx) {\n      _this.inClientSpace([ctx], function () {\n        return ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearExceptErasedLines\", function () {\n      _this.lines = [];\n      _this.valuesChanged = true;\n\n      _this.clearWindow(_this.ctx.drawing);\n\n      _this.clearWindow(_this.ctx.temp);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loop\", function (_temp2) {\n      var _ref4 = _temp2 === void 0 ? {} : _temp2,\n          _ref4$once = _ref4.once,\n          once = _ref4$once === void 0 ? false : _ref4$once;\n\n      if (_this.mouseHasMoved || _this.valuesChanged) {\n        var pointer = _this.lazy.getPointerCoordinates();\n\n        var brush = _this.lazy.getBrushCoordinates();\n\n        _this.drawInterface(_this.ctx[\"interface\"], pointer, brush);\n\n        _this.mouseHasMoved = false;\n        _this.valuesChanged = false;\n      }\n\n      if (!once) {\n        window.requestAnimationFrame(function () {\n          _this.loop();\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inClientSpace\", function (ctxs, action) {\n      ctxs.forEach(function (ctx) {\n        ctx.save();\n        ctx.setTransform(IDENTITY.a, IDENTITY.b, IDENTITY.c, IDENTITY.d, IDENTITY.e, IDENTITY.f);\n      });\n\n      try {\n        action();\n      } finally {\n        ctxs.forEach(function (ctx) {\n          return ctx.restore();\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawImage\", function () {\n      if (!_this.props.imgSrc) return; // Load the image\n\n      _this.image = new Image(); // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\n\n      _this.image.crossOrigin = \"anonymous\"; // Draw the image once loaded\n\n      _this.image.onload = _this.redrawImage;\n      _this.image.src = _this.props.imgSrc;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawGrid\", function (ctx) {\n      if (_this.props.hideGrid) return;\n\n      _this.clearWindow(ctx);\n\n      var gridSize = 25;\n      var _this$coordSystem$can = _this.coordSystem.canvasBounds,\n          viewMin = _this$coordSystem$can.viewMin,\n          viewMax = _this$coordSystem$can.viewMax;\n      var minx = Math.floor(viewMin.x / gridSize - 1) * gridSize;\n      var miny = Math.floor(viewMin.y / gridSize - 1) * gridSize;\n      var maxx = viewMax.x + gridSize;\n      var maxy = viewMax.y + gridSize;\n      ctx.beginPath();\n      ctx.setLineDash([5, 1]);\n      ctx.setLineDash([]);\n      ctx.strokeStyle = _this.props.gridColor;\n      ctx.lineWidth = _this.props.gridLineWidth;\n\n      if (!_this.props.hideGridX) {\n        var countX = minx;\n        var gridSizeX = _this.props.gridSizeX;\n\n        while (countX < maxx) {\n          countX += gridSizeX;\n          ctx.moveTo(countX, miny);\n          ctx.lineTo(countX, maxy);\n        }\n\n        ctx.stroke();\n      }\n\n      if (!_this.props.hideGridY) {\n        var countY = miny;\n        var gridSizeY = _this.props.gridSizeY;\n\n        while (countY < maxy) {\n          countY += gridSizeY;\n          ctx.moveTo(minx, countY);\n          ctx.lineTo(maxx, countY);\n        }\n\n        ctx.stroke();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawInterface\", function (ctx, pointer, brush) {\n      if (_this.props.hideInterface) return;\n\n      _this.clearWindow(ctx); // Draw brush preview\n\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.brushColor;\n      ctx.arc(brush.x, brush.y, _this.props.brushRadius, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw mouse point (the one directly at the cursor)\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw catenary\n\n      if (_this.lazy.isEnabled()) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.setLineDash([2, 4]);\n        ctx.strokeStyle = _this.props.catenaryColor;\n\n        _this.catenary.drawToCanvas(_this.ctx[\"interface\"], brush, pointer, _this.chainLength);\n\n        ctx.stroke();\n      } // Draw brush point (the one in the middle of the brush preview)\n\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n      ctx.fill();\n    });\n\n    _this.canvas = {};\n    _this.ctx = {};\n    _this.catenary = new Catenary();\n    _this.points = [];\n    _this.lines = [];\n    _this.erasedLines = [];\n    _this.mouseHasMoved = true;\n    _this.valuesChanged = true;\n    _this.isDrawing = false;\n    _this.isPressing = false;\n    _this.deferRedrawOnViewChange = false;\n    _this.interactionSM = new DefaultState();\n    _this.coordSystem = new CoordinateSystem({\n      scaleExtents: props.zoomExtents,\n      documentSize: {\n        width: props.canvasWidth,\n        height: props.canvasHeight\n      }\n    });\n\n    _this.coordSystem.attachViewChangeListener(_this.applyView.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  var _proto = CanvasDraw.prototype;\n\n  ///// private API ////////////////////////////////////////////////////////////\n  ///// React Lifecycle\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n    this.canvasObserver = new ResizeObserver(function (entries, observer) {\n      return _this2.handleCanvasResize(entries, observer);\n    });\n    this.canvasObserver.observe(this.canvasContainer);\n    this.drawImage();\n    this.loop();\n    window.setTimeout(function () {\n      var initX = window.innerWidth / 2;\n      var initY = window.innerHeight / 2;\n\n      _this2.lazy.update({\n        x: initX - _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: true\n      });\n\n      _this2.lazy.update({\n        x: initX + _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: false\n      });\n\n      _this2.mouseHasMoved = true;\n      _this2.valuesChanged = true;\n\n      _this2.clearExceptErasedLines(); // Load saveData from prop if it exists\n\n\n      if (_this2.props.saveData) {\n        _this2.loadSaveData(_this2.props.saveData);\n      }\n    }, 100); // Attach our wheel event listener here instead of in the render so that we can specify a non-passive listener.\n    // This is necessary to prevent the default event action on chrome.\n    // https://github.com/facebook/react/issues/14856\n\n    this.canvas[\"interface\"] && this.canvas[\"interface\"].addEventListener(\"wheel\", this.handleWheel, makePassiveEventOption());\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n\n    this.coordSystem.scaleExtents = this.props.zoomExtents;\n\n    if (!this.props.enablePanAndZoom) {\n      this.coordSystem.resetView();\n    }\n\n    if (prevProps.imgSrc !== this.props.imgSrc) {\n      this.drawImage();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.className,\n      style: _extends({\n        display: \"block\",\n        background: this.props.backgroundColor,\n        touchAction: \"none\",\n        width: this.props.canvasWidth,\n        height: this.props.canvasHeight\n      }, this.props.style),\n      ref: function ref(container) {\n        if (container) {\n          _this3.canvasContainer = container;\n        }\n      }\n    }, canvasTypes.map(function (name) {\n      var isInterface = name === \"interface\";\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        key: name,\n        ref: function ref(canvas) {\n          if (canvas) {\n            _this3.canvas[name] = canvas;\n            _this3.ctx[name] = canvas.getContext(\"2d\");\n\n            if (isInterface) {\n              _this3.coordSystem.canvas = canvas;\n            }\n          }\n        },\n        style: _extends({}, canvasStyle),\n        onMouseDown: isInterface ? _this3.handleDrawStart : undefined,\n        onMouseMove: isInterface ? _this3.handleDrawMove : undefined,\n        onMouseUp: isInterface ? _this3.handleDrawEnd : undefined,\n        onMouseOut: isInterface ? _this3.handleDrawEnd : undefined,\n        onTouchStart: isInterface ? _this3.handleDrawStart : undefined,\n        onTouchMove: isInterface ? _this3.handleDrawMove : undefined,\n        onTouchEnd: isInterface ? _this3.handleDrawEnd : undefined,\n        onTouchCancel: isInterface ? _this3.handleDrawEnd : undefined\n      });\n    }));\n  } ///// Event Handlers\n  ;\n\n  return CanvasDraw;\n}(PureComponent);\n\n_defineProperty(CanvasDraw, \"defaultProps\", {\n  onChange: null,\n  loadTimeOffset: 5,\n  lazyRadius: 12,\n  brushRadius: 10,\n  brushColor: \"#444\",\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  backgroundColor: \"#FFF\",\n  hideGrid: false,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false,\n  gridSizeX: 25,\n  gridSizeY: 25,\n  gridLineWidth: 0.5,\n  hideGridX: false,\n  hideGridY: false,\n  enablePanAndZoom: false,\n  mouseZoomFactor: 0.01,\n  zoomExtents: {\n    min: 0.33,\n    max: 3\n  },\n  clampLinesToDocument: false\n});\n\nexport { CanvasDraw as default };\nCanvasDraw.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  onChange: PropTypes.func,\n  loadTimeOffset: PropTypes.number,\n  lazyRadius: PropTypes.number,\n  brushRadius: PropTypes.number,\n  brushColor: PropTypes.string,\n  catenaryColor: PropTypes.string,\n  gridColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  hideGrid: PropTypes.bool,\n  canvasWidth: dimensionsPropTypes,\n  canvasHeight: dimensionsPropTypes,\n  disabled: PropTypes.bool,\n  imgSrc: PropTypes.string,\n  saveData: PropTypes.string,\n  immediateLoading: PropTypes.bool,\n  hideInterface: PropTypes.bool,\n  gridSizeX: PropTypes.number,\n  gridSizeY: PropTypes.number,\n  gridLineWidth: PropTypes.number,\n  hideGridX: PropTypes.bool,\n  hideGridY: PropTypes.bool,\n  enablePanAndZoom: PropTypes.bool,\n  mouseZoomFactor: PropTypes.number,\n  zoomExtents: boundsProp,\n  clampLinesToDocument: PropTypes.bool\n} : {};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}