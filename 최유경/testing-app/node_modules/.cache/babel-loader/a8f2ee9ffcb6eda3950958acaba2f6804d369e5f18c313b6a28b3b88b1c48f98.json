{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}(); /**\n      * Given two points and a length, calculate and draw the catenary.\n      * \n      * JavaScript implementation:\n      * Copyright (c) 2018 Jan Hug <me@dulnan.net>\n      * Released under the MIT license.\n      * \n      * ----------------------------------------------------------------------------\n      * \n      * Original ActionScript implementation:\n      * Copyright poiasd ( http://wonderfl.net/user/poiasd )\n      * MIT License ( http://www.opensource.org/licenses/mit-license.php )\n      * Downloaded from: http://wonderfl.net/c/8Bnl\n      * \n      * ----------------------------------------------------------------------------\n      * \n      * Archived by and downloaded from:\n      * http://wa.zozuar.org/code.php?c=8Bnl\n      */\n\nvar _Point = require('./Point');\nvar _Point2 = _interopRequireDefault(_Point);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar EPSILON = 1e-6;\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$segments = _ref.segments,\n      segments = _ref$segments === undefined ? 50 : _ref$segments,\n      _ref$iterationLimit = _ref.iterationLimit,\n      iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n    _classCallCheck(this, Catenary);\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n      var isFlipped = this.p1.x > this.p2.x;\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n      var distance = p1.getDistanceTo(p2);\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n      var temp = [];\n      context.moveTo(data[0], data[1]);\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n      return temp;\n    }\n  }]);\n  return Catenary;\n}();\nexports.default = Catenary;","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Point","require","_Point2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","EPSILON","Catenary","_ref","arguments","undefined","_ref$segments","segments","_ref$iterationLimit","iterationLimit","p1","p2","drawToCanvas","context","point1","point2","chainLength","update","isFlipped","x","distance","getDistanceTo","curveData","isStraight","diff","h","v","y","a","getCatenaryParameter","Math","log","cosh","offsetX","offsetY","getCurve","mx","my","drawLine","drawCurve","limit","m","sqrt","acosh","prevx","count","abs","sinh","data","d","push","moveTo","lineTo","ox","oy","temp","quadraticCurveTo"],"sources":["C:/Users/SSAFY/Desktop/S08P12C106/최유경/testing-app/node_modules/catenary-curve/lib/Catenary.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\niven two points and a length, calculate and draw the catenary.\nnavaScript implementation:\nopyright (c) 2018 Jan Hug <me@dulnan.net>\neleased under the MIT license.\nnnnriginal ActionScript implementation:\nopyright poiasd ( http://wonderfl.net/user/poiasd )\nicense ( http://www.opensource.org/licenses/mit-license.php )\nownloaded from: http://wonderfl.net/c/8Bnl\nnnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Archived by and downloaded from:\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * http://wa.zozuar.org/code.php?c=8Bnl\nn\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n\n      var isFlipped = this.p1.x > this.p2.x;\n\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n\n      var distance = p1.getDistanceTo(p2);\n\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n\n      var temp = [];\n\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}