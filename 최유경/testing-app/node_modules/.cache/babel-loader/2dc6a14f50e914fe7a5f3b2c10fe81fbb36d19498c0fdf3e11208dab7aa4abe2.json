{"ast":null,"code":"/*\nCopyright (c) 2020 Daybrush\nname: moveable-helper\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/moveable-helper.git\nversion: 0.4.0\n*/\nimport { Frame } from 'scenejs';\nimport { isString } from '@daybrush/utils';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction getOrderIndex(frame, functionName) {\n  var orders = frame.getOrders([\"transform\"]) || [];\n  return orders.indexOf(functionName);\n}\nvar MoveableHelper = /*#__PURE__*/\nfunction () {\n  function MoveableHelper(options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    this.map = new Map();\n    this.onBeforeRenderStart = function (e) {\n      var frame = _this.testFrame(e);\n      e.setTransform(frame.toCSSObject().transform || \"\");\n    };\n    this.onBeforeRenderGroupStart = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onBeforeRenderStart(ev);\n      });\n    };\n    this.onDragStart = function (e) {\n      var frame = _this.testFrame(e);\n      if (!frame) {\n        return false;\n      }\n      _this.setTranasform(e, frame, \"translate\");\n    };\n    this.onDrag = function (e) {\n      _this.testDrag(e);\n      _this.testRender(e.target);\n    };\n    this.onDragGroupStart = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onDragStart(ev);\n      });\n    };\n    this.onDragGroup = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onDrag(ev);\n      });\n    };\n    this.onResizeStart = function (e) {\n      e.dragStart && _this.onDragStart(e.dragStart);\n      e.setOrigin([\"%\", \"%\"]);\n    };\n    this.onResize = function (e) {\n      _this.testResize(e);\n      _this.testRender(e.target);\n    };\n    this.onResizeGroupStart = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onResizeStart(ev);\n      });\n    };\n    this.onResizeGroup = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onResize(ev);\n      });\n    };\n    this.onScaleStart = function (e) {\n      var frame = _this.testFrame(e);\n      if (!frame) {\n        return false;\n      }\n      _this.setTranasform(e, frame, \"scale\");\n      e.dragStart && _this.onDragStart(e.dragStart);\n    };\n    this.onScale = function (e) {\n      _this.testScale(e);\n      _this.testRender(e.target);\n    };\n    this.onScaleGroupStart = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onScaleStart(ev);\n      });\n    };\n    this.onScaleGroup = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onScale(ev);\n      });\n    };\n    this.onRotateStart = function (e) {\n      var frame = _this.testFrame(e);\n      if (!frame) {\n        return false;\n      }\n      _this.setTranasform(e, frame, \"rotate\");\n      e.dragStart && _this.onDragStart(e.dragStart);\n    };\n    this.onRotate = function (e) {\n      _this.testRotate(e);\n      _this.testRender(e.target);\n    };\n    this.onRotateGroupStart = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onRotateStart(ev);\n      });\n    };\n    this.onRotateGroup = function (e) {\n      e.events.forEach(function (ev) {\n        _this.onRotate(ev);\n      });\n    };\n    this.onClip = function (e) {\n      var frame = _this.testFrame(e);\n      if (e.clipType === \"rect\") {\n        frame.set(\"clip\", e.clipStyle);\n      } else {\n        frame.set(\"clip-path\", e.clipStyle);\n      }\n      _this.testRender(e.target);\n    };\n    this.onDragOriginStart = function (e) {\n      e.dragStart && _this.onDragStart(e.dragStart);\n    };\n    this.onDragOrigin = function (e) {\n      var frame = _this.testFrame(e);\n      frame.set(\"transform-origin\", e.transformOrigin);\n      _this.testDrag(e.drag);\n      _this.testRender(e.target);\n    };\n    this.onRound = function (e) {\n      var frame = _this.testFrame(e);\n      frame.set(\"border-radius\", e.borderRadius);\n      _this.testRender(e.target);\n    };\n    this.onWarpStart = function (e) {\n      var frame = _this.testFrame(e);\n      if (!frame) {\n        return false;\n      }\n      _this.setTranasform(e, frame, \"matrix3d\");\n    };\n    this.onWarp = function (e) {\n      var frame = _this.testFrame(e);\n      frame.set(\"transform\", \"matrix3d\", e.matrix.join(\", \"));\n      _this.testRender(e.target);\n    };\n    this.onRender = function (e) {\n      var target = e.target;\n      var frame = _this.getFrame(target);\n      if (!target || !frame) {\n        return;\n      }\n      _this.render(target, frame);\n    };\n    this.options = __assign({\n      useBeforeRender: false,\n      useRender: false,\n      createAuto: true\n    }, options);\n  }\n  var __proto = MoveableHelper.prototype;\n  MoveableHelper.create = function (options) {\n    return new MoveableHelper(options);\n  };\n  __proto.render = function (target, frame) {\n    if (frame === void 0) {\n      frame = this.getFrame(target);\n    }\n    target.style.cssText += frame.toCSS();\n    if (\"ownerSVGElement\" in target && target.tagName.toLowerCase() !== \"svg\") {\n      var names = frame.getOrders([\"transform\"]);\n      target.setAttribute(\"transform\", names.map(function (name) {\n        var value = frame.get(\"transform\", name);\n        return name + \"(\" + value.split(\",\").map(function (v) {\n          return parseFloat(v);\n        }).join(\", \") + \")\";\n      }).join(\" \"));\n    }\n  };\n  __proto.clear = function () {\n    this.map.clear();\n  };\n  __proto.getTargets = function () {\n    return this.map.keys();\n  };\n  __proto.getFrames = function () {\n    return this.map.values();\n  };\n  __proto.getFrame = function (el) {\n    return this.map.get(el);\n  };\n  __proto.setFrame = function (el, frame) {\n    return this.map.set(el, frame);\n  };\n  __proto.removeFrame = function (el) {\n    this.map.delete(el);\n  };\n  __proto.createFrame = function (el, properites) {\n    if (properites === void 0) {\n      properites = {};\n    }\n    var frame = new Frame({\n      transform: {\n        translate: \"0px, 0px\",\n        rotate: \"0deg\",\n        scale: \"1, 1\"\n      }\n    });\n    frame.set(properites);\n    this.map.set(el, frame);\n    return frame;\n  };\n  __proto.setElements = function (selector) {\n    var elements = isString(selector) ? document.querySelectorAll(selector) : selector;\n    var length = elements.length;\n    var map = this.map;\n    for (var i = 0; i < length; ++i) {\n      var el = elements[i];\n      if (map.has(el)) {\n        continue;\n      }\n      this.createFrame(el);\n    }\n  };\n  __proto.testFrame = function (e) {\n    var target = e.target;\n    var frame = this.getFrame(target);\n    if (frame) {\n      return frame;\n    }\n    if (!this.options.createAuto) {\n      if (e.stop) {\n        e.stop();\n        return;\n      }\n    }\n    return this.createFrame(target);\n  };\n  __proto.testDrag = function (e) {\n    var target = e.target;\n    var translate = e.translate;\n    var frame = this.getFrame(target);\n    var tx = translate[0] + \"px\";\n    var ty = translate[1] + \"px\";\n    if (frame.has(\"transform\", \"translate\")) {\n      frame.set(\"transform\", \"translate\", tx + \",\" + ty);\n    } else {\n      frame.set(\"transform\", \"translateX\", tx);\n      frame.set(\"transform\", \"translateY\", ty);\n    }\n  };\n  __proto.testResize = function (e) {\n    var target = e.target;\n    var frame = this.getFrame(target);\n    frame.set(\"width\", e.width + \"px\");\n    frame.set(\"height\", e.height + \"px\");\n    this.testDrag(e.drag);\n  };\n  __proto.testScale = function (e) {\n    var frame = this.testFrame(e);\n    var scale = e.scale;\n    this.testDrag(e.drag);\n    frame.set(\"transform\", \"scale\", scale[0] + \",\" + scale[1]);\n  };\n  __proto.testRotate = function (e) {\n    var frame = this.testFrame(e);\n    var rotate = e.rotate;\n    this.testDrag(e.drag);\n    frame.set(\"transform\", \"rotate\", rotate + \"deg\");\n  };\n  __proto.testRender = function (target, frame) {\n    if (frame === void 0) {\n      frame = this.getFrame(target);\n    }\n    if (!this.options.useRender) {\n      this.render(target, frame);\n    }\n  };\n  __proto.setTranasform = function (e, frame, functionName) {\n    var orderIndex = getOrderIndex(frame, functionName);\n    if (this.options.useBeforeRender) {\n      e.setTransformIndex(orderIndex);\n    } else {\n      e.setTransform(frame.toCSSObject().transform || [], orderIndex);\n    }\n  };\n  return MoveableHelper;\n}();\nexport default MoveableHelper;","map":{"version":3,"mappings":"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","names":["getOrderIndex","frame","functionName","orders","getOrders","indexOf","options","Map","e","_this","testFrame","setTransform","toCSSObject","transform","events","forEach","onBeforeRenderStart","ev","setTranasform","testDrag","testRender","target","onDragStart","onDrag","dragStart","setOrigin","testResize","onResizeStart","onResize","testScale","onScaleStart","onScale","testRotate","onRotateStart","onRotate","clipType","set","clipStyle","transformOrigin","drag","borderRadius","matrix","join","getFrame","render","useBeforeRender","useRender","createAuto","MoveableHelper","__proto","style","cssText","toCSS","tagName","toLowerCase","names","setAttribute","map","value","get","name","split","v","clear","keys","values","el","delete","properites","Frame","translate","rotate","scale","selector","elements","isString","document","querySelectorAll","length","i","has","createFrame","stop","tx","ty","width","height","orderIndex","setTransformIndex"],"sources":["C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\moveable-helper\\src\\utils.ts","C:\\Users\\SSAFY\\Desktop\\S08P12C106\\최유경\\testing-app\\node_modules\\moveable-helper\\src\\MoveableHelper.ts"],"sourcesContent":["import { Frame } from \"scenejs\";\n\nexport function getOrderIndex(frame: Frame, functionName: string) {\n    const orders = frame.getOrders([\"transform\"]) || [];\n    return orders.indexOf(functionName);\n}\n","import { Frame } from \"scenejs\";\nimport {\n    OnDragStart, OnDrag, OnRender, OnResize, OnResizeStart,\n    OnScaleStart, OnScale, OnRotate, OnRotateStart,\n    OnDragGroupStart, OnDragGroup, OnResizeGroupStart,\n    OnResizeGroup, OnScaleGroupStart, OnScaleGroup,\n    OnRotateGroupStart, OnRotateGroup, OnWarp, OnWarpStart,\n    OnClip, OnDragOriginStart, OnDragOrigin, OnRound, OnBeforeRenderStart,\n    OnTransformStartEvent, OnBeforeRenderGroupStart\n} from \"react-moveable/declaration/types\";\nimport { MoveableHelperOptions } from \"./types\";\nimport { isString } from \"@daybrush/utils\";\nimport { getOrderIndex } from \"./utils\";\n\n\nexport default class MoveableHelper {\n    public static create(options: Partial<MoveableHelperOptions> ) {\n        return new MoveableHelper(options);\n    }\n    public options: Partial<MoveableHelperOptions>;\n    constructor(options: Partial<MoveableHelperOptions> = {}) {\n        this.options = {\n            useBeforeRender: false,\n            useRender: false,\n            createAuto: true,\n            ...options,\n        };\n    }\n    public map = new Map<HTMLElement | SVGElement, Frame>();\n    public render(target: HTMLElement | SVGElement, frame: Frame = this.getFrame(target)) {\n        target.style.cssText += frame.toCSS();\n        if (\"ownerSVGElement\" in target && target.tagName.toLowerCase() !== \"svg\") {\n            const names = frame.getOrders([\"transform\"]);\n            target.setAttribute(\"transform\", names.map(name => {\n                const value = frame.get(\"transform\", name);\n\n                return `${name}(${value.split(\",\").map(v => parseFloat(v)).join(\", \")})`;\n            }).join(\" \"));\n        }\n    }\n    public clear() {\n        this.map.clear();\n    }\n    public getTargets() {\n        return this.map.keys();\n    }\n    public getFrames() {\n        return this.map.values();\n    }\n    public getFrame(el: HTMLElement | SVGElement) {\n        return this.map.get(el);\n    }\n    public setFrame(el: HTMLElement | SVGElement, frame: Frame) {\n        return this.map.set(el, frame);\n    }\n    public removeFrame(el: HTMLElement | SVGElement) {\n        this.map.delete(el);\n    }\n\n    public createFrame(el: HTMLElement | SVGElement, properites = {}) {\n        const frame = new Frame({\n            transform: {\n                translate: \"0px, 0px\",\n                rotate: \"0deg\",\n                scale: \"1, 1\",\n            },\n        })\n\n        frame.set(properites);\n\n        this.map.set(el, frame);\n        return frame;\n    }\n    public setElements(selector: { [key: number]: HTMLElement | SVGElement, length: number } | string) {\n        const elements = isString(selector) ? document.querySelectorAll<HTMLElement | SVGElement>(selector) : selector;\n        const length = elements.length;\n        const map = this.map;\n\n        for (let i = 0; i < length; ++i) {\n            const el = elements[i];\n            if (map.has(el)) {\n                continue;\n            }\n            this.createFrame(el);\n        }\n    }\n    public onBeforeRenderStart = (e: OnBeforeRenderStart) => {\n        const frame = this.testFrame(e);\n\n        e.setTransform(frame.toCSSObject().transform || \"\");\n    }\n    public onBeforeRenderGroupStart = (e: OnBeforeRenderGroupStart) => {\n        e.events.forEach(ev => {\n            this.onBeforeRenderStart(ev);\n        });\n    }\n    public onDragStart = (e: OnDragStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        this.setTranasform(e, frame, \"translate\");\n    }\n    public onDrag = (e: OnDrag) => {\n        this.testDrag(e);\n        this.testRender(e.target);\n    }\n    public onDragGroupStart = (e: OnDragGroupStart) => {\n        e.events.forEach(ev => {\n            this.onDragStart(ev);\n        });\n    }\n    public onDragGroup = (e: OnDragGroup) => {\n        e.events.forEach(ev => {\n            this.onDrag(ev);\n        });\n    }\n    public onResizeStart = (e: OnResizeStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n        e.setOrigin([\"%\", \"%\"]);\n    }\n    public onResize = (e: OnResize) => {\n        this.testResize(e);\n        this.testRender(e.target);\n    }\n    public onResizeGroupStart = (e: OnResizeGroupStart) => {\n        e.events.forEach(ev => {\n            this.onResizeStart(ev);\n        });\n    }\n    public onResizeGroup = (e: OnResizeGroup) => {\n        e.events.forEach(ev => {\n            this.onResize(ev);\n        });\n    }\n    public onScaleStart = (e: OnScaleStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n\n        this.setTranasform(e, frame, \"scale\");\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onScale = (e: OnScale) => {\n        this.testScale(e);\n        this.testRender(e.target);\n    }\n    public onScaleGroupStart = (e: OnScaleGroupStart) => {\n        e.events.forEach(ev => {\n            this.onScaleStart(ev);\n        });\n    }\n    public onScaleGroup = (e: OnScaleGroup) => {\n        e.events.forEach(ev => {\n            this.onScale(ev);\n        });\n    }\n    public onRotateStart = (e: OnRotateStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n\n        this.setTranasform(e, frame, \"rotate\");\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onRotate = (e: OnRotate) => {\n        this.testRotate(e);\n        this.testRender(e.target);\n    }\n    public onRotateGroupStart = (e: OnRotateGroupStart) => {\n        e.events.forEach(ev => {\n            this.onRotateStart(ev);\n        });\n    }\n    public onRotateGroup = (e: OnRotateGroup) => {\n        e.events.forEach(ev => {\n            this.onRotate(ev);\n        });\n    }\n    public onClip = (e: OnClip) => {\n        const frame = this.testFrame(e);\n        if (e.clipType === \"rect\") {\n            frame.set(\"clip\", e.clipStyle);\n        } else {\n            frame.set(\"clip-path\", e.clipStyle);\n        }\n        this.testRender(e.target);\n    }\n    public onDragOriginStart = (e: OnDragOriginStart) => {\n        e.dragStart && this.onDragStart(e.dragStart);\n    }\n    public onDragOrigin = (e: OnDragOrigin) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform-origin\", e.transformOrigin);\n        this.testDrag(e.drag);\n        this.testRender(e.target);\n    }\n    public onRound = (e: OnRound) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"border-radius\", e.borderRadius);\n        this.testRender(e.target);\n    }\n    public onWarpStart = (e: OnWarpStart) => {\n        const frame = this.testFrame(e);\n\n        if (!frame) {\n            return false;\n        }\n        this.setTranasform(e, frame, \"matrix3d\");\n    }\n    public onWarp = (e: OnWarp) => {\n        const frame = this.testFrame(e);\n\n        frame.set(\"transform\", \"matrix3d\", e.matrix.join(\", \"));\n        this.testRender(e.target);\n    }\n    public onRender = (e: OnRender) => {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        if (!target || !frame) {\n            return;\n        }\n        this.render(target, frame);\n    }\n    private testFrame(e: any) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n\n        if (frame) {\n            return frame;\n        }\n        if (!this.options.createAuto) {\n            if (e.stop) {\n                e.stop();\n                return;\n            }\n        }\n        return this.createFrame(target);\n    }\n    private testDrag(e: OnDrag) {\n        const target = e.target;\n        const translate = e.translate;\n\n        const frame = this.getFrame(target);\n        const tx = `${translate[0]}px`;\n        const ty = `${translate[1]}px`;\n\n        if (frame.has(\"transform\", \"translate\")) {\n            frame.set(\"transform\", \"translate\", `${tx},${ty}`);\n        } else {\n            frame.set(\"transform\", \"translateX\", tx);\n            frame.set(\"transform\", \"translateY\", ty);\n        }\n    }\n    private testResize(e: OnResize) {\n        const target = e.target;\n        const frame = this.getFrame(target);\n\n        frame.set(\"width\", `${e.width}px`);\n        frame.set(\"height\", `${e.height}px`);\n\n        this.testDrag(e.drag);\n    }\n    private testScale(e: OnScale) {\n        const frame = this.testFrame(e);\n        const scale = e.scale;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"scale\", `${scale[0]},${scale[1]}`);\n    }\n    private testRotate(e: OnRotate) {\n        const frame = this.testFrame(e);\n        const rotate = e.rotate;\n\n        this.testDrag(e.drag);\n        frame.set(\"transform\", \"rotate\", `${rotate}deg`);\n    }\n    private testRender(target, frame = this.getFrame(target)) {\n        if (!this.options.useRender) {\n            this.render(target, frame);\n        }\n    }\n    private setTranasform(e: OnTransformStartEvent, frame: Frame, functionName: string) {\n        const orderIndex = getOrderIndex(frame, functionName);\n        if (this.options.useBeforeRender) {\n            e.setTransformIndex(orderIndex);\n        } else {\n            e.setTransform(frame.toCSSObject().transform || [], orderIndex);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}